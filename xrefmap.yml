### YamlMime:XRefMap
sorted: true
references:
- uid: Monadic
  name: Monadic
  href: api/Monadic.html
  commentId: N:Monadic
  fullName: Monadic
  nameWithType: Monadic
- uid: Monadic.DictionaryExtensions
  name: DictionaryExtensions
  href: api/Monadic.DictionaryExtensions.html
  commentId: T:Monadic.DictionaryExtensions
  fullName: Monadic.DictionaryExtensions
  nameWithType: DictionaryExtensions
- uid: Monadic.DictionaryExtensions.GetValueOrNone*
  name: GetValueOrNone
  href: api/Monadic.DictionaryExtensions.GetValueOrNone.html
  commentId: Overload:Monadic.DictionaryExtensions.GetValueOrNone
  fullName: Monadic.DictionaryExtensions.GetValueOrNone
  nameWithType: DictionaryExtensions.GetValueOrNone
- uid: Monadic.DictionaryExtensions.GetValueOrNone``2(System.Collections.Generic.IDictionary{``0,``1},``0)
  name: GetValueOrNone<TKey, TValue>(IDictionary<TKey, TValue>, TKey)
  href: api/Monadic.DictionaryExtensions.GetValueOrNone.html#Monadic_DictionaryExtensions_GetValueOrNone__2_System_Collections_Generic_IDictionary___0___1____0_
  commentId: M:Monadic.DictionaryExtensions.GetValueOrNone``2(System.Collections.Generic.IDictionary{``0,``1},``0)
  name.vb: GetValueOrNone(Of TKey, TValue)(IDictionary(Of TKey, TValue), TKey)
  fullName: Monadic.DictionaryExtensions.GetValueOrNone<TKey, TValue>(System.Collections.Generic.IDictionary<TKey, TValue>, TKey)
  fullName.vb: Monadic.DictionaryExtensions.GetValueOrNone(Of TKey, TValue)(System.Collections.Generic.IDictionary(Of TKey, TValue), TKey)
  nameWithType: DictionaryExtensions.GetValueOrNone<TKey, TValue>(IDictionary<TKey, TValue>, TKey)
  nameWithType.vb: DictionaryExtensions.GetValueOrNone(Of TKey, TValue)(IDictionary(Of TKey, TValue), TKey)
- uid: Monadic.E
  name: E
  href: api/Monadic.E.html
  commentId: T:Monadic.E
  fullName: Monadic.E
  nameWithType: E
- uid: Monadic.E.Left*
  name: Left
  href: api/Monadic.E.Left.html
  commentId: Overload:Monadic.E.Left
  fullName: Monadic.E.Left
  nameWithType: E.Left
- uid: Monadic.E.Left``2(``0)
  name: Left<TLeft, TRight>(TLeft)
  href: api/Monadic.E.Left.html#Monadic_E_Left__2___0_
  commentId: M:Monadic.E.Left``2(``0)
  name.vb: Left(Of TLeft, TRight)(TLeft)
  fullName: Monadic.E.Left<TLeft, TRight>(TLeft)
  fullName.vb: Monadic.E.Left(Of TLeft, TRight)(TLeft)
  nameWithType: E.Left<TLeft, TRight>(TLeft)
  nameWithType.vb: E.Left(Of TLeft, TRight)(TLeft)
- uid: Monadic.E.Right*
  name: Right
  href: api/Monadic.E.Right.html
  commentId: Overload:Monadic.E.Right
  fullName: Monadic.E.Right
  nameWithType: E.Right
- uid: Monadic.E.Right``2(``1)
  name: Right<TLeft, TRight>(TRight)
  href: api/Monadic.E.Right.html#Monadic_E_Right__2___1_
  commentId: M:Monadic.E.Right``2(``1)
  name.vb: Right(Of TLeft, TRight)(TRight)
  fullName: Monadic.E.Right<TLeft, TRight>(TRight)
  fullName.vb: Monadic.E.Right(Of TLeft, TRight)(TRight)
  nameWithType: E.Right<TLeft, TRight>(TRight)
  nameWithType.vb: E.Right(Of TLeft, TRight)(TRight)
- uid: Monadic.EitherExtensions
  name: EitherExtensions
  href: api/Monadic.EitherExtensions.html
  commentId: T:Monadic.EitherExtensions
  fullName: Monadic.EitherExtensions
  nameWithType: EitherExtensions
- uid: Monadic.Either`2
  name: Either<TLeft, TRight>
  href: api/Monadic.Either-2.html
  commentId: T:Monadic.Either`2
  name.vb: Either(Of TLeft, TRight)
  fullName: Monadic.Either<TLeft, TRight>
  fullName.vb: Monadic.Either(Of TLeft, TRight)
  nameWithType: Either<TLeft, TRight>
  nameWithType.vb: Either(Of TLeft, TRight)
- uid: Monadic.Either`2.#ctor
  name: Either()
  href: api/Monadic.Either-2.-ctor.html#Monadic_Either_2__ctor
  commentId: M:Monadic.Either`2.#ctor
  name.vb: New()
  fullName: Monadic.Either<TLeft, TRight>.Either()
  fullName.vb: Monadic.Either(Of TLeft, TRight).New()
  nameWithType: Either<TLeft, TRight>.Either()
  nameWithType.vb: Either(Of TLeft, TRight).New()
- uid: Monadic.Either`2.#ctor(Monadic.Either{`0,`1})
  name: Either(Either<TLeft, TRight>)
  href: api/Monadic.Either-2.-ctor.html#Monadic_Either_2__ctor_Monadic_Either__0__1__
  commentId: M:Monadic.Either`2.#ctor(Monadic.Either{`0,`1})
  name.vb: New(Either(Of TLeft, TRight))
  fullName: Monadic.Either<TLeft, TRight>.Either(Monadic.Either<TLeft, TRight>)
  fullName.vb: Monadic.Either(Of TLeft, TRight).New(Monadic.Either(Of TLeft, TRight))
  nameWithType: Either<TLeft, TRight>.Either(Either<TLeft, TRight>)
  nameWithType.vb: Either(Of TLeft, TRight).New(Either(Of TLeft, TRight))
- uid: Monadic.Either`2.#ctor*
  name: Either
  href: api/Monadic.Either-2.-ctor.html
  commentId: Overload:Monadic.Either`2.#ctor
  name.vb: New
  fullName: Monadic.Either<TLeft, TRight>.Either
  fullName.vb: Monadic.Either(Of TLeft, TRight).New
  nameWithType: Either<TLeft, TRight>.Either
  nameWithType.vb: Either(Of TLeft, TRight).New
- uid: Monadic.Either`2.AsTask
  name: AsTask()
  href: api/Monadic.Either-2.AsTask.html#Monadic_Either_2_AsTask
  commentId: M:Monadic.Either`2.AsTask
  fullName: Monadic.Either<TLeft, TRight>.AsTask()
  fullName.vb: Monadic.Either(Of TLeft, TRight).AsTask()
  nameWithType: Either<TLeft, TRight>.AsTask()
  nameWithType.vb: Either(Of TLeft, TRight).AsTask()
- uid: Monadic.Either`2.AsTask*
  name: AsTask
  href: api/Monadic.Either-2.AsTask.html
  commentId: Overload:Monadic.Either`2.AsTask
  fullName: Monadic.Either<TLeft, TRight>.AsTask
  fullName.vb: Monadic.Either(Of TLeft, TRight).AsTask
  nameWithType: Either<TLeft, TRight>.AsTask
  nameWithType.vb: Either(Of TLeft, TRight).AsTask
- uid: Monadic.Either`2.EqualityContract
  name: EqualityContract
  href: api/Monadic.Either-2.EqualityContract.html#Monadic_Either_2_EqualityContract
  commentId: P:Monadic.Either`2.EqualityContract
  fullName: Monadic.Either<TLeft, TRight>.EqualityContract
  fullName.vb: Monadic.Either(Of TLeft, TRight).EqualityContract
  nameWithType: Either<TLeft, TRight>.EqualityContract
  nameWithType.vb: Either(Of TLeft, TRight).EqualityContract
- uid: Monadic.Either`2.EqualityContract*
  name: EqualityContract
  href: api/Monadic.Either-2.EqualityContract.html
  commentId: Overload:Monadic.Either`2.EqualityContract
  fullName: Monadic.Either<TLeft, TRight>.EqualityContract
  fullName.vb: Monadic.Either(Of TLeft, TRight).EqualityContract
  nameWithType: Either<TLeft, TRight>.EqualityContract
  nameWithType.vb: Either(Of TLeft, TRight).EqualityContract
- uid: Monadic.Either`2.Equals(Monadic.Either{`0,`1})
  name: Equals(Either<TLeft, TRight>?)
  href: api/Monadic.Either-2.Equals.html#Monadic_Either_2_Equals_Monadic_Either__0__1__
  commentId: M:Monadic.Either`2.Equals(Monadic.Either{`0,`1})
  name.vb: Equals(Either(Of TLeft, TRight))
  fullName: Monadic.Either<TLeft, TRight>.Equals(Monadic.Either<TLeft, TRight>?)
  fullName.vb: Monadic.Either(Of TLeft, TRight).Equals(Monadic.Either(Of TLeft, TRight))
  nameWithType: Either<TLeft, TRight>.Equals(Either<TLeft, TRight>?)
  nameWithType.vb: Either(Of TLeft, TRight).Equals(Either(Of TLeft, TRight))
- uid: Monadic.Either`2.Equals(System.Object)
  name: Equals(object?)
  href: api/Monadic.Either-2.Equals.html#Monadic_Either_2_Equals_System_Object_
  commentId: M:Monadic.Either`2.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Monadic.Either<TLeft, TRight>.Equals(object?)
  fullName.vb: Monadic.Either(Of TLeft, TRight).Equals(Object)
  nameWithType: Either<TLeft, TRight>.Equals(object?)
  nameWithType.vb: Either(Of TLeft, TRight).Equals(Object)
- uid: Monadic.Either`2.Equals*
  name: Equals
  href: api/Monadic.Either-2.Equals.html
  commentId: Overload:Monadic.Either`2.Equals
  fullName: Monadic.Either<TLeft, TRight>.Equals
  fullName.vb: Monadic.Either(Of TLeft, TRight).Equals
  nameWithType: Either<TLeft, TRight>.Equals
  nameWithType.vb: Either(Of TLeft, TRight).Equals
- uid: Monadic.Either`2.GetEnumerator
  name: GetEnumerator()
  href: api/Monadic.Either-2.GetEnumerator.html#Monadic_Either_2_GetEnumerator
  commentId: M:Monadic.Either`2.GetEnumerator
  fullName: Monadic.Either<TLeft, TRight>.GetEnumerator()
  fullName.vb: Monadic.Either(Of TLeft, TRight).GetEnumerator()
  nameWithType: Either<TLeft, TRight>.GetEnumerator()
  nameWithType.vb: Either(Of TLeft, TRight).GetEnumerator()
- uid: Monadic.Either`2.GetEnumerator*
  name: GetEnumerator
  href: api/Monadic.Either-2.GetEnumerator.html
  commentId: Overload:Monadic.Either`2.GetEnumerator
  fullName: Monadic.Either<TLeft, TRight>.GetEnumerator
  fullName.vb: Monadic.Either(Of TLeft, TRight).GetEnumerator
  nameWithType: Either<TLeft, TRight>.GetEnumerator
  nameWithType.vb: Either(Of TLeft, TRight).GetEnumerator
- uid: Monadic.Either`2.GetHashCode
  name: GetHashCode()
  href: api/Monadic.Either-2.GetHashCode.html#Monadic_Either_2_GetHashCode
  commentId: M:Monadic.Either`2.GetHashCode
  fullName: Monadic.Either<TLeft, TRight>.GetHashCode()
  fullName.vb: Monadic.Either(Of TLeft, TRight).GetHashCode()
  nameWithType: Either<TLeft, TRight>.GetHashCode()
  nameWithType.vb: Either(Of TLeft, TRight).GetHashCode()
- uid: Monadic.Either`2.GetHashCode*
  name: GetHashCode
  href: api/Monadic.Either-2.GetHashCode.html
  commentId: Overload:Monadic.Either`2.GetHashCode
  fullName: Monadic.Either<TLeft, TRight>.GetHashCode
  fullName.vb: Monadic.Either(Of TLeft, TRight).GetHashCode
  nameWithType: Either<TLeft, TRight>.GetHashCode
  nameWithType.vb: Either(Of TLeft, TRight).GetHashCode
- uid: Monadic.Either`2.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Monadic.Either-2.PrintMembers.html#Monadic_Either_2_PrintMembers_System_Text_StringBuilder_
  commentId: M:Monadic.Either`2.PrintMembers(System.Text.StringBuilder)
  fullName: Monadic.Either<TLeft, TRight>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Monadic.Either(Of TLeft, TRight).PrintMembers(System.Text.StringBuilder)
  nameWithType: Either<TLeft, TRight>.PrintMembers(StringBuilder)
  nameWithType.vb: Either(Of TLeft, TRight).PrintMembers(StringBuilder)
- uid: Monadic.Either`2.PrintMembers*
  name: PrintMembers
  href: api/Monadic.Either-2.PrintMembers.html
  commentId: Overload:Monadic.Either`2.PrintMembers
  fullName: Monadic.Either<TLeft, TRight>.PrintMembers
  fullName.vb: Monadic.Either(Of TLeft, TRight).PrintMembers
  nameWithType: Either<TLeft, TRight>.PrintMembers
  nameWithType.vb: Either(Of TLeft, TRight).PrintMembers
- uid: Monadic.Either`2.ToString
  name: ToString()
  href: api/Monadic.Either-2.ToString.html#Monadic_Either_2_ToString
  commentId: M:Monadic.Either`2.ToString
  fullName: Monadic.Either<TLeft, TRight>.ToString()
  fullName.vb: Monadic.Either(Of TLeft, TRight).ToString()
  nameWithType: Either<TLeft, TRight>.ToString()
  nameWithType.vb: Either(Of TLeft, TRight).ToString()
- uid: Monadic.Either`2.ToString*
  name: ToString
  href: api/Monadic.Either-2.ToString.html
  commentId: Overload:Monadic.Either`2.ToString
  fullName: Monadic.Either<TLeft, TRight>.ToString
  fullName.vb: Monadic.Either(Of TLeft, TRight).ToString
  nameWithType: Either<TLeft, TRight>.ToString
  nameWithType.vb: Either(Of TLeft, TRight).ToString
- uid: Monadic.Either`2.op_Equality(Monadic.Either{`0,`1},Monadic.Either{`0,`1})
  name: operator ==(Either<TLeft, TRight>?, Either<TLeft, TRight>?)
  href: api/Monadic.Either-2.op_Equality.html#Monadic_Either_2_op_Equality_Monadic_Either__0__1__Monadic_Either__0__1__
  commentId: M:Monadic.Either`2.op_Equality(Monadic.Either{`0,`1},Monadic.Either{`0,`1})
  name.vb: =(Either(Of TLeft, TRight), Either(Of TLeft, TRight))
  fullName: Monadic.Either<TLeft, TRight>.operator ==(Monadic.Either<TLeft, TRight>?, Monadic.Either<TLeft, TRight>?)
  fullName.vb: Monadic.Either(Of TLeft, TRight).=(Monadic.Either(Of TLeft, TRight), Monadic.Either(Of TLeft, TRight))
  nameWithType: Either<TLeft, TRight>.operator ==(Either<TLeft, TRight>?, Either<TLeft, TRight>?)
  nameWithType.vb: Either(Of TLeft, TRight).=(Either(Of TLeft, TRight), Either(Of TLeft, TRight))
- uid: Monadic.Either`2.op_Equality*
  name: operator ==
  href: api/Monadic.Either-2.op_Equality.html
  commentId: Overload:Monadic.Either`2.op_Equality
  name.vb: =
  fullName: Monadic.Either<TLeft, TRight>.operator ==
  fullName.vb: Monadic.Either(Of TLeft, TRight).=
  nameWithType: Either<TLeft, TRight>.operator ==
  nameWithType.vb: Either(Of TLeft, TRight).=
- uid: Monadic.Either`2.op_Inequality(Monadic.Either{`0,`1},Monadic.Either{`0,`1})
  name: operator !=(Either<TLeft, TRight>?, Either<TLeft, TRight>?)
  href: api/Monadic.Either-2.op_Inequality.html#Monadic_Either_2_op_Inequality_Monadic_Either__0__1__Monadic_Either__0__1__
  commentId: M:Monadic.Either`2.op_Inequality(Monadic.Either{`0,`1},Monadic.Either{`0,`1})
  name.vb: <>(Either(Of TLeft, TRight), Either(Of TLeft, TRight))
  fullName: Monadic.Either<TLeft, TRight>.operator !=(Monadic.Either<TLeft, TRight>?, Monadic.Either<TLeft, TRight>?)
  fullName.vb: Monadic.Either(Of TLeft, TRight).<>(Monadic.Either(Of TLeft, TRight), Monadic.Either(Of TLeft, TRight))
  nameWithType: Either<TLeft, TRight>.operator !=(Either<TLeft, TRight>?, Either<TLeft, TRight>?)
  nameWithType.vb: Either(Of TLeft, TRight).<>(Either(Of TLeft, TRight), Either(Of TLeft, TRight))
- uid: Monadic.Either`2.op_Inequality*
  name: operator !=
  href: api/Monadic.Either-2.op_Inequality.html
  commentId: Overload:Monadic.Either`2.op_Inequality
  name.vb: <>
  fullName: Monadic.Either<TLeft, TRight>.operator !=
  fullName.vb: Monadic.Either(Of TLeft, TRight).<>
  nameWithType: Either<TLeft, TRight>.operator !=
  nameWithType.vb: Either(Of TLeft, TRight).<>
- uid: Monadic.Either`2.{Clone}$
  name: <Clone>$()
  href: api/Monadic.Either-2.-Clone--.html#Monadic_Either_2__Clone__
  commentId: M:Monadic.Either`2.{Clone}$
  fullName: Monadic.Either<TLeft, TRight>.<Clone>$()
  fullName.vb: Monadic.Either(Of TLeft, TRight).<Clone>$()
  nameWithType: Either<TLeft, TRight>.<Clone>$()
  nameWithType.vb: Either(Of TLeft, TRight).<Clone>$()
- uid: Monadic.Either`2.{Clone}$*
  name: <Clone>$
  href: api/Monadic.Either-2.-Clone--.html
  commentId: Overload:Monadic.Either`2.{Clone}$
  fullName: Monadic.Either<TLeft, TRight>.<Clone>$
  fullName.vb: Monadic.Either(Of TLeft, TRight).<Clone>$
  nameWithType: Either<TLeft, TRight>.<Clone>$
  nameWithType.vb: Either(Of TLeft, TRight).<Clone>$
- uid: Monadic.EnumerableExtensions
  name: EnumerableExtensions
  href: api/Monadic.EnumerableExtensions.html
  commentId: T:Monadic.EnumerableExtensions
  fullName: Monadic.EnumerableExtensions
  nameWithType: EnumerableExtensions
- uid: Monadic.EnumerableExtensions.Bind*
  name: Bind
  href: api/Monadic.EnumerableExtensions.Bind.html
  commentId: Overload:Monadic.EnumerableExtensions.Bind
  fullName: Monadic.EnumerableExtensions.Bind
  nameWithType: EnumerableExtensions.Bind
- uid: Monadic.EnumerableExtensions.BindAsync*
  name: BindAsync
  href: api/Monadic.EnumerableExtensions.BindAsync.html
  commentId: Overload:Monadic.EnumerableExtensions.BindAsync
  fullName: Monadic.EnumerableExtensions.BindAsync
  nameWithType: EnumerableExtensions.BindAsync
- uid: Monadic.EnumerableExtensions.BindAsync``2(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,Monadic.Maybe{``1}})
  name: BindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Maybe<TReturn>>)
  href: api/Monadic.EnumerableExtensions.BindAsync.html#Monadic_EnumerableExtensions_BindAsync__2_System_Collections_Generic_IAsyncEnumerable_Monadic_Maybe___0___System_Func___0_Monadic_Maybe___1___
  commentId: M:Monadic.EnumerableExtensions.BindAsync``2(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,Monadic.Maybe{``1}})
  name.vb: BindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Maybe(Of TReturn)))
  fullName: Monadic.EnumerableExtensions.BindAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<Monadic.Maybe<T>>, System.Func<T, Monadic.Maybe<TReturn>>)
  fullName.vb: Monadic.EnumerableExtensions.BindAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, Monadic.Maybe(Of TReturn)))
  nameWithType: EnumerableExtensions.BindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Maybe<TReturn>>)
  nameWithType.vb: EnumerableExtensions.BindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Maybe(Of TReturn)))
- uid: Monadic.EnumerableExtensions.BindAsync``2(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}})
  name: BindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<Maybe<TReturn>>>)
  href: api/Monadic.EnumerableExtensions.BindAsync.html#Monadic_EnumerableExtensions_BindAsync__2_System_Collections_Generic_IAsyncEnumerable_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task_Monadic_Maybe___1____
  commentId: M:Monadic.EnumerableExtensions.BindAsync``2(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}})
  name.vb: BindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Maybe(Of TReturn))))
  fullName: Monadic.EnumerableExtensions.BindAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<Monadic.Maybe<TReturn>>>)
  fullName.vb: Monadic.EnumerableExtensions.BindAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Monadic.Maybe(Of TReturn))))
  nameWithType: EnumerableExtensions.BindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<Maybe<TReturn>>>)
  nameWithType.vb: EnumerableExtensions.BindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Maybe(Of TReturn))))
- uid: Monadic.EnumerableExtensions.BindAsync``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}})
  name: BindAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<Maybe<TReturn>>>)
  href: api/Monadic.EnumerableExtensions.BindAsync.html#Monadic_EnumerableExtensions_BindAsync__2_System_Collections_Generic_IEnumerable_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task_Monadic_Maybe___1____
  commentId: M:Monadic.EnumerableExtensions.BindAsync``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}})
  name.vb: BindAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Maybe(Of TReturn))))
  fullName: Monadic.EnumerableExtensions.BindAsync<T, TReturn>(System.Collections.Generic.IEnumerable<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<Monadic.Maybe<TReturn>>>)
  fullName.vb: Monadic.EnumerableExtensions.BindAsync(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Monadic.Maybe(Of TReturn))))
  nameWithType: EnumerableExtensions.BindAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<Maybe<TReturn>>>)
  nameWithType.vb: EnumerableExtensions.BindAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Maybe(Of TReturn))))
- uid: Monadic.EnumerableExtensions.Bind``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,Monadic.Maybe{``1}})
  name: Bind<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Maybe<TReturn>>)
  href: api/Monadic.EnumerableExtensions.Bind.html#Monadic_EnumerableExtensions_Bind__2_System_Collections_Generic_IEnumerable_Monadic_Maybe___0___System_Func___0_Monadic_Maybe___1___
  commentId: M:Monadic.EnumerableExtensions.Bind``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,Monadic.Maybe{``1}})
  name.vb: Bind(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Maybe(Of TReturn)))
  fullName: Monadic.EnumerableExtensions.Bind<T, TReturn>(System.Collections.Generic.IEnumerable<Monadic.Maybe<T>>, System.Func<T, Monadic.Maybe<TReturn>>)
  fullName.vb: Monadic.EnumerableExtensions.Bind(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, Monadic.Maybe(Of TReturn)))
  nameWithType: EnumerableExtensions.Bind<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Maybe<TReturn>>)
  nameWithType.vb: EnumerableExtensions.Bind(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Maybe(Of TReturn)))
- uid: Monadic.EnumerableExtensions.ElementAtOrNone*
  name: ElementAtOrNone
  href: api/Monadic.EnumerableExtensions.ElementAtOrNone.html
  commentId: Overload:Monadic.EnumerableExtensions.ElementAtOrNone
  fullName: Monadic.EnumerableExtensions.ElementAtOrNone
  nameWithType: EnumerableExtensions.ElementAtOrNone
- uid: Monadic.EnumerableExtensions.ElementAtOrNone``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: ElementAtOrNone<T>(IEnumerable<T>, int)
  href: api/Monadic.EnumerableExtensions.ElementAtOrNone.html#Monadic_EnumerableExtensions_ElementAtOrNone__1_System_Collections_Generic_IEnumerable___0__System_Int32_
  commentId: M:Monadic.EnumerableExtensions.ElementAtOrNone``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name.vb: ElementAtOrNone(Of T)(IEnumerable(Of T), Integer)
  fullName: Monadic.EnumerableExtensions.ElementAtOrNone<T>(System.Collections.Generic.IEnumerable<T>, int)
  fullName.vb: Monadic.EnumerableExtensions.ElementAtOrNone(Of T)(System.Collections.Generic.IEnumerable(Of T), Integer)
  nameWithType: EnumerableExtensions.ElementAtOrNone<T>(IEnumerable<T>, int)
  nameWithType.vb: EnumerableExtensions.ElementAtOrNone(Of T)(IEnumerable(Of T), Integer)
- uid: Monadic.EnumerableExtensions.Filter*
  name: Filter
  href: api/Monadic.EnumerableExtensions.Filter.html
  commentId: Overload:Monadic.EnumerableExtensions.Filter
  fullName: Monadic.EnumerableExtensions.Filter
  nameWithType: EnumerableExtensions.Filter
- uid: Monadic.EnumerableExtensions.FilterAsync*
  name: FilterAsync
  href: api/Monadic.EnumerableExtensions.FilterAsync.html
  commentId: Overload:Monadic.EnumerableExtensions.FilterAsync
  fullName: Monadic.EnumerableExtensions.FilterAsync
  nameWithType: EnumerableExtensions.FilterAsync
- uid: Monadic.EnumerableExtensions.FilterAsync``1(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}})
  name: FilterAsync<T>(IAsyncEnumerable<Maybe<T>>)
  href: api/Monadic.EnumerableExtensions.FilterAsync.html#Monadic_EnumerableExtensions_FilterAsync__1_System_Collections_Generic_IAsyncEnumerable_Monadic_Maybe___0___
  commentId: M:Monadic.EnumerableExtensions.FilterAsync``1(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}})
  name.vb: FilterAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)))
  fullName: Monadic.EnumerableExtensions.FilterAsync<T>(System.Collections.Generic.IAsyncEnumerable<Monadic.Maybe<T>>)
  fullName.vb: Monadic.EnumerableExtensions.FilterAsync(Of T)(System.Collections.Generic.IAsyncEnumerable(Of Monadic.Maybe(Of T)))
  nameWithType: EnumerableExtensions.FilterAsync<T>(IAsyncEnumerable<Maybe<T>>)
  nameWithType.vb: EnumerableExtensions.FilterAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)))
- uid: Monadic.EnumerableExtensions.FilterAsync``1(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Boolean})
  name: FilterAsync<T>(IAsyncEnumerable<Maybe<T>>, Func<T, bool>)
  href: api/Monadic.EnumerableExtensions.FilterAsync.html#Monadic_EnumerableExtensions_FilterAsync__1_System_Collections_Generic_IAsyncEnumerable_Monadic_Maybe___0___System_Func___0_System_Boolean__
  commentId: M:Monadic.EnumerableExtensions.FilterAsync``1(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Boolean})
  name.vb: FilterAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Boolean))
  fullName: Monadic.EnumerableExtensions.FilterAsync<T>(System.Collections.Generic.IAsyncEnumerable<Monadic.Maybe<T>>, System.Func<T, bool>)
  fullName.vb: Monadic.EnumerableExtensions.FilterAsync(Of T)(System.Collections.Generic.IAsyncEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, Boolean))
  nameWithType: EnumerableExtensions.FilterAsync<T>(IAsyncEnumerable<Maybe<T>>, Func<T, bool>)
  nameWithType.vb: EnumerableExtensions.FilterAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Boolean))
- uid: Monadic.EnumerableExtensions.FilterAsync``1(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: FilterAsync<T>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>)
  href: api/Monadic.EnumerableExtensions.FilterAsync.html#Monadic_EnumerableExtensions_FilterAsync__1_System_Collections_Generic_IAsyncEnumerable_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Monadic.EnumerableExtensions.FilterAsync``1(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: FilterAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)))
  fullName: Monadic.EnumerableExtensions.FilterAsync<T>(System.Collections.Generic.IAsyncEnumerable<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Monadic.EnumerableExtensions.FilterAsync(Of T)(System.Collections.Generic.IAsyncEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: EnumerableExtensions.FilterAsync<T>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>)
  nameWithType.vb: EnumerableExtensions.FilterAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)))
- uid: Monadic.EnumerableExtensions.FilterAsync``1(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: FilterAsync<T>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>)
  href: api/Monadic.EnumerableExtensions.FilterAsync.html#Monadic_EnumerableExtensions_FilterAsync__1_System_Collections_Generic_IEnumerable_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Monadic.EnumerableExtensions.FilterAsync``1(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: FilterAsync(Of T)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)))
  fullName: Monadic.EnumerableExtensions.FilterAsync<T>(System.Collections.Generic.IEnumerable<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Monadic.EnumerableExtensions.FilterAsync(Of T)(System.Collections.Generic.IEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: EnumerableExtensions.FilterAsync<T>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>)
  nameWithType.vb: EnumerableExtensions.FilterAsync(Of T)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)))
- uid: Monadic.EnumerableExtensions.FilterBind*
  name: FilterBind
  href: api/Monadic.EnumerableExtensions.FilterBind.html
  commentId: Overload:Monadic.EnumerableExtensions.FilterBind
  fullName: Monadic.EnumerableExtensions.FilterBind
  nameWithType: EnumerableExtensions.FilterBind
- uid: Monadic.EnumerableExtensions.FilterBindAsync*
  name: FilterBindAsync
  href: api/Monadic.EnumerableExtensions.FilterBindAsync.html
  commentId: Overload:Monadic.EnumerableExtensions.FilterBindAsync
  fullName: Monadic.EnumerableExtensions.FilterBindAsync
  nameWithType: EnumerableExtensions.FilterBindAsync
- uid: Monadic.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}})
  name: FilterBindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Task<Maybe<TReturn>>>)
  href: api/Monadic.EnumerableExtensions.FilterBindAsync.html#Monadic_EnumerableExtensions_FilterBindAsync__2_System_Collections_Generic_IAsyncEnumerable_Monadic_Maybe___0___System_Func___0_System_Boolean__System_Func___0_System_Threading_Tasks_Task_Monadic_Maybe___1____
  commentId: M:Monadic.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}})
  name.vb: FilterBindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Task(Of Maybe(Of TReturn))))
  fullName: Monadic.EnumerableExtensions.FilterBindAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<Monadic.Maybe<T>>, System.Func<T, bool>, System.Func<T, System.Threading.Tasks.Task<Monadic.Maybe<TReturn>>>)
  fullName.vb: Monadic.EnumerableExtensions.FilterBindAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, Boolean), System.Func(Of T, System.Threading.Tasks.Task(Of Monadic.Maybe(Of TReturn))))
  nameWithType: EnumerableExtensions.FilterBindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Task<Maybe<TReturn>>>)
  nameWithType.vb: EnumerableExtensions.FilterBindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Task(Of Maybe(Of TReturn))))
- uid: Monadic.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,Monadic.Maybe{``1}})
  name: FilterBindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Maybe<TReturn>>)
  href: api/Monadic.EnumerableExtensions.FilterBindAsync.html#Monadic_EnumerableExtensions_FilterBindAsync__2_System_Collections_Generic_IAsyncEnumerable_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_Monadic_Maybe___1___
  commentId: M:Monadic.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,Monadic.Maybe{``1}})
  name.vb: FilterBindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Maybe(Of TReturn)))
  fullName: Monadic.EnumerableExtensions.FilterBindAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, Monadic.Maybe<TReturn>>)
  fullName.vb: Monadic.EnumerableExtensions.FilterBindAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, Monadic.Maybe(Of TReturn)))
  nameWithType: EnumerableExtensions.FilterBindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Maybe<TReturn>>)
  nameWithType.vb: EnumerableExtensions.FilterBindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Maybe(Of TReturn)))
- uid: Monadic.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}})
  name: FilterBindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Task<Maybe<TReturn>>>)
  href: api/Monadic.EnumerableExtensions.FilterBindAsync.html#Monadic_EnumerableExtensions_FilterBindAsync__2_System_Collections_Generic_IAsyncEnumerable_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_System_Threading_Tasks_Task_Monadic_Maybe___1____
  commentId: M:Monadic.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}})
  name.vb: FilterBindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of Maybe(Of TReturn))))
  fullName: Monadic.EnumerableExtensions.FilterBindAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, System.Threading.Tasks.Task<Monadic.Maybe<TReturn>>>)
  fullName.vb: Monadic.EnumerableExtensions.FilterBindAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, System.Threading.Tasks.Task(Of Monadic.Maybe(Of TReturn))))
  nameWithType: EnumerableExtensions.FilterBindAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Task<Maybe<TReturn>>>)
  nameWithType.vb: EnumerableExtensions.FilterBindAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of Maybe(Of TReturn))))
- uid: Monadic.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}})
  name: FilterBindAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Task<Maybe<TReturn>>>)
  href: api/Monadic.EnumerableExtensions.FilterBindAsync.html#Monadic_EnumerableExtensions_FilterBindAsync__2_System_Collections_Generic_IEnumerable_Monadic_Maybe___0___System_Func___0_System_Boolean__System_Func___0_System_Threading_Tasks_Task_Monadic_Maybe___1____
  commentId: M:Monadic.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}})
  name.vb: FilterBindAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Task(Of Maybe(Of TReturn))))
  fullName: Monadic.EnumerableExtensions.FilterBindAsync<T, TReturn>(System.Collections.Generic.IEnumerable<Monadic.Maybe<T>>, System.Func<T, bool>, System.Func<T, System.Threading.Tasks.Task<Monadic.Maybe<TReturn>>>)
  fullName.vb: Monadic.EnumerableExtensions.FilterBindAsync(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, Boolean), System.Func(Of T, System.Threading.Tasks.Task(Of Monadic.Maybe(Of TReturn))))
  nameWithType: EnumerableExtensions.FilterBindAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Task<Maybe<TReturn>>>)
  nameWithType.vb: EnumerableExtensions.FilterBindAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Task(Of Maybe(Of TReturn))))
- uid: Monadic.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,Monadic.Maybe{``1}})
  name: FilterBindAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Maybe<TReturn>>)
  href: api/Monadic.EnumerableExtensions.FilterBindAsync.html#Monadic_EnumerableExtensions_FilterBindAsync__2_System_Collections_Generic_IEnumerable_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_Monadic_Maybe___1___
  commentId: M:Monadic.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,Monadic.Maybe{``1}})
  name.vb: FilterBindAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Maybe(Of TReturn)))
  fullName: Monadic.EnumerableExtensions.FilterBindAsync<T, TReturn>(System.Collections.Generic.IEnumerable<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, Monadic.Maybe<TReturn>>)
  fullName.vb: Monadic.EnumerableExtensions.FilterBindAsync(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, Monadic.Maybe(Of TReturn)))
  nameWithType: EnumerableExtensions.FilterBindAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Maybe<TReturn>>)
  nameWithType.vb: EnumerableExtensions.FilterBindAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Maybe(Of TReturn)))
- uid: Monadic.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}})
  name: FilterBindAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Task<Maybe<TReturn>>>)
  href: api/Monadic.EnumerableExtensions.FilterBindAsync.html#Monadic_EnumerableExtensions_FilterBindAsync__2_System_Collections_Generic_IEnumerable_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_System_Threading_Tasks_Task_Monadic_Maybe___1____
  commentId: M:Monadic.EnumerableExtensions.FilterBindAsync``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}})
  name.vb: FilterBindAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of Maybe(Of TReturn))))
  fullName: Monadic.EnumerableExtensions.FilterBindAsync<T, TReturn>(System.Collections.Generic.IEnumerable<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, System.Threading.Tasks.Task<Monadic.Maybe<TReturn>>>)
  fullName.vb: Monadic.EnumerableExtensions.FilterBindAsync(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, System.Threading.Tasks.Task(Of Monadic.Maybe(Of TReturn))))
  nameWithType: EnumerableExtensions.FilterBindAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Task<Maybe<TReturn>>>)
  nameWithType.vb: EnumerableExtensions.FilterBindAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of Maybe(Of TReturn))))
- uid: Monadic.EnumerableExtensions.FilterBind``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,Monadic.Maybe{``1}})
  name: FilterBind<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Maybe<TReturn>>)
  href: api/Monadic.EnumerableExtensions.FilterBind.html#Monadic_EnumerableExtensions_FilterBind__2_System_Collections_Generic_IEnumerable_Monadic_Maybe___0___System_Func___0_System_Boolean__System_Func___0_Monadic_Maybe___1___
  commentId: M:Monadic.EnumerableExtensions.FilterBind``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,Monadic.Maybe{``1}})
  name.vb: FilterBind(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Maybe(Of TReturn)))
  fullName: Monadic.EnumerableExtensions.FilterBind<T, TReturn>(System.Collections.Generic.IEnumerable<Monadic.Maybe<T>>, System.Func<T, bool>, System.Func<T, Monadic.Maybe<TReturn>>)
  fullName.vb: Monadic.EnumerableExtensions.FilterBind(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, Boolean), System.Func(Of T, Monadic.Maybe(Of TReturn)))
  nameWithType: EnumerableExtensions.FilterBind<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Maybe<TReturn>>)
  nameWithType.vb: EnumerableExtensions.FilterBind(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Maybe(Of TReturn)))
- uid: Monadic.EnumerableExtensions.FilterMap*
  name: FilterMap
  href: api/Monadic.EnumerableExtensions.FilterMap.html
  commentId: Overload:Monadic.EnumerableExtensions.FilterMap
  fullName: Monadic.EnumerableExtensions.FilterMap
  nameWithType: EnumerableExtensions.FilterMap
- uid: Monadic.EnumerableExtensions.FilterMapAsync*
  name: FilterMapAsync
  href: api/Monadic.EnumerableExtensions.FilterMapAsync.html
  commentId: Overload:Monadic.EnumerableExtensions.FilterMapAsync
  fullName: Monadic.EnumerableExtensions.FilterMapAsync
  nameWithType: EnumerableExtensions.FilterMapAsync
- uid: Monadic.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: FilterMapAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Task<TReturn>>)
  href: api/Monadic.EnumerableExtensions.FilterMapAsync.html#Monadic_EnumerableExtensions_FilterMapAsync__2_System_Collections_Generic_IAsyncEnumerable_Monadic_Maybe___0___System_Func___0_System_Boolean__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: FilterMapAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.EnumerableExtensions.FilterMapAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<Monadic.Maybe<T>>, System.Func<T, bool>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.EnumerableExtensions.FilterMapAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, Boolean), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: EnumerableExtensions.FilterMapAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Task<TReturn>>)
  nameWithType.vb: EnumerableExtensions.FilterMapAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)))
- uid: Monadic.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: FilterMapAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Task<TReturn>>)
  href: api/Monadic.EnumerableExtensions.FilterMapAsync.html#Monadic_EnumerableExtensions_FilterMapAsync__2_System_Collections_Generic_IAsyncEnumerable_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: FilterMapAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.EnumerableExtensions.FilterMapAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.EnumerableExtensions.FilterMapAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: EnumerableExtensions.FilterMapAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Task<TReturn>>)
  nameWithType.vb: EnumerableExtensions.FilterMapAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)))
- uid: Monadic.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1})
  name: FilterMapAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, TReturn>)
  href: api/Monadic.EnumerableExtensions.FilterMapAsync.html#Monadic_EnumerableExtensions_FilterMapAsync__2_System_Collections_Generic_IAsyncEnumerable_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0___1__
  commentId: M:Monadic.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1})
  name.vb: FilterMapAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn))
  fullName: Monadic.EnumerableExtensions.FilterMapAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, TReturn>)
  fullName.vb: Monadic.EnumerableExtensions.FilterMapAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, TReturn))
  nameWithType: EnumerableExtensions.FilterMapAsync<T, TReturn>(IAsyncEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, TReturn>)
  nameWithType.vb: EnumerableExtensions.FilterMapAsync(Of T, TReturn)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn))
- uid: Monadic.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: FilterMapAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Task<TReturn>>)
  href: api/Monadic.EnumerableExtensions.FilterMapAsync.html#Monadic_EnumerableExtensions_FilterMapAsync__2_System_Collections_Generic_IEnumerable_Monadic_Maybe___0___System_Func___0_System_Boolean__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: FilterMapAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.EnumerableExtensions.FilterMapAsync<T, TReturn>(System.Collections.Generic.IEnumerable<Monadic.Maybe<T>>, System.Func<T, bool>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.EnumerableExtensions.FilterMapAsync(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, Boolean), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: EnumerableExtensions.FilterMapAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, bool>, Func<T, Task<TReturn>>)
  nameWithType.vb: EnumerableExtensions.FilterMapAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, Task(Of TReturn)))
- uid: Monadic.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: FilterMapAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Task<TReturn>>)
  href: api/Monadic.EnumerableExtensions.FilterMapAsync.html#Monadic_EnumerableExtensions_FilterMapAsync__2_System_Collections_Generic_IEnumerable_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: FilterMapAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.EnumerableExtensions.FilterMapAsync<T, TReturn>(System.Collections.Generic.IEnumerable<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.EnumerableExtensions.FilterMapAsync(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: EnumerableExtensions.FilterMapAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, Task<TReturn>>)
  nameWithType.vb: EnumerableExtensions.FilterMapAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, Task(Of TReturn)))
- uid: Monadic.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1})
  name: FilterMapAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, TReturn>)
  href: api/Monadic.EnumerableExtensions.FilterMapAsync.html#Monadic_EnumerableExtensions_FilterMapAsync__2_System_Collections_Generic_IEnumerable_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Func___0___1__
  commentId: M:Monadic.EnumerableExtensions.FilterMapAsync``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``0,``1})
  name.vb: FilterMapAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn))
  fullName: Monadic.EnumerableExtensions.FilterMapAsync<T, TReturn>(System.Collections.Generic.IEnumerable<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>, System.Func<T, TReturn>)
  fullName.vb: Monadic.EnumerableExtensions.FilterMapAsync(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)), System.Func(Of T, TReturn))
  nameWithType: EnumerableExtensions.FilterMapAsync<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, Task<bool>>, Func<T, TReturn>)
  nameWithType.vb: EnumerableExtensions.FilterMapAsync(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)), Func(Of T, TReturn))
- uid: Monadic.EnumerableExtensions.FilterMap``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,``1})
  name: FilterMap<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, bool>, Func<T, TReturn>)
  href: api/Monadic.EnumerableExtensions.FilterMap.html#Monadic_EnumerableExtensions_FilterMap__2_System_Collections_Generic_IEnumerable_Monadic_Maybe___0___System_Func___0_System_Boolean__System_Func___0___1__
  commentId: M:Monadic.EnumerableExtensions.FilterMap``2(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Boolean},System.Func{``0,``1})
  name.vb: FilterMap(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, TReturn))
  fullName: Monadic.EnumerableExtensions.FilterMap<T, TReturn>(System.Collections.Generic.IEnumerable<Monadic.Maybe<T>>, System.Func<T, bool>, System.Func<T, TReturn>)
  fullName.vb: Monadic.EnumerableExtensions.FilterMap(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, Boolean), System.Func(Of T, TReturn))
  nameWithType: EnumerableExtensions.FilterMap<T, TReturn>(IEnumerable<Maybe<T>>, Func<T, bool>, Func<T, TReturn>)
  nameWithType.vb: EnumerableExtensions.FilterMap(Of T, TReturn)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean), Func(Of T, TReturn))
- uid: Monadic.EnumerableExtensions.Filter``1(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}})
  name: Filter<T>(IEnumerable<Maybe<T>>)
  href: api/Monadic.EnumerableExtensions.Filter.html#Monadic_EnumerableExtensions_Filter__1_System_Collections_Generic_IEnumerable_Monadic_Maybe___0___
  commentId: M:Monadic.EnumerableExtensions.Filter``1(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}})
  name.vb: Filter(Of T)(IEnumerable(Of Maybe(Of T)))
  fullName: Monadic.EnumerableExtensions.Filter<T>(System.Collections.Generic.IEnumerable<Monadic.Maybe<T>>)
  fullName.vb: Monadic.EnumerableExtensions.Filter(Of T)(System.Collections.Generic.IEnumerable(Of Monadic.Maybe(Of T)))
  nameWithType: EnumerableExtensions.Filter<T>(IEnumerable<Maybe<T>>)
  nameWithType.vb: EnumerableExtensions.Filter(Of T)(IEnumerable(Of Maybe(Of T)))
- uid: Monadic.EnumerableExtensions.Filter``1(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Boolean})
  name: Filter<T>(IEnumerable<Maybe<T>>, Func<T, bool>)
  href: api/Monadic.EnumerableExtensions.Filter.html#Monadic_EnumerableExtensions_Filter__1_System_Collections_Generic_IEnumerable_Monadic_Maybe___0___System_Func___0_System_Boolean__
  commentId: M:Monadic.EnumerableExtensions.Filter``1(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Boolean})
  name.vb: Filter(Of T)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean))
  fullName: Monadic.EnumerableExtensions.Filter<T>(System.Collections.Generic.IEnumerable<Monadic.Maybe<T>>, System.Func<T, bool>)
  fullName.vb: Monadic.EnumerableExtensions.Filter(Of T)(System.Collections.Generic.IEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, Boolean))
  nameWithType: EnumerableExtensions.Filter<T>(IEnumerable<Maybe<T>>, Func<T, bool>)
  nameWithType.vb: EnumerableExtensions.Filter(Of T)(IEnumerable(Of Maybe(Of T)), Func(Of T, Boolean))
- uid: Monadic.EnumerableExtensions.FirstOrNone*
  name: FirstOrNone
  href: api/Monadic.EnumerableExtensions.FirstOrNone.html
  commentId: Overload:Monadic.EnumerableExtensions.FirstOrNone
  fullName: Monadic.EnumerableExtensions.FirstOrNone
  nameWithType: EnumerableExtensions.FirstOrNone
- uid: Monadic.EnumerableExtensions.FirstOrNone``1(System.Collections.Generic.IEnumerable{``0})
  name: FirstOrNone<T>(IEnumerable<T>)
  href: api/Monadic.EnumerableExtensions.FirstOrNone.html#Monadic_EnumerableExtensions_FirstOrNone__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Monadic.EnumerableExtensions.FirstOrNone``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: FirstOrNone(Of T)(IEnumerable(Of T))
  fullName: Monadic.EnumerableExtensions.FirstOrNone<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Monadic.EnumerableExtensions.FirstOrNone(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: EnumerableExtensions.FirstOrNone<T>(IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.FirstOrNone(Of T)(IEnumerable(Of T))
- uid: Monadic.EnumerableExtensions.Iterate*
  name: Iterate
  href: api/Monadic.EnumerableExtensions.Iterate.html
  commentId: Overload:Monadic.EnumerableExtensions.Iterate
  fullName: Monadic.EnumerableExtensions.Iterate
  nameWithType: EnumerableExtensions.Iterate
- uid: Monadic.EnumerableExtensions.IterateAsync*
  name: IterateAsync
  href: api/Monadic.EnumerableExtensions.IterateAsync.html
  commentId: Overload:Monadic.EnumerableExtensions.IterateAsync
  fullName: Monadic.EnumerableExtensions.IterateAsync
  nameWithType: EnumerableExtensions.IterateAsync
- uid: Monadic.EnumerableExtensions.IterateAsync``1(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Action{``0})
  name: IterateAsync<T>(IAsyncEnumerable<Maybe<T>>, Action<T>)
  href: api/Monadic.EnumerableExtensions.IterateAsync.html#Monadic_EnumerableExtensions_IterateAsync__1_System_Collections_Generic_IAsyncEnumerable_Monadic_Maybe___0___System_Action___0__
  commentId: M:Monadic.EnumerableExtensions.IterateAsync``1(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Action{``0})
  name.vb: IterateAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)), Action(Of T))
  fullName: Monadic.EnumerableExtensions.IterateAsync<T>(System.Collections.Generic.IAsyncEnumerable<Monadic.Maybe<T>>, System.Action<T>)
  fullName.vb: Monadic.EnumerableExtensions.IterateAsync(Of T)(System.Collections.Generic.IAsyncEnumerable(Of Monadic.Maybe(Of T)), System.Action(Of T))
  nameWithType: EnumerableExtensions.IterateAsync<T>(IAsyncEnumerable<Maybe<T>>, Action<T>)
  nameWithType.vb: EnumerableExtensions.IterateAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)), Action(Of T))
- uid: Monadic.EnumerableExtensions.IterateAsync``1(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task})
  name: IterateAsync<T>(IAsyncEnumerable<Maybe<T>>, Func<T, Task>)
  href: api/Monadic.EnumerableExtensions.IterateAsync.html#Monadic_EnumerableExtensions_IterateAsync__1_System_Collections_Generic_IAsyncEnumerable_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Monadic.EnumerableExtensions.IterateAsync``1(System.Collections.Generic.IAsyncEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: IterateAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task))
  fullName: Monadic.EnumerableExtensions.IterateAsync<T>(System.Collections.Generic.IAsyncEnumerable<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Monadic.EnumerableExtensions.IterateAsync(Of T)(System.Collections.Generic.IAsyncEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: EnumerableExtensions.IterateAsync<T>(IAsyncEnumerable<Maybe<T>>, Func<T, Task>)
  nameWithType.vb: EnumerableExtensions.IterateAsync(Of T)(IAsyncEnumerable(Of Maybe(Of T)), Func(Of T, Task))
- uid: Monadic.EnumerableExtensions.IterateAsync``1(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task})
  name: IterateAsync<T>(IEnumerable<Maybe<T>>, Func<T, Task>)
  href: api/Monadic.EnumerableExtensions.IterateAsync.html#Monadic_EnumerableExtensions_IterateAsync__1_System_Collections_Generic_IEnumerable_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Monadic.EnumerableExtensions.IterateAsync``1(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: IterateAsync(Of T)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task))
  fullName: Monadic.EnumerableExtensions.IterateAsync<T>(System.Collections.Generic.IEnumerable<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Monadic.EnumerableExtensions.IterateAsync(Of T)(System.Collections.Generic.IEnumerable(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: EnumerableExtensions.IterateAsync<T>(IEnumerable<Maybe<T>>, Func<T, Task>)
  nameWithType.vb: EnumerableExtensions.IterateAsync(Of T)(IEnumerable(Of Maybe(Of T)), Func(Of T, Task))
- uid: Monadic.EnumerableExtensions.Iterate``1(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Action{``0})
  name: Iterate<T>(IEnumerable<Maybe<T>>, Action<T>)
  href: api/Monadic.EnumerableExtensions.Iterate.html#Monadic_EnumerableExtensions_Iterate__1_System_Collections_Generic_IEnumerable_Monadic_Maybe___0___System_Action___0__
  commentId: M:Monadic.EnumerableExtensions.Iterate``1(System.Collections.Generic.IEnumerable{Monadic.Maybe{``0}},System.Action{``0})
  name.vb: Iterate(Of T)(IEnumerable(Of Maybe(Of T)), Action(Of T))
  fullName: Monadic.EnumerableExtensions.Iterate<T>(System.Collections.Generic.IEnumerable<Monadic.Maybe<T>>, System.Action<T>)
  fullName.vb: Monadic.EnumerableExtensions.Iterate(Of T)(System.Collections.Generic.IEnumerable(Of Monadic.Maybe(Of T)), System.Action(Of T))
  nameWithType: EnumerableExtensions.Iterate<T>(IEnumerable<Maybe<T>>, Action<T>)
  nameWithType.vb: EnumerableExtensions.Iterate(Of T)(IEnumerable(Of Maybe(Of T)), Action(Of T))
- uid: Monadic.EnumerableExtensions.LastOrNone*
  name: LastOrNone
  href: api/Monadic.EnumerableExtensions.LastOrNone.html
  commentId: Overload:Monadic.EnumerableExtensions.LastOrNone
  fullName: Monadic.EnumerableExtensions.LastOrNone
  nameWithType: EnumerableExtensions.LastOrNone
- uid: Monadic.EnumerableExtensions.LastOrNone``1(System.Collections.Generic.IEnumerable{``0})
  name: LastOrNone<T>(IEnumerable<T>)
  href: api/Monadic.EnumerableExtensions.LastOrNone.html#Monadic_EnumerableExtensions_LastOrNone__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Monadic.EnumerableExtensions.LastOrNone``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: LastOrNone(Of T)(IEnumerable(Of T))
  fullName: Monadic.EnumerableExtensions.LastOrNone<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Monadic.EnumerableExtensions.LastOrNone(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: EnumerableExtensions.LastOrNone<T>(IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.LastOrNone(Of T)(IEnumerable(Of T))
- uid: Monadic.EnumerableExtensions.Map*
  name: Map
  href: api/Monadic.EnumerableExtensions.Map.html
  commentId: Overload:Monadic.EnumerableExtensions.Map
  fullName: Monadic.EnumerableExtensions.Map
  nameWithType: EnumerableExtensions.Map
- uid: Monadic.EnumerableExtensions.MapAsync*
  name: MapAsync
  href: api/Monadic.EnumerableExtensions.MapAsync.html
  commentId: Overload:Monadic.EnumerableExtensions.MapAsync
  fullName: Monadic.EnumerableExtensions.MapAsync
  nameWithType: EnumerableExtensions.MapAsync
- uid: Monadic.EnumerableExtensions.MapAsync``2(System.Collections.Generic.IAsyncEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MapAsync<T, TReturn>(IAsyncEnumerable<T>, Func<T, Task<TReturn>>)
  href: api/Monadic.EnumerableExtensions.MapAsync.html#Monadic_EnumerableExtensions_MapAsync__2_System_Collections_Generic_IAsyncEnumerable___0__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.EnumerableExtensions.MapAsync``2(System.Collections.Generic.IAsyncEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MapAsync(Of T, TReturn)(IAsyncEnumerable(Of T), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.EnumerableExtensions.MapAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<T>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.EnumerableExtensions.MapAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: EnumerableExtensions.MapAsync<T, TReturn>(IAsyncEnumerable<T>, Func<T, Task<TReturn>>)
  nameWithType.vb: EnumerableExtensions.MapAsync(Of T, TReturn)(IAsyncEnumerable(Of T), Func(Of T, Task(Of TReturn)))
- uid: Monadic.EnumerableExtensions.MapAsync``2(System.Collections.Generic.IAsyncEnumerable{``0},System.Func{``0,``1})
  name: MapAsync<T, TReturn>(IAsyncEnumerable<T>, Func<T, TReturn>)
  href: api/Monadic.EnumerableExtensions.MapAsync.html#Monadic_EnumerableExtensions_MapAsync__2_System_Collections_Generic_IAsyncEnumerable___0__System_Func___0___1__
  commentId: M:Monadic.EnumerableExtensions.MapAsync``2(System.Collections.Generic.IAsyncEnumerable{``0},System.Func{``0,``1})
  name.vb: MapAsync(Of T, TReturn)(IAsyncEnumerable(Of T), Func(Of T, TReturn))
  fullName: Monadic.EnumerableExtensions.MapAsync<T, TReturn>(System.Collections.Generic.IAsyncEnumerable<T>, System.Func<T, TReturn>)
  fullName.vb: Monadic.EnumerableExtensions.MapAsync(Of T, TReturn)(System.Collections.Generic.IAsyncEnumerable(Of T), System.Func(Of T, TReturn))
  nameWithType: EnumerableExtensions.MapAsync<T, TReturn>(IAsyncEnumerable<T>, Func<T, TReturn>)
  nameWithType.vb: EnumerableExtensions.MapAsync(Of T, TReturn)(IAsyncEnumerable(Of T), Func(Of T, TReturn))
- uid: Monadic.EnumerableExtensions.MapAsync``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MapAsync<T, TReturn>(IEnumerable<T>, Func<T, Task<TReturn>>)
  href: api/Monadic.EnumerableExtensions.MapAsync.html#Monadic_EnumerableExtensions_MapAsync__2_System_Collections_Generic_IEnumerable___0__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.EnumerableExtensions.MapAsync``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MapAsync(Of T, TReturn)(IEnumerable(Of T), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.EnumerableExtensions.MapAsync<T, TReturn>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.EnumerableExtensions.MapAsync(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: EnumerableExtensions.MapAsync<T, TReturn>(IEnumerable<T>, Func<T, Task<TReturn>>)
  nameWithType.vb: EnumerableExtensions.MapAsync(Of T, TReturn)(IEnumerable(Of T), Func(Of T, Task(Of TReturn)))
- uid: Monadic.EnumerableExtensions.Map``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: Map<T, TReturn>(IEnumerable<T>, Func<T, TReturn>)
  href: api/Monadic.EnumerableExtensions.Map.html#Monadic_EnumerableExtensions_Map__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  commentId: M:Monadic.EnumerableExtensions.Map``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name.vb: Map(Of T, TReturn)(IEnumerable(Of T), Func(Of T, TReturn))
  fullName: Monadic.EnumerableExtensions.Map<T, TReturn>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TReturn>)
  fullName.vb: Monadic.EnumerableExtensions.Map(Of T, TReturn)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TReturn))
  nameWithType: EnumerableExtensions.Map<T, TReturn>(IEnumerable<T>, Func<T, TReturn>)
  nameWithType.vb: EnumerableExtensions.Map(Of T, TReturn)(IEnumerable(Of T), Func(Of T, TReturn))
- uid: Monadic.EnumerableExtensions.SingleOrNone*
  name: SingleOrNone
  href: api/Monadic.EnumerableExtensions.SingleOrNone.html
  commentId: Overload:Monadic.EnumerableExtensions.SingleOrNone
  fullName: Monadic.EnumerableExtensions.SingleOrNone
  nameWithType: EnumerableExtensions.SingleOrNone
- uid: Monadic.EnumerableExtensions.SingleOrNone``1(System.Collections.Generic.IEnumerable{``0})
  name: SingleOrNone<T>(IEnumerable<T>)
  href: api/Monadic.EnumerableExtensions.SingleOrNone.html#Monadic_EnumerableExtensions_SingleOrNone__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Monadic.EnumerableExtensions.SingleOrNone``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: SingleOrNone(Of T)(IEnumerable(Of T))
  fullName: Monadic.EnumerableExtensions.SingleOrNone<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Monadic.EnumerableExtensions.SingleOrNone(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: EnumerableExtensions.SingleOrNone<T>(IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.SingleOrNone(Of T)(IEnumerable(Of T))
- uid: Monadic.Err
  name: Err
  href: api/Monadic.Err.html
  commentId: T:Monadic.Err
  fullName: Monadic.Err
  nameWithType: Err
- uid: Monadic.Err.Equals(Monadic.Err)
  name: Equals(Err?)
  href: api/Monadic.Err.Equals.html#Monadic_Err_Equals_Monadic_Err_
  commentId: M:Monadic.Err.Equals(Monadic.Err)
  name.vb: Equals(Err)
  fullName: Monadic.Err.Equals(Monadic.Err?)
  fullName.vb: Monadic.Err.Equals(Monadic.Err)
  nameWithType: Err.Equals(Err?)
  nameWithType.vb: Err.Equals(Err)
- uid: Monadic.Err.Equals(System.Object)
  name: Equals(object?)
  href: api/Monadic.Err.Equals.html#Monadic_Err_Equals_System_Object_
  commentId: M:Monadic.Err.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Monadic.Err.Equals(object?)
  fullName.vb: Monadic.Err.Equals(Object)
  nameWithType: Err.Equals(object?)
  nameWithType.vb: Err.Equals(Object)
- uid: Monadic.Err.Equals*
  name: Equals
  href: api/Monadic.Err.Equals.html
  commentId: Overload:Monadic.Err.Equals
  fullName: Monadic.Err.Equals
  nameWithType: Err.Equals
- uid: Monadic.Err.GetHashCode
  name: GetHashCode()
  href: api/Monadic.Err.GetHashCode.html#Monadic_Err_GetHashCode
  commentId: M:Monadic.Err.GetHashCode
  fullName: Monadic.Err.GetHashCode()
  nameWithType: Err.GetHashCode()
- uid: Monadic.Err.GetHashCode*
  name: GetHashCode
  href: api/Monadic.Err.GetHashCode.html
  commentId: Overload:Monadic.Err.GetHashCode
  fullName: Monadic.Err.GetHashCode
  nameWithType: Err.GetHashCode
- uid: Monadic.Err.ToString
  name: ToString()
  href: api/Monadic.Err.ToString.html#Monadic_Err_ToString
  commentId: M:Monadic.Err.ToString
  fullName: Monadic.Err.ToString()
  nameWithType: Err.ToString()
- uid: Monadic.Err.ToString*
  name: ToString
  href: api/Monadic.Err.ToString.html
  commentId: Overload:Monadic.Err.ToString
  fullName: Monadic.Err.ToString
  nameWithType: Err.ToString
- uid: Monadic.Err.Value
  name: Value
  href: api/Monadic.Err.Value.html#Monadic_Err_Value
  commentId: P:Monadic.Err.Value
  fullName: Monadic.Err.Value
  nameWithType: Err.Value
- uid: Monadic.Err.Value*
  name: Value
  href: api/Monadic.Err.Value.html
  commentId: Overload:Monadic.Err.Value
  fullName: Monadic.Err.Value
  nameWithType: Err.Value
- uid: Monadic.Err.op_Equality(Monadic.Err,Monadic.Err)
  name: operator ==(Err?, Err?)
  href: api/Monadic.Err.op_Equality.html#Monadic_Err_op_Equality_Monadic_Err_Monadic_Err_
  commentId: M:Monadic.Err.op_Equality(Monadic.Err,Monadic.Err)
  name.vb: =(Err, Err)
  fullName: Monadic.Err.operator ==(Monadic.Err?, Monadic.Err?)
  fullName.vb: Monadic.Err.=(Monadic.Err, Monadic.Err)
  nameWithType: Err.operator ==(Err?, Err?)
  nameWithType.vb: Err.=(Err, Err)
- uid: Monadic.Err.op_Equality*
  name: operator ==
  href: api/Monadic.Err.op_Equality.html
  commentId: Overload:Monadic.Err.op_Equality
  name.vb: =
  fullName: Monadic.Err.operator ==
  fullName.vb: Monadic.Err.=
  nameWithType: Err.operator ==
  nameWithType.vb: Err.=
- uid: Monadic.Err.op_Inequality(Monadic.Err,Monadic.Err)
  name: operator !=(Err?, Err?)
  href: api/Monadic.Err.op_Inequality.html#Monadic_Err_op_Inequality_Monadic_Err_Monadic_Err_
  commentId: M:Monadic.Err.op_Inequality(Monadic.Err,Monadic.Err)
  name.vb: <>(Err, Err)
  fullName: Monadic.Err.operator !=(Monadic.Err?, Monadic.Err?)
  fullName.vb: Monadic.Err.<>(Monadic.Err, Monadic.Err)
  nameWithType: Err.operator !=(Err?, Err?)
  nameWithType.vb: Err.<>(Err, Err)
- uid: Monadic.Err.op_Inequality*
  name: operator !=
  href: api/Monadic.Err.op_Inequality.html
  commentId: Overload:Monadic.Err.op_Inequality
  name.vb: <>
  fullName: Monadic.Err.operator !=
  fullName.vb: Monadic.Err.<>
  nameWithType: Err.operator !=
  nameWithType.vb: Err.<>
- uid: Monadic.Err.{Clone}$
  name: <Clone>$()
  href: api/Monadic.Err.-Clone--.html#Monadic_Err__Clone__
  commentId: M:Monadic.Err.{Clone}$
  fullName: Monadic.Err.<Clone>$()
  nameWithType: Err.<Clone>$()
- uid: Monadic.Err.{Clone}$*
  name: <Clone>$
  href: api/Monadic.Err.-Clone--.html
  commentId: Overload:Monadic.Err.{Clone}$
  fullName: Monadic.Err.<Clone>$
  nameWithType: Err.<Clone>$
- uid: Monadic.Exceptions
  name: Monadic.Exceptions
  href: api/Monadic.Exceptions.html
  commentId: N:Monadic.Exceptions
  fullName: Monadic.Exceptions
  nameWithType: Monadic.Exceptions
- uid: Monadic.Exceptions.InvalidEitherTypeException
  name: InvalidEitherTypeException
  href: api/Monadic.Exceptions.InvalidEitherTypeException.html
  commentId: T:Monadic.Exceptions.InvalidEitherTypeException
  fullName: Monadic.Exceptions.InvalidEitherTypeException
  nameWithType: InvalidEitherTypeException
- uid: Monadic.Exceptions.InvalidEitherTypeException.#ctor(System.Type)
  name: InvalidEitherTypeException(Type)
  href: api/Monadic.Exceptions.InvalidEitherTypeException.-ctor.html#Monadic_Exceptions_InvalidEitherTypeException__ctor_System_Type_
  commentId: M:Monadic.Exceptions.InvalidEitherTypeException.#ctor(System.Type)
  name.vb: New(Type)
  fullName: Monadic.Exceptions.InvalidEitherTypeException.InvalidEitherTypeException(System.Type)
  fullName.vb: Monadic.Exceptions.InvalidEitherTypeException.New(System.Type)
  nameWithType: InvalidEitherTypeException.InvalidEitherTypeException(Type)
  nameWithType.vb: InvalidEitherTypeException.New(Type)
- uid: Monadic.Exceptions.InvalidEitherTypeException.#ctor*
  name: InvalidEitherTypeException
  href: api/Monadic.Exceptions.InvalidEitherTypeException.-ctor.html
  commentId: Overload:Monadic.Exceptions.InvalidEitherTypeException.#ctor
  name.vb: New
  fullName: Monadic.Exceptions.InvalidEitherTypeException.InvalidEitherTypeException
  fullName.vb: Monadic.Exceptions.InvalidEitherTypeException.New
  nameWithType: InvalidEitherTypeException.InvalidEitherTypeException
  nameWithType.vb: InvalidEitherTypeException.New
- uid: Monadic.Exceptions.InvalidMaybeTypeException
  name: InvalidMaybeTypeException
  href: api/Monadic.Exceptions.InvalidMaybeTypeException.html
  commentId: T:Monadic.Exceptions.InvalidMaybeTypeException
  fullName: Monadic.Exceptions.InvalidMaybeTypeException
  nameWithType: InvalidMaybeTypeException
- uid: Monadic.Exceptions.InvalidResultTypeException
  name: InvalidResultTypeException
  href: api/Monadic.Exceptions.InvalidResultTypeException.html
  commentId: T:Monadic.Exceptions.InvalidResultTypeException
  fullName: Monadic.Exceptions.InvalidResultTypeException
  nameWithType: InvalidResultTypeException
- uid: Monadic.Exceptions.InvalidTypeException
  name: InvalidTypeException
  href: api/Monadic.Exceptions.InvalidTypeException.html
  commentId: T:Monadic.Exceptions.InvalidTypeException
  fullName: Monadic.Exceptions.InvalidTypeException
  nameWithType: InvalidTypeException
- uid: Monadic.Exceptions.InvalidTypeException.#ctor(System.Type,System.Type,System.Type,System.Type)
  name: InvalidTypeException(Type, Type, Type, Type)
  href: api/Monadic.Exceptions.InvalidTypeException.-ctor.html#Monadic_Exceptions_InvalidTypeException__ctor_System_Type_System_Type_System_Type_System_Type_
  commentId: M:Monadic.Exceptions.InvalidTypeException.#ctor(System.Type,System.Type,System.Type,System.Type)
  name.vb: New(Type, Type, Type, Type)
  fullName: Monadic.Exceptions.InvalidTypeException.InvalidTypeException(System.Type, System.Type, System.Type, System.Type)
  fullName.vb: Monadic.Exceptions.InvalidTypeException.New(System.Type, System.Type, System.Type, System.Type)
  nameWithType: InvalidTypeException.InvalidTypeException(Type, Type, Type, Type)
  nameWithType.vb: InvalidTypeException.New(Type, Type, Type, Type)
- uid: Monadic.Exceptions.InvalidTypeException.#ctor*
  name: InvalidTypeException
  href: api/Monadic.Exceptions.InvalidTypeException.-ctor.html
  commentId: Overload:Monadic.Exceptions.InvalidTypeException.#ctor
  name.vb: New
  fullName: Monadic.Exceptions.InvalidTypeException.InvalidTypeException
  fullName.vb: Monadic.Exceptions.InvalidTypeException.New
  nameWithType: InvalidTypeException.InvalidTypeException
  nameWithType.vb: InvalidTypeException.New
- uid: Monadic.Exceptions.MonadicException
  name: MonadicException
  href: api/Monadic.Exceptions.MonadicException.html
  commentId: T:Monadic.Exceptions.MonadicException
  fullName: Monadic.Exceptions.MonadicException
  nameWithType: MonadicException
- uid: Monadic.Exceptions.MonadicException.#ctor
  name: MonadicException()
  href: api/Monadic.Exceptions.MonadicException.-ctor.html#Monadic_Exceptions_MonadicException__ctor
  commentId: M:Monadic.Exceptions.MonadicException.#ctor
  name.vb: New()
  fullName: Monadic.Exceptions.MonadicException.MonadicException()
  fullName.vb: Monadic.Exceptions.MonadicException.New()
  nameWithType: MonadicException.MonadicException()
  nameWithType.vb: MonadicException.New()
- uid: Monadic.Exceptions.MonadicException.#ctor(System.String)
  name: MonadicException(string)
  href: api/Monadic.Exceptions.MonadicException.-ctor.html#Monadic_Exceptions_MonadicException__ctor_System_String_
  commentId: M:Monadic.Exceptions.MonadicException.#ctor(System.String)
  name.vb: New(String)
  fullName: Monadic.Exceptions.MonadicException.MonadicException(string)
  fullName.vb: Monadic.Exceptions.MonadicException.New(String)
  nameWithType: MonadicException.MonadicException(string)
  nameWithType.vb: MonadicException.New(String)
- uid: Monadic.Exceptions.MonadicException.#ctor(System.String,System.Exception)
  name: MonadicException(string, Exception)
  href: api/Monadic.Exceptions.MonadicException.-ctor.html#Monadic_Exceptions_MonadicException__ctor_System_String_System_Exception_
  commentId: M:Monadic.Exceptions.MonadicException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: Monadic.Exceptions.MonadicException.MonadicException(string, System.Exception)
  fullName.vb: Monadic.Exceptions.MonadicException.New(String, System.Exception)
  nameWithType: MonadicException.MonadicException(string, Exception)
  nameWithType.vb: MonadicException.New(String, Exception)
- uid: Monadic.Exceptions.MonadicException.#ctor*
  name: MonadicException
  href: api/Monadic.Exceptions.MonadicException.-ctor.html
  commentId: Overload:Monadic.Exceptions.MonadicException.#ctor
  name.vb: New
  fullName: Monadic.Exceptions.MonadicException.MonadicException
  fullName.vb: Monadic.Exceptions.MonadicException.New
  nameWithType: MonadicException.MonadicException
  nameWithType.vb: MonadicException.New
- uid: Monadic.Exceptions.PredicateFalseException
  name: PredicateFalseException
  href: api/Monadic.Exceptions.PredicateFalseException.html
  commentId: T:Monadic.Exceptions.PredicateFalseException
  fullName: Monadic.Exceptions.PredicateFalseException
  nameWithType: PredicateFalseException
- uid: Monadic.Exceptions.PredicateFalseException.#ctor
  name: PredicateFalseException()
  href: api/Monadic.Exceptions.PredicateFalseException.-ctor.html#Monadic_Exceptions_PredicateFalseException__ctor
  commentId: M:Monadic.Exceptions.PredicateFalseException.#ctor
  name.vb: New()
  fullName: Monadic.Exceptions.PredicateFalseException.PredicateFalseException()
  fullName.vb: Monadic.Exceptions.PredicateFalseException.New()
  nameWithType: PredicateFalseException.PredicateFalseException()
  nameWithType.vb: PredicateFalseException.New()
- uid: Monadic.Exceptions.PredicateFalseException.#ctor(System.String)
  name: PredicateFalseException(string)
  href: api/Monadic.Exceptions.PredicateFalseException.-ctor.html#Monadic_Exceptions_PredicateFalseException__ctor_System_String_
  commentId: M:Monadic.Exceptions.PredicateFalseException.#ctor(System.String)
  name.vb: New(String)
  fullName: Monadic.Exceptions.PredicateFalseException.PredicateFalseException(string)
  fullName.vb: Monadic.Exceptions.PredicateFalseException.New(String)
  nameWithType: PredicateFalseException.PredicateFalseException(string)
  nameWithType.vb: PredicateFalseException.New(String)
- uid: Monadic.Exceptions.PredicateFalseException.#ctor(System.String,System.Exception)
  name: PredicateFalseException(string, Exception)
  href: api/Monadic.Exceptions.PredicateFalseException.-ctor.html#Monadic_Exceptions_PredicateFalseException__ctor_System_String_System_Exception_
  commentId: M:Monadic.Exceptions.PredicateFalseException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: Monadic.Exceptions.PredicateFalseException.PredicateFalseException(string, System.Exception)
  fullName.vb: Monadic.Exceptions.PredicateFalseException.New(String, System.Exception)
  nameWithType: PredicateFalseException.PredicateFalseException(string, Exception)
  nameWithType.vb: PredicateFalseException.New(String, Exception)
- uid: Monadic.Exceptions.PredicateFalseException.#ctor*
  name: PredicateFalseException
  href: api/Monadic.Exceptions.PredicateFalseException.-ctor.html
  commentId: Overload:Monadic.Exceptions.PredicateFalseException.#ctor
  name.vb: New
  fullName: Monadic.Exceptions.PredicateFalseException.PredicateFalseException
  fullName.vb: Monadic.Exceptions.PredicateFalseException.New
  nameWithType: PredicateFalseException.PredicateFalseException
  nameWithType.vb: PredicateFalseException.New
- uid: Monadic.Exceptions.SimpleErrorException
  name: SimpleErrorException
  href: api/Monadic.Exceptions.SimpleErrorException.html
  commentId: T:Monadic.Exceptions.SimpleErrorException
  fullName: Monadic.Exceptions.SimpleErrorException
  nameWithType: SimpleErrorException
- uid: Monadic.Exceptions.SimpleErrorException.#ctor
  name: SimpleErrorException()
  href: api/Monadic.Exceptions.SimpleErrorException.-ctor.html#Monadic_Exceptions_SimpleErrorException__ctor
  commentId: M:Monadic.Exceptions.SimpleErrorException.#ctor
  name.vb: New()
  fullName: Monadic.Exceptions.SimpleErrorException.SimpleErrorException()
  fullName.vb: Monadic.Exceptions.SimpleErrorException.New()
  nameWithType: SimpleErrorException.SimpleErrorException()
  nameWithType.vb: SimpleErrorException.New()
- uid: Monadic.Exceptions.SimpleErrorException.#ctor(System.String)
  name: SimpleErrorException(string)
  href: api/Monadic.Exceptions.SimpleErrorException.-ctor.html#Monadic_Exceptions_SimpleErrorException__ctor_System_String_
  commentId: M:Monadic.Exceptions.SimpleErrorException.#ctor(System.String)
  name.vb: New(String)
  fullName: Monadic.Exceptions.SimpleErrorException.SimpleErrorException(string)
  fullName.vb: Monadic.Exceptions.SimpleErrorException.New(String)
  nameWithType: SimpleErrorException.SimpleErrorException(string)
  nameWithType.vb: SimpleErrorException.New(String)
- uid: Monadic.Exceptions.SimpleErrorException.#ctor(System.String,System.Exception)
  name: SimpleErrorException(string, Exception)
  href: api/Monadic.Exceptions.SimpleErrorException.-ctor.html#Monadic_Exceptions_SimpleErrorException__ctor_System_String_System_Exception_
  commentId: M:Monadic.Exceptions.SimpleErrorException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: Monadic.Exceptions.SimpleErrorException.SimpleErrorException(string, System.Exception)
  fullName.vb: Monadic.Exceptions.SimpleErrorException.New(String, System.Exception)
  nameWithType: SimpleErrorException.SimpleErrorException(string, Exception)
  nameWithType.vb: SimpleErrorException.New(String, Exception)
- uid: Monadic.Exceptions.SimpleErrorException.#ctor*
  name: SimpleErrorException
  href: api/Monadic.Exceptions.SimpleErrorException.-ctor.html
  commentId: Overload:Monadic.Exceptions.SimpleErrorException.#ctor
  name.vb: New
  fullName: Monadic.Exceptions.SimpleErrorException.SimpleErrorException
  fullName.vb: Monadic.Exceptions.SimpleErrorException.New
  nameWithType: SimpleErrorException.SimpleErrorException
  nameWithType.vb: SimpleErrorException.New
- uid: Monadic.F
  name: F
  href: api/Monadic.F.html
  commentId: T:Monadic.F
  fullName: Monadic.F
  nameWithType: F
- uid: Monadic.F.ErrorLogger
  name: F.ErrorLogger
  href: api/Monadic.F.ErrorLogger.html
  commentId: T:Monadic.F.ErrorLogger
  fullName: Monadic.F.ErrorLogger
  nameWithType: F.ErrorLogger
- uid: Monadic.F.ErrorLogger.#ctor(System.Object,System.IntPtr)
  name: ErrorLogger(object, IntPtr)
  href: api/Monadic.F.ErrorLogger.-ctor.html#Monadic_F_ErrorLogger__ctor_System_Object_System_IntPtr_
  commentId: M:Monadic.F.ErrorLogger.#ctor(System.Object,System.IntPtr)
  name.vb: New(Object, IntPtr)
  fullName: Monadic.F.ErrorLogger.ErrorLogger(object, System.IntPtr)
  fullName.vb: Monadic.F.ErrorLogger.New(Object, System.IntPtr)
  nameWithType: F.ErrorLogger.ErrorLogger(object, IntPtr)
  nameWithType.vb: F.ErrorLogger.New(Object, IntPtr)
- uid: Monadic.F.ErrorLogger.#ctor*
  name: ErrorLogger
  href: api/Monadic.F.ErrorLogger.-ctor.html
  commentId: Overload:Monadic.F.ErrorLogger.#ctor
  name.vb: New
  fullName: Monadic.F.ErrorLogger.ErrorLogger
  fullName.vb: Monadic.F.ErrorLogger.New
  nameWithType: F.ErrorLogger.ErrorLogger
  nameWithType.vb: F.ErrorLogger.New
- uid: Monadic.F.ErrorLogger.BeginInvoke(System.String,System.AsyncCallback,System.Object)
  name: BeginInvoke(string, AsyncCallback, object)
  href: api/Monadic.F.ErrorLogger.BeginInvoke.html#Monadic_F_ErrorLogger_BeginInvoke_System_String_System_AsyncCallback_System_Object_
  commentId: M:Monadic.F.ErrorLogger.BeginInvoke(System.String,System.AsyncCallback,System.Object)
  name.vb: BeginInvoke(String, AsyncCallback, Object)
  fullName: Monadic.F.ErrorLogger.BeginInvoke(string, System.AsyncCallback, object)
  fullName.vb: Monadic.F.ErrorLogger.BeginInvoke(String, System.AsyncCallback, Object)
  nameWithType: F.ErrorLogger.BeginInvoke(string, AsyncCallback, object)
  nameWithType.vb: F.ErrorLogger.BeginInvoke(String, AsyncCallback, Object)
- uid: Monadic.F.ErrorLogger.BeginInvoke*
  name: BeginInvoke
  href: api/Monadic.F.ErrorLogger.BeginInvoke.html
  commentId: Overload:Monadic.F.ErrorLogger.BeginInvoke
  fullName: Monadic.F.ErrorLogger.BeginInvoke
  nameWithType: F.ErrorLogger.BeginInvoke
- uid: Monadic.F.ErrorLogger.EndInvoke(System.IAsyncResult)
  name: EndInvoke(IAsyncResult)
  href: api/Monadic.F.ErrorLogger.EndInvoke.html#Monadic_F_ErrorLogger_EndInvoke_System_IAsyncResult_
  commentId: M:Monadic.F.ErrorLogger.EndInvoke(System.IAsyncResult)
  fullName: Monadic.F.ErrorLogger.EndInvoke(System.IAsyncResult)
  nameWithType: F.ErrorLogger.EndInvoke(IAsyncResult)
- uid: Monadic.F.ErrorLogger.EndInvoke*
  name: EndInvoke
  href: api/Monadic.F.ErrorLogger.EndInvoke.html
  commentId: Overload:Monadic.F.ErrorLogger.EndInvoke
  fullName: Monadic.F.ErrorLogger.EndInvoke
  nameWithType: F.ErrorLogger.EndInvoke
- uid: Monadic.F.ErrorLogger.Invoke(System.String)
  name: Invoke(string)
  href: api/Monadic.F.ErrorLogger.Invoke.html#Monadic_F_ErrorLogger_Invoke_System_String_
  commentId: M:Monadic.F.ErrorLogger.Invoke(System.String)
  name.vb: Invoke(String)
  fullName: Monadic.F.ErrorLogger.Invoke(string)
  fullName.vb: Monadic.F.ErrorLogger.Invoke(String)
  nameWithType: F.ErrorLogger.Invoke(string)
  nameWithType.vb: F.ErrorLogger.Invoke(String)
- uid: Monadic.F.ErrorLogger.Invoke*
  name: Invoke
  href: api/Monadic.F.ErrorLogger.Invoke.html
  commentId: Overload:Monadic.F.ErrorLogger.Invoke
  fullName: Monadic.F.ErrorLogger.Invoke
  nameWithType: F.ErrorLogger.Invoke
- uid: Monadic.F.ExceptionLogger
  name: F.ExceptionLogger
  href: api/Monadic.F.ExceptionLogger.html
  commentId: T:Monadic.F.ExceptionLogger
  fullName: Monadic.F.ExceptionLogger
  nameWithType: F.ExceptionLogger
- uid: Monadic.F.ExceptionLogger.#ctor(System.Object,System.IntPtr)
  name: ExceptionLogger(object, IntPtr)
  href: api/Monadic.F.ExceptionLogger.-ctor.html#Monadic_F_ExceptionLogger__ctor_System_Object_System_IntPtr_
  commentId: M:Monadic.F.ExceptionLogger.#ctor(System.Object,System.IntPtr)
  name.vb: New(Object, IntPtr)
  fullName: Monadic.F.ExceptionLogger.ExceptionLogger(object, System.IntPtr)
  fullName.vb: Monadic.F.ExceptionLogger.New(Object, System.IntPtr)
  nameWithType: F.ExceptionLogger.ExceptionLogger(object, IntPtr)
  nameWithType.vb: F.ExceptionLogger.New(Object, IntPtr)
- uid: Monadic.F.ExceptionLogger.#ctor*
  name: ExceptionLogger
  href: api/Monadic.F.ExceptionLogger.-ctor.html
  commentId: Overload:Monadic.F.ExceptionLogger.#ctor
  name.vb: New
  fullName: Monadic.F.ExceptionLogger.ExceptionLogger
  fullName.vb: Monadic.F.ExceptionLogger.New
  nameWithType: F.ExceptionLogger.ExceptionLogger
  nameWithType.vb: F.ExceptionLogger.New
- uid: Monadic.F.ExceptionLogger.BeginInvoke(System.Exception,System.AsyncCallback,System.Object)
  name: BeginInvoke(Exception, AsyncCallback, object)
  href: api/Monadic.F.ExceptionLogger.BeginInvoke.html#Monadic_F_ExceptionLogger_BeginInvoke_System_Exception_System_AsyncCallback_System_Object_
  commentId: M:Monadic.F.ExceptionLogger.BeginInvoke(System.Exception,System.AsyncCallback,System.Object)
  name.vb: BeginInvoke(Exception, AsyncCallback, Object)
  fullName: Monadic.F.ExceptionLogger.BeginInvoke(System.Exception, System.AsyncCallback, object)
  fullName.vb: Monadic.F.ExceptionLogger.BeginInvoke(System.Exception, System.AsyncCallback, Object)
  nameWithType: F.ExceptionLogger.BeginInvoke(Exception, AsyncCallback, object)
  nameWithType.vb: F.ExceptionLogger.BeginInvoke(Exception, AsyncCallback, Object)
- uid: Monadic.F.ExceptionLogger.BeginInvoke*
  name: BeginInvoke
  href: api/Monadic.F.ExceptionLogger.BeginInvoke.html
  commentId: Overload:Monadic.F.ExceptionLogger.BeginInvoke
  fullName: Monadic.F.ExceptionLogger.BeginInvoke
  nameWithType: F.ExceptionLogger.BeginInvoke
- uid: Monadic.F.ExceptionLogger.EndInvoke(System.IAsyncResult)
  name: EndInvoke(IAsyncResult)
  href: api/Monadic.F.ExceptionLogger.EndInvoke.html#Monadic_F_ExceptionLogger_EndInvoke_System_IAsyncResult_
  commentId: M:Monadic.F.ExceptionLogger.EndInvoke(System.IAsyncResult)
  fullName: Monadic.F.ExceptionLogger.EndInvoke(System.IAsyncResult)
  nameWithType: F.ExceptionLogger.EndInvoke(IAsyncResult)
- uid: Monadic.F.ExceptionLogger.EndInvoke*
  name: EndInvoke
  href: api/Monadic.F.ExceptionLogger.EndInvoke.html
  commentId: Overload:Monadic.F.ExceptionLogger.EndInvoke
  fullName: Monadic.F.ExceptionLogger.EndInvoke
  nameWithType: F.ExceptionLogger.EndInvoke
- uid: Monadic.F.ExceptionLogger.Invoke(System.Exception)
  name: Invoke(Exception)
  href: api/Monadic.F.ExceptionLogger.Invoke.html#Monadic_F_ExceptionLogger_Invoke_System_Exception_
  commentId: M:Monadic.F.ExceptionLogger.Invoke(System.Exception)
  fullName: Monadic.F.ExceptionLogger.Invoke(System.Exception)
  nameWithType: F.ExceptionLogger.Invoke(Exception)
- uid: Monadic.F.ExceptionLogger.Invoke*
  name: Invoke
  href: api/Monadic.F.ExceptionLogger.Invoke.html
  commentId: Overload:Monadic.F.ExceptionLogger.Invoke
  fullName: Monadic.F.ExceptionLogger.Invoke
  nameWithType: F.ExceptionLogger.Invoke
- uid: Monadic.F.IsNullableValueType*
  name: IsNullableValueType
  href: api/Monadic.F.IsNullableValueType.html
  commentId: Overload:Monadic.F.IsNullableValueType
  fullName: Monadic.F.IsNullableValueType
  nameWithType: F.IsNullableValueType
- uid: Monadic.F.IsNullableValueType``1(``0)
  name: IsNullableValueType<T>(T)
  href: api/Monadic.F.IsNullableValueType.html#Monadic_F_IsNullableValueType__1___0_
  commentId: M:Monadic.F.IsNullableValueType``1(``0)
  name.vb: IsNullableValueType(Of T)(T)
  fullName: Monadic.F.IsNullableValueType<T>(T)
  fullName.vb: Monadic.F.IsNullableValueType(Of T)(T)
  nameWithType: F.IsNullableValueType<T>(T)
  nameWithType.vb: F.IsNullableValueType(Of T)(T)
- uid: Monadic.F.LogError
  name: LogError
  href: api/Monadic.F.LogError.html#Monadic_F_LogError
  commentId: P:Monadic.F.LogError
  fullName: Monadic.F.LogError
  nameWithType: F.LogError
- uid: Monadic.F.LogError*
  name: LogError
  href: api/Monadic.F.LogError.html
  commentId: Overload:Monadic.F.LogError
  fullName: Monadic.F.LogError
  nameWithType: F.LogError
- uid: Monadic.F.LogException
  name: LogException
  href: api/Monadic.F.LogException.html#Monadic_F_LogException
  commentId: P:Monadic.F.LogException
  fullName: Monadic.F.LogException
  nameWithType: F.LogException
- uid: Monadic.F.LogException*
  name: LogException
  href: api/Monadic.F.LogException.html
  commentId: Overload:Monadic.F.LogException
  fullName: Monadic.F.LogException
  nameWithType: F.LogException
- uid: Monadic.IEither`2
  name: IEither<TLeft, TRight>
  href: api/Monadic.IEither-2.html
  commentId: T:Monadic.IEither`2
  name.vb: IEither(Of TLeft, TRight)
  fullName: Monadic.IEither<TLeft, TRight>
  fullName.vb: Monadic.IEither(Of TLeft, TRight)
  nameWithType: IEither<TLeft, TRight>
  nameWithType.vb: IEither(Of TLeft, TRight)
- uid: Monadic.IEither`2.GetEnumerator
  name: GetEnumerator()
  href: api/Monadic.IEither-2.GetEnumerator.html#Monadic_IEither_2_GetEnumerator
  commentId: M:Monadic.IEither`2.GetEnumerator
  fullName: Monadic.IEither<TLeft, TRight>.GetEnumerator()
  fullName.vb: Monadic.IEither(Of TLeft, TRight).GetEnumerator()
  nameWithType: IEither<TLeft, TRight>.GetEnumerator()
  nameWithType.vb: IEither(Of TLeft, TRight).GetEnumerator()
- uid: Monadic.IEither`2.GetEnumerator*
  name: GetEnumerator
  href: api/Monadic.IEither-2.GetEnumerator.html
  commentId: Overload:Monadic.IEither`2.GetEnumerator
  fullName: Monadic.IEither<TLeft, TRight>.GetEnumerator
  fullName.vb: Monadic.IEither(Of TLeft, TRight).GetEnumerator
  nameWithType: IEither<TLeft, TRight>.GetEnumerator
  nameWithType.vb: IEither(Of TLeft, TRight).GetEnumerator
- uid: Monadic.ILeft`2
  name: ILeft<TLeft, TRight>
  href: api/Monadic.ILeft-2.html
  commentId: T:Monadic.ILeft`2
  name.vb: ILeft(Of TLeft, TRight)
  fullName: Monadic.ILeft<TLeft, TRight>
  fullName.vb: Monadic.ILeft(Of TLeft, TRight)
  nameWithType: ILeft<TLeft, TRight>
  nameWithType.vb: ILeft(Of TLeft, TRight)
- uid: Monadic.ILeft`2.Value
  name: Value
  href: api/Monadic.ILeft-2.Value.html#Monadic_ILeft_2_Value
  commentId: P:Monadic.ILeft`2.Value
  fullName: Monadic.ILeft<TLeft, TRight>.Value
  fullName.vb: Monadic.ILeft(Of TLeft, TRight).Value
  nameWithType: ILeft<TLeft, TRight>.Value
  nameWithType.vb: ILeft(Of TLeft, TRight).Value
- uid: Monadic.ILeft`2.Value*
  name: Value
  href: api/Monadic.ILeft-2.Value.html
  commentId: Overload:Monadic.ILeft`2.Value
  fullName: Monadic.ILeft<TLeft, TRight>.Value
  fullName.vb: Monadic.ILeft(Of TLeft, TRight).Value
  nameWithType: ILeft<TLeft, TRight>.Value
  nameWithType.vb: ILeft(Of TLeft, TRight).Value
- uid: Monadic.IRight`2
  name: IRight<TLeft, TRight>
  href: api/Monadic.IRight-2.html
  commentId: T:Monadic.IRight`2
  name.vb: IRight(Of TLeft, TRight)
  fullName: Monadic.IRight<TLeft, TRight>
  fullName.vb: Monadic.IRight(Of TLeft, TRight)
  nameWithType: IRight<TLeft, TRight>
  nameWithType.vb: IRight(Of TLeft, TRight)
- uid: Monadic.IRight`2.Value
  name: Value
  href: api/Monadic.IRight-2.Value.html#Monadic_IRight_2_Value
  commentId: P:Monadic.IRight`2.Value
  fullName: Monadic.IRight<TLeft, TRight>.Value
  fullName.vb: Monadic.IRight(Of TLeft, TRight).Value
  nameWithType: IRight<TLeft, TRight>.Value
  nameWithType.vb: IRight(Of TLeft, TRight).Value
- uid: Monadic.IRight`2.Value*
  name: Value
  href: api/Monadic.IRight-2.Value.html
  commentId: Overload:Monadic.IRight`2.Value
  fullName: Monadic.IRight<TLeft, TRight>.Value
  fullName.vb: Monadic.IRight(Of TLeft, TRight).Value
  nameWithType: IRight<TLeft, TRight>.Value
  nameWithType.vb: IRight(Of TLeft, TRight).Value
- uid: Monadic.Left`2
  name: Left<TLeft, TRight>
  href: api/Monadic.Left-2.html
  commentId: T:Monadic.Left`2
  name.vb: Left(Of TLeft, TRight)
  fullName: Monadic.Left<TLeft, TRight>
  fullName.vb: Monadic.Left(Of TLeft, TRight)
  nameWithType: Left<TLeft, TRight>
  nameWithType.vb: Left(Of TLeft, TRight)
- uid: Monadic.Left`2.#ctor(`0)
  name: Left(TLeft)
  href: api/Monadic.Left-2.-ctor.html#Monadic_Left_2__ctor__0_
  commentId: M:Monadic.Left`2.#ctor(`0)
  name.vb: New(TLeft)
  fullName: Monadic.Left<TLeft, TRight>.Left(TLeft)
  fullName.vb: Monadic.Left(Of TLeft, TRight).New(TLeft)
  nameWithType: Left<TLeft, TRight>.Left(TLeft)
  nameWithType.vb: Left(Of TLeft, TRight).New(TLeft)
- uid: Monadic.Left`2.#ctor*
  name: Left
  href: api/Monadic.Left-2.-ctor.html
  commentId: Overload:Monadic.Left`2.#ctor
  name.vb: New
  fullName: Monadic.Left<TLeft, TRight>.Left
  fullName.vb: Monadic.Left(Of TLeft, TRight).New
  nameWithType: Left<TLeft, TRight>.Left
  nameWithType.vb: Left(Of TLeft, TRight).New
- uid: Monadic.Left`2.EqualityContract
  name: EqualityContract
  href: api/Monadic.Left-2.EqualityContract.html#Monadic_Left_2_EqualityContract
  commentId: P:Monadic.Left`2.EqualityContract
  fullName: Monadic.Left<TLeft, TRight>.EqualityContract
  fullName.vb: Monadic.Left(Of TLeft, TRight).EqualityContract
  nameWithType: Left<TLeft, TRight>.EqualityContract
  nameWithType.vb: Left(Of TLeft, TRight).EqualityContract
- uid: Monadic.Left`2.EqualityContract*
  name: EqualityContract
  href: api/Monadic.Left-2.EqualityContract.html
  commentId: Overload:Monadic.Left`2.EqualityContract
  fullName: Monadic.Left<TLeft, TRight>.EqualityContract
  fullName.vb: Monadic.Left(Of TLeft, TRight).EqualityContract
  nameWithType: Left<TLeft, TRight>.EqualityContract
  nameWithType.vb: Left(Of TLeft, TRight).EqualityContract
- uid: Monadic.Left`2.Equals(Monadic.Either{`0,`1})
  name: Equals(Either<TLeft, TRight>?)
  href: api/Monadic.Left-2.Equals.html#Monadic_Left_2_Equals_Monadic_Either__0__1__
  commentId: M:Monadic.Left`2.Equals(Monadic.Either{`0,`1})
  name.vb: Equals(Either(Of TLeft, TRight))
  fullName: Monadic.Left<TLeft, TRight>.Equals(Monadic.Either<TLeft, TRight>?)
  fullName.vb: Monadic.Left(Of TLeft, TRight).Equals(Monadic.Either(Of TLeft, TRight))
  nameWithType: Left<TLeft, TRight>.Equals(Either<TLeft, TRight>?)
  nameWithType.vb: Left(Of TLeft, TRight).Equals(Either(Of TLeft, TRight))
- uid: Monadic.Left`2.Equals(Monadic.Left{`0,`1})
  name: Equals(Left<TLeft, TRight>?)
  href: api/Monadic.Left-2.Equals.html#Monadic_Left_2_Equals_Monadic_Left__0__1__
  commentId: M:Monadic.Left`2.Equals(Monadic.Left{`0,`1})
  name.vb: Equals(Left(Of TLeft, TRight))
  fullName: Monadic.Left<TLeft, TRight>.Equals(Monadic.Left<TLeft, TRight>?)
  fullName.vb: Monadic.Left(Of TLeft, TRight).Equals(Monadic.Left(Of TLeft, TRight))
  nameWithType: Left<TLeft, TRight>.Equals(Left<TLeft, TRight>?)
  nameWithType.vb: Left(Of TLeft, TRight).Equals(Left(Of TLeft, TRight))
- uid: Monadic.Left`2.Equals(System.Object)
  name: Equals(object?)
  href: api/Monadic.Left-2.Equals.html#Monadic_Left_2_Equals_System_Object_
  commentId: M:Monadic.Left`2.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Monadic.Left<TLeft, TRight>.Equals(object?)
  fullName.vb: Monadic.Left(Of TLeft, TRight).Equals(Object)
  nameWithType: Left<TLeft, TRight>.Equals(object?)
  nameWithType.vb: Left(Of TLeft, TRight).Equals(Object)
- uid: Monadic.Left`2.Equals*
  name: Equals
  href: api/Monadic.Left-2.Equals.html
  commentId: Overload:Monadic.Left`2.Equals
  fullName: Monadic.Left<TLeft, TRight>.Equals
  fullName.vb: Monadic.Left(Of TLeft, TRight).Equals
  nameWithType: Left<TLeft, TRight>.Equals
  nameWithType.vb: Left(Of TLeft, TRight).Equals
- uid: Monadic.Left`2.GetHashCode
  name: GetHashCode()
  href: api/Monadic.Left-2.GetHashCode.html#Monadic_Left_2_GetHashCode
  commentId: M:Monadic.Left`2.GetHashCode
  fullName: Monadic.Left<TLeft, TRight>.GetHashCode()
  fullName.vb: Monadic.Left(Of TLeft, TRight).GetHashCode()
  nameWithType: Left<TLeft, TRight>.GetHashCode()
  nameWithType.vb: Left(Of TLeft, TRight).GetHashCode()
- uid: Monadic.Left`2.GetHashCode*
  name: GetHashCode
  href: api/Monadic.Left-2.GetHashCode.html
  commentId: Overload:Monadic.Left`2.GetHashCode
  fullName: Monadic.Left<TLeft, TRight>.GetHashCode
  fullName.vb: Monadic.Left(Of TLeft, TRight).GetHashCode
  nameWithType: Left<TLeft, TRight>.GetHashCode
  nameWithType.vb: Left(Of TLeft, TRight).GetHashCode
- uid: Monadic.Left`2.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Monadic.Left-2.PrintMembers.html#Monadic_Left_2_PrintMembers_System_Text_StringBuilder_
  commentId: M:Monadic.Left`2.PrintMembers(System.Text.StringBuilder)
  fullName: Monadic.Left<TLeft, TRight>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Monadic.Left(Of TLeft, TRight).PrintMembers(System.Text.StringBuilder)
  nameWithType: Left<TLeft, TRight>.PrintMembers(StringBuilder)
  nameWithType.vb: Left(Of TLeft, TRight).PrintMembers(StringBuilder)
- uid: Monadic.Left`2.PrintMembers*
  name: PrintMembers
  href: api/Monadic.Left-2.PrintMembers.html
  commentId: Overload:Monadic.Left`2.PrintMembers
  fullName: Monadic.Left<TLeft, TRight>.PrintMembers
  fullName.vb: Monadic.Left(Of TLeft, TRight).PrintMembers
  nameWithType: Left<TLeft, TRight>.PrintMembers
  nameWithType.vb: Left(Of TLeft, TRight).PrintMembers
- uid: Monadic.Left`2.ToString
  name: ToString()
  href: api/Monadic.Left-2.ToString.html#Monadic_Left_2_ToString
  commentId: M:Monadic.Left`2.ToString
  fullName: Monadic.Left<TLeft, TRight>.ToString()
  fullName.vb: Monadic.Left(Of TLeft, TRight).ToString()
  nameWithType: Left<TLeft, TRight>.ToString()
  nameWithType.vb: Left(Of TLeft, TRight).ToString()
- uid: Monadic.Left`2.ToString*
  name: ToString
  href: api/Monadic.Left-2.ToString.html
  commentId: Overload:Monadic.Left`2.ToString
  fullName: Monadic.Left<TLeft, TRight>.ToString
  fullName.vb: Monadic.Left(Of TLeft, TRight).ToString
  nameWithType: Left<TLeft, TRight>.ToString
  nameWithType.vb: Left(Of TLeft, TRight).ToString
- uid: Monadic.Left`2.Value
  name: Value
  href: api/Monadic.Left-2.Value.html#Monadic_Left_2_Value
  commentId: P:Monadic.Left`2.Value
  fullName: Monadic.Left<TLeft, TRight>.Value
  fullName.vb: Monadic.Left(Of TLeft, TRight).Value
  nameWithType: Left<TLeft, TRight>.Value
  nameWithType.vb: Left(Of TLeft, TRight).Value
- uid: Monadic.Left`2.Value*
  name: Value
  href: api/Monadic.Left-2.Value.html
  commentId: Overload:Monadic.Left`2.Value
  fullName: Monadic.Left<TLeft, TRight>.Value
  fullName.vb: Monadic.Left(Of TLeft, TRight).Value
  nameWithType: Left<TLeft, TRight>.Value
  nameWithType.vb: Left(Of TLeft, TRight).Value
- uid: Monadic.Left`2.op_Equality(Monadic.Left{`0,`1},Monadic.Left{`0,`1})
  name: operator ==(Left<TLeft, TRight>?, Left<TLeft, TRight>?)
  href: api/Monadic.Left-2.op_Equality.html#Monadic_Left_2_op_Equality_Monadic_Left__0__1__Monadic_Left__0__1__
  commentId: M:Monadic.Left`2.op_Equality(Monadic.Left{`0,`1},Monadic.Left{`0,`1})
  name.vb: =(Left(Of TLeft, TRight), Left(Of TLeft, TRight))
  fullName: Monadic.Left<TLeft, TRight>.operator ==(Monadic.Left<TLeft, TRight>?, Monadic.Left<TLeft, TRight>?)
  fullName.vb: Monadic.Left(Of TLeft, TRight).=(Monadic.Left(Of TLeft, TRight), Monadic.Left(Of TLeft, TRight))
  nameWithType: Left<TLeft, TRight>.operator ==(Left<TLeft, TRight>?, Left<TLeft, TRight>?)
  nameWithType.vb: Left(Of TLeft, TRight).=(Left(Of TLeft, TRight), Left(Of TLeft, TRight))
- uid: Monadic.Left`2.op_Equality*
  name: operator ==
  href: api/Monadic.Left-2.op_Equality.html
  commentId: Overload:Monadic.Left`2.op_Equality
  name.vb: =
  fullName: Monadic.Left<TLeft, TRight>.operator ==
  fullName.vb: Monadic.Left(Of TLeft, TRight).=
  nameWithType: Left<TLeft, TRight>.operator ==
  nameWithType.vb: Left(Of TLeft, TRight).=
- uid: Monadic.Left`2.op_Inequality(Monadic.Left{`0,`1},Monadic.Left{`0,`1})
  name: operator !=(Left<TLeft, TRight>?, Left<TLeft, TRight>?)
  href: api/Monadic.Left-2.op_Inequality.html#Monadic_Left_2_op_Inequality_Monadic_Left__0__1__Monadic_Left__0__1__
  commentId: M:Monadic.Left`2.op_Inequality(Monadic.Left{`0,`1},Monadic.Left{`0,`1})
  name.vb: <>(Left(Of TLeft, TRight), Left(Of TLeft, TRight))
  fullName: Monadic.Left<TLeft, TRight>.operator !=(Monadic.Left<TLeft, TRight>?, Monadic.Left<TLeft, TRight>?)
  fullName.vb: Monadic.Left(Of TLeft, TRight).<>(Monadic.Left(Of TLeft, TRight), Monadic.Left(Of TLeft, TRight))
  nameWithType: Left<TLeft, TRight>.operator !=(Left<TLeft, TRight>?, Left<TLeft, TRight>?)
  nameWithType.vb: Left(Of TLeft, TRight).<>(Left(Of TLeft, TRight), Left(Of TLeft, TRight))
- uid: Monadic.Left`2.op_Inequality*
  name: operator !=
  href: api/Monadic.Left-2.op_Inequality.html
  commentId: Overload:Monadic.Left`2.op_Inequality
  name.vb: <>
  fullName: Monadic.Left<TLeft, TRight>.operator !=
  fullName.vb: Monadic.Left(Of TLeft, TRight).<>
  nameWithType: Left<TLeft, TRight>.operator !=
  nameWithType.vb: Left(Of TLeft, TRight).<>
- uid: Monadic.Left`2.{Clone}$
  name: <Clone>$()
  href: api/Monadic.Left-2.-Clone--.html#Monadic_Left_2__Clone__
  commentId: M:Monadic.Left`2.{Clone}$
  fullName: Monadic.Left<TLeft, TRight>.<Clone>$()
  fullName.vb: Monadic.Left(Of TLeft, TRight).<Clone>$()
  nameWithType: Left<TLeft, TRight>.<Clone>$()
  nameWithType.vb: Left(Of TLeft, TRight).<Clone>$()
- uid: Monadic.Left`2.{Clone}$*
  name: <Clone>$
  href: api/Monadic.Left-2.-Clone--.html
  commentId: Overload:Monadic.Left`2.{Clone}$
  fullName: Monadic.Left<TLeft, TRight>.<Clone>$
  fullName.vb: Monadic.Left(Of TLeft, TRight).<Clone>$
  nameWithType: Left<TLeft, TRight>.<Clone>$
  nameWithType.vb: Left(Of TLeft, TRight).<Clone>$
- uid: Monadic.Linq
  name: Monadic.Linq
  href: api/Monadic.Linq.html
  commentId: N:Monadic.Linq
  fullName: Monadic.Linq
  nameWithType: Monadic.Linq
- uid: Monadic.Linq.MaybeExtensions
  name: MaybeExtensions
  href: api/Monadic.Linq.MaybeExtensions.html
  commentId: T:Monadic.Linq.MaybeExtensions
  fullName: Monadic.Linq.MaybeExtensions
  nameWithType: MaybeExtensions
- uid: Monadic.Linq.MaybeExtensions.Select*
  name: Select
  href: api/Monadic.Linq.MaybeExtensions.Select.html
  commentId: Overload:Monadic.Linq.MaybeExtensions.Select
  fullName: Monadic.Linq.MaybeExtensions.Select
  nameWithType: MaybeExtensions.Select
- uid: Monadic.Linq.MaybeExtensions.SelectMany*
  name: SelectMany
  href: api/Monadic.Linq.MaybeExtensions.SelectMany.html
  commentId: Overload:Monadic.Linq.MaybeExtensions.SelectMany
  fullName: Monadic.Linq.MaybeExtensions.SelectMany
  nameWithType: MaybeExtensions.SelectMany
- uid: Monadic.Linq.MaybeExtensions.SelectMany``3(Monadic.Maybe{``0},System.Func{``0,Monadic.Maybe{``1}},System.Func{``0,``1,``2})
  name: SelectMany<T, TInner, TReturn>(Maybe<T>, Func<T, Maybe<TInner>>, Func<T, TInner, TReturn>)
  href: api/Monadic.Linq.MaybeExtensions.SelectMany.html#Monadic_Linq_MaybeExtensions_SelectMany__3_Monadic_Maybe___0__System_Func___0_Monadic_Maybe___1___System_Func___0___1___2__
  commentId: M:Monadic.Linq.MaybeExtensions.SelectMany``3(Monadic.Maybe{``0},System.Func{``0,Monadic.Maybe{``1}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of T, TInner, TReturn)(Maybe(Of T), Func(Of T, Maybe(Of TInner)), Func(Of T, TInner, TReturn))
  fullName: Monadic.Linq.MaybeExtensions.SelectMany<T, TInner, TReturn>(Monadic.Maybe<T>, System.Func<T, Monadic.Maybe<TInner>>, System.Func<T, TInner, TReturn>)
  fullName.vb: Monadic.Linq.MaybeExtensions.SelectMany(Of T, TInner, TReturn)(Monadic.Maybe(Of T), System.Func(Of T, Monadic.Maybe(Of TInner)), System.Func(Of T, TInner, TReturn))
  nameWithType: MaybeExtensions.SelectMany<T, TInner, TReturn>(Maybe<T>, Func<T, Maybe<TInner>>, Func<T, TInner, TReturn>)
  nameWithType.vb: MaybeExtensions.SelectMany(Of T, TInner, TReturn)(Maybe(Of T), Func(Of T, Maybe(Of TInner)), Func(Of T, TInner, TReturn))
- uid: Monadic.Linq.MaybeExtensions.SelectMany``3(Monadic.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}},System.Func{``0,``1,``2})
  name: SelectMany<T, TInner, TReturn>(Maybe<T>, Func<T, Task<Maybe<TInner>>>, Func<T, TInner, TReturn>)
  href: api/Monadic.Linq.MaybeExtensions.SelectMany.html#Monadic_Linq_MaybeExtensions_SelectMany__3_Monadic_Maybe___0__System_Func___0_System_Threading_Tasks_Task_Monadic_Maybe___1____System_Func___0___1___2__
  commentId: M:Monadic.Linq.MaybeExtensions.SelectMany``3(Monadic.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of T, TInner, TReturn)(Maybe(Of T), Func(Of T, Task(Of Maybe(Of TInner))), Func(Of T, TInner, TReturn))
  fullName: Monadic.Linq.MaybeExtensions.SelectMany<T, TInner, TReturn>(Monadic.Maybe<T>, System.Func<T, System.Threading.Tasks.Task<Monadic.Maybe<TInner>>>, System.Func<T, TInner, TReturn>)
  fullName.vb: Monadic.Linq.MaybeExtensions.SelectMany(Of T, TInner, TReturn)(Monadic.Maybe(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of Monadic.Maybe(Of TInner))), System.Func(Of T, TInner, TReturn))
  nameWithType: MaybeExtensions.SelectMany<T, TInner, TReturn>(Maybe<T>, Func<T, Task<Maybe<TInner>>>, Func<T, TInner, TReturn>)
  nameWithType.vb: MaybeExtensions.SelectMany(Of T, TInner, TReturn)(Maybe(Of T), Func(Of T, Task(Of Maybe(Of TInner))), Func(Of T, TInner, TReturn))
- uid: Monadic.Linq.MaybeExtensions.SelectMany``3(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,Monadic.Maybe{``1}},System.Func{``0,``1,``2})
  name: SelectMany<T, TInner, TReturn>(Task<Maybe<T>>, Func<T, Maybe<TInner>>, Func<T, TInner, TReturn>)
  href: api/Monadic.Linq.MaybeExtensions.SelectMany.html#Monadic_Linq_MaybeExtensions_SelectMany__3_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___0_Monadic_Maybe___1___System_Func___0___1___2__
  commentId: M:Monadic.Linq.MaybeExtensions.SelectMany``3(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,Monadic.Maybe{``1}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of T, TInner, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Maybe(Of TInner)), Func(Of T, TInner, TReturn))
  fullName: Monadic.Linq.MaybeExtensions.SelectMany<T, TInner, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<T, Monadic.Maybe<TInner>>, System.Func<T, TInner, TReturn>)
  fullName.vb: Monadic.Linq.MaybeExtensions.SelectMany(Of T, TInner, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of T, Monadic.Maybe(Of TInner)), System.Func(Of T, TInner, TReturn))
  nameWithType: MaybeExtensions.SelectMany<T, TInner, TReturn>(Task<Maybe<T>>, Func<T, Maybe<TInner>>, Func<T, TInner, TReturn>)
  nameWithType.vb: MaybeExtensions.SelectMany(Of T, TInner, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Maybe(Of TInner)), Func(Of T, TInner, TReturn))
- uid: Monadic.Linq.MaybeExtensions.SelectMany``3(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}},System.Func{``0,``1,``2})
  name: SelectMany<T, TInner, TReturn>(Task<Maybe<T>>, Func<T, Task<Maybe<TInner>>>, Func<T, TInner, TReturn>)
  href: api/Monadic.Linq.MaybeExtensions.SelectMany.html#Monadic_Linq_MaybeExtensions_SelectMany__3_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task_Monadic_Maybe___1____System_Func___0___1___2__
  commentId: M:Monadic.Linq.MaybeExtensions.SelectMany``3(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of T, TInner, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Task(Of Maybe(Of TInner))), Func(Of T, TInner, TReturn))
  fullName: Monadic.Linq.MaybeExtensions.SelectMany<T, TInner, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<Monadic.Maybe<TInner>>>, System.Func<T, TInner, TReturn>)
  fullName.vb: Monadic.Linq.MaybeExtensions.SelectMany(Of T, TInner, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Monadic.Maybe(Of TInner))), System.Func(Of T, TInner, TReturn))
  nameWithType: MaybeExtensions.SelectMany<T, TInner, TReturn>(Task<Maybe<T>>, Func<T, Task<Maybe<TInner>>>, Func<T, TInner, TReturn>)
  nameWithType.vb: MaybeExtensions.SelectMany(Of T, TInner, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Task(Of Maybe(Of TInner))), Func(Of T, TInner, TReturn))
- uid: Monadic.Linq.MaybeExtensions.Select``2(Monadic.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: Select<T, TReturn>(Maybe<T>, Func<T, Task<TReturn>>)
  href: api/Monadic.Linq.MaybeExtensions.Select.html#Monadic_Linq_MaybeExtensions_Select__2_Monadic_Maybe___0__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.Linq.MaybeExtensions.Select``2(Monadic.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: Select(Of T, TReturn)(Maybe(Of T), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.Linq.MaybeExtensions.Select<T, TReturn>(Monadic.Maybe<T>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.Linq.MaybeExtensions.Select(Of T, TReturn)(Monadic.Maybe(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.Select<T, TReturn>(Maybe<T>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.Select(Of T, TReturn)(Maybe(Of T), Func(Of T, Task(Of TReturn)))
- uid: Monadic.Linq.MaybeExtensions.Select``2(Monadic.Maybe{``0},System.Func{``0,``1})
  name: Select<T, TReturn>(Maybe<T>, Func<T, TReturn>)
  href: api/Monadic.Linq.MaybeExtensions.Select.html#Monadic_Linq_MaybeExtensions_Select__2_Monadic_Maybe___0__System_Func___0___1__
  commentId: M:Monadic.Linq.MaybeExtensions.Select``2(Monadic.Maybe{``0},System.Func{``0,``1})
  name.vb: Select(Of T, TReturn)(Maybe(Of T), Func(Of T, TReturn))
  fullName: Monadic.Linq.MaybeExtensions.Select<T, TReturn>(Monadic.Maybe<T>, System.Func<T, TReturn>)
  fullName.vb: Monadic.Linq.MaybeExtensions.Select(Of T, TReturn)(Monadic.Maybe(Of T), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.Select<T, TReturn>(Maybe<T>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.Select(Of T, TReturn)(Maybe(Of T), Func(Of T, TReturn))
- uid: Monadic.Linq.MaybeExtensions.Select``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: Select<T, TReturn>(Task<Maybe<T>>, Func<T, Task<TReturn>>)
  href: api/Monadic.Linq.MaybeExtensions.Select.html#Monadic_Linq_MaybeExtensions_Select__2_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.Linq.MaybeExtensions.Select``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: Select(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.Linq.MaybeExtensions.Select<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.Linq.MaybeExtensions.Select(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.Select<T, TReturn>(Task<Maybe<T>>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.Select(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Task(Of TReturn)))
- uid: Monadic.Linq.MaybeExtensions.Select``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,``1})
  name: Select<T, TReturn>(Task<Maybe<T>>, Func<T, TReturn>)
  href: api/Monadic.Linq.MaybeExtensions.Select.html#Monadic_Linq_MaybeExtensions_Select__2_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___0___1__
  commentId: M:Monadic.Linq.MaybeExtensions.Select``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,``1})
  name.vb: Select(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, TReturn))
  fullName: Monadic.Linq.MaybeExtensions.Select<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<T, TReturn>)
  fullName.vb: Monadic.Linq.MaybeExtensions.Select(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.Select<T, TReturn>(Task<Maybe<T>>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.Select(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, TReturn))
- uid: Monadic.Linq.MaybeExtensions.Where*
  name: Where
  href: api/Monadic.Linq.MaybeExtensions.Where.html
  commentId: Overload:Monadic.Linq.MaybeExtensions.Where
  fullName: Monadic.Linq.MaybeExtensions.Where
  nameWithType: MaybeExtensions.Where
- uid: Monadic.Linq.MaybeExtensions.Where``1(Monadic.Maybe{``0},System.Func{``0,System.Boolean})
  name: Where<T>(Maybe<T>, Func<T, bool>)
  href: api/Monadic.Linq.MaybeExtensions.Where.html#Monadic_Linq_MaybeExtensions_Where__1_Monadic_Maybe___0__System_Func___0_System_Boolean__
  commentId: M:Monadic.Linq.MaybeExtensions.Where``1(Monadic.Maybe{``0},System.Func{``0,System.Boolean})
  name.vb: Where(Of T)(Maybe(Of T), Func(Of T, Boolean))
  fullName: Monadic.Linq.MaybeExtensions.Where<T>(Monadic.Maybe<T>, System.Func<T, bool>)
  fullName.vb: Monadic.Linq.MaybeExtensions.Where(Of T)(Monadic.Maybe(Of T), System.Func(Of T, Boolean))
  nameWithType: MaybeExtensions.Where<T>(Maybe<T>, Func<T, bool>)
  nameWithType.vb: MaybeExtensions.Where(Of T)(Maybe(Of T), Func(Of T, Boolean))
- uid: Monadic.Linq.MaybeExtensions.Where``1(Monadic.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: Where<T>(Maybe<T>, Func<T, Task<bool>>)
  href: api/Monadic.Linq.MaybeExtensions.Where.html#Monadic_Linq_MaybeExtensions_Where__1_Monadic_Maybe___0__System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Monadic.Linq.MaybeExtensions.Where``1(Monadic.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: Where(Of T)(Maybe(Of T), Func(Of T, Task(Of Boolean)))
  fullName: Monadic.Linq.MaybeExtensions.Where<T>(Monadic.Maybe<T>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Monadic.Linq.MaybeExtensions.Where(Of T)(Monadic.Maybe(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: MaybeExtensions.Where<T>(Maybe<T>, Func<T, Task<bool>>)
  nameWithType.vb: MaybeExtensions.Where(Of T)(Maybe(Of T), Func(Of T, Task(Of Boolean)))
- uid: Monadic.Linq.MaybeExtensions.Where``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,System.Boolean})
  name: Where<T>(Task<Maybe<T>>, Func<T, bool>)
  href: api/Monadic.Linq.MaybeExtensions.Where.html#Monadic_Linq_MaybeExtensions_Where__1_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___0_System_Boolean__
  commentId: M:Monadic.Linq.MaybeExtensions.Where``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,System.Boolean})
  name.vb: Where(Of T)(Task(Of Maybe(Of T)), Func(Of T, Boolean))
  fullName: Monadic.Linq.MaybeExtensions.Where<T>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<T, bool>)
  fullName.vb: Monadic.Linq.MaybeExtensions.Where(Of T)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of T, Boolean))
  nameWithType: MaybeExtensions.Where<T>(Task<Maybe<T>>, Func<T, bool>)
  nameWithType.vb: MaybeExtensions.Where(Of T)(Task(Of Maybe(Of T)), Func(Of T, Boolean))
- uid: Monadic.Linq.MaybeExtensions.Where``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: Where<T>(Task<Maybe<T>>, Func<T, Task<bool>>)
  href: api/Monadic.Linq.MaybeExtensions.Where.html#Monadic_Linq_MaybeExtensions_Where__1_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Monadic.Linq.MaybeExtensions.Where``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: Where(Of T)(Task(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)))
  fullName: Monadic.Linq.MaybeExtensions.Where<T>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Monadic.Linq.MaybeExtensions.Where(Of T)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: MaybeExtensions.Where<T>(Task<Maybe<T>>, Func<T, Task<bool>>)
  nameWithType.vb: MaybeExtensions.Where(Of T)(Task(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)))
- uid: Monadic.Linq.ResultExtensions
  name: ResultExtensions
  href: api/Monadic.Linq.ResultExtensions.html
  commentId: T:Monadic.Linq.ResultExtensions
  fullName: Monadic.Linq.ResultExtensions
  nameWithType: ResultExtensions
- uid: Monadic.Linq.ResultExtensions.Select*
  name: Select
  href: api/Monadic.Linq.ResultExtensions.Select.html
  commentId: Overload:Monadic.Linq.ResultExtensions.Select
  fullName: Monadic.Linq.ResultExtensions.Select
  nameWithType: ResultExtensions.Select
- uid: Monadic.Linq.ResultExtensions.SelectMany*
  name: SelectMany
  href: api/Monadic.Linq.ResultExtensions.SelectMany.html
  commentId: Overload:Monadic.Linq.ResultExtensions.SelectMany
  fullName: Monadic.Linq.ResultExtensions.SelectMany
  nameWithType: ResultExtensions.SelectMany
- uid: Monadic.Linq.ResultExtensions.SelectMany``3(Monadic.Result{``0},System.Func{``0,Monadic.Result{``1}},System.Func{``0,``1,``2})
  name: SelectMany<T, TInner, TReturn>(Result<T>, Func<T, Result<TInner>>, Func<T, TInner, TReturn>)
  href: api/Monadic.Linq.ResultExtensions.SelectMany.html#Monadic_Linq_ResultExtensions_SelectMany__3_Monadic_Result___0__System_Func___0_Monadic_Result___1___System_Func___0___1___2__
  commentId: M:Monadic.Linq.ResultExtensions.SelectMany``3(Monadic.Result{``0},System.Func{``0,Monadic.Result{``1}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of T, TInner, TReturn)(Result(Of T), Func(Of T, Result(Of TInner)), Func(Of T, TInner, TReturn))
  fullName: Monadic.Linq.ResultExtensions.SelectMany<T, TInner, TReturn>(Monadic.Result<T>, System.Func<T, Monadic.Result<TInner>>, System.Func<T, TInner, TReturn>)
  fullName.vb: Monadic.Linq.ResultExtensions.SelectMany(Of T, TInner, TReturn)(Monadic.Result(Of T), System.Func(Of T, Monadic.Result(Of TInner)), System.Func(Of T, TInner, TReturn))
  nameWithType: ResultExtensions.SelectMany<T, TInner, TReturn>(Result<T>, Func<T, Result<TInner>>, Func<T, TInner, TReturn>)
  nameWithType.vb: ResultExtensions.SelectMany(Of T, TInner, TReturn)(Result(Of T), Func(Of T, Result(Of TInner)), Func(Of T, TInner, TReturn))
- uid: Monadic.Linq.ResultExtensions.SelectMany``3(Monadic.Result{``0},System.Func{``0,System.Threading.Tasks.Task{Monadic.Result{``1}}},System.Func{``0,``1,``2})
  name: SelectMany<T, TInner, TReturn>(Result<T>, Func<T, Task<Result<TInner>>>, Func<T, TInner, TReturn>)
  href: api/Monadic.Linq.ResultExtensions.SelectMany.html#Monadic_Linq_ResultExtensions_SelectMany__3_Monadic_Result___0__System_Func___0_System_Threading_Tasks_Task_Monadic_Result___1____System_Func___0___1___2__
  commentId: M:Monadic.Linq.ResultExtensions.SelectMany``3(Monadic.Result{``0},System.Func{``0,System.Threading.Tasks.Task{Monadic.Result{``1}}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of T, TInner, TReturn)(Result(Of T), Func(Of T, Task(Of Result(Of TInner))), Func(Of T, TInner, TReturn))
  fullName: Monadic.Linq.ResultExtensions.SelectMany<T, TInner, TReturn>(Monadic.Result<T>, System.Func<T, System.Threading.Tasks.Task<Monadic.Result<TInner>>>, System.Func<T, TInner, TReturn>)
  fullName.vb: Monadic.Linq.ResultExtensions.SelectMany(Of T, TInner, TReturn)(Monadic.Result(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of Monadic.Result(Of TInner))), System.Func(Of T, TInner, TReturn))
  nameWithType: ResultExtensions.SelectMany<T, TInner, TReturn>(Result<T>, Func<T, Task<Result<TInner>>>, Func<T, TInner, TReturn>)
  nameWithType.vb: ResultExtensions.SelectMany(Of T, TInner, TReturn)(Result(Of T), Func(Of T, Task(Of Result(Of TInner))), Func(Of T, TInner, TReturn))
- uid: Monadic.Linq.ResultExtensions.SelectMany``3(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,Monadic.Result{``1}},System.Func{``0,``1,``2})
  name: SelectMany<T, TInner, TReturn>(Task<Result<T>>, Func<T, Result<TInner>>, Func<T, TInner, TReturn>)
  href: api/Monadic.Linq.ResultExtensions.SelectMany.html#Monadic_Linq_ResultExtensions_SelectMany__3_System_Threading_Tasks_Task_Monadic_Result___0___System_Func___0_Monadic_Result___1___System_Func___0___1___2__
  commentId: M:Monadic.Linq.ResultExtensions.SelectMany``3(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,Monadic.Result{``1}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of T, TInner, TReturn)(Task(Of Result(Of T)), Func(Of T, Result(Of TInner)), Func(Of T, TInner, TReturn))
  fullName: Monadic.Linq.ResultExtensions.SelectMany<T, TInner, TReturn>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<T, Monadic.Result<TInner>>, System.Func<T, TInner, TReturn>)
  fullName.vb: Monadic.Linq.ResultExtensions.SelectMany(Of T, TInner, TReturn)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of T, Monadic.Result(Of TInner)), System.Func(Of T, TInner, TReturn))
  nameWithType: ResultExtensions.SelectMany<T, TInner, TReturn>(Task<Result<T>>, Func<T, Result<TInner>>, Func<T, TInner, TReturn>)
  nameWithType.vb: ResultExtensions.SelectMany(Of T, TInner, TReturn)(Task(Of Result(Of T)), Func(Of T, Result(Of TInner)), Func(Of T, TInner, TReturn))
- uid: Monadic.Linq.ResultExtensions.SelectMany``3(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{Monadic.Result{``1}}},System.Func{``0,``1,``2})
  name: SelectMany<T, TInner, TReturn>(Task<Result<T>>, Func<T, Task<Result<TInner>>>, Func<T, TInner, TReturn>)
  href: api/Monadic.Linq.ResultExtensions.SelectMany.html#Monadic_Linq_ResultExtensions_SelectMany__3_System_Threading_Tasks_Task_Monadic_Result___0___System_Func___0_System_Threading_Tasks_Task_Monadic_Result___1____System_Func___0___1___2__
  commentId: M:Monadic.Linq.ResultExtensions.SelectMany``3(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{Monadic.Result{``1}}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of T, TInner, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of Result(Of TInner))), Func(Of T, TInner, TReturn))
  fullName: Monadic.Linq.ResultExtensions.SelectMany<T, TInner, TReturn>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<T, System.Threading.Tasks.Task<Monadic.Result<TInner>>>, System.Func<T, TInner, TReturn>)
  fullName.vb: Monadic.Linq.ResultExtensions.SelectMany(Of T, TInner, TReturn)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Monadic.Result(Of TInner))), System.Func(Of T, TInner, TReturn))
  nameWithType: ResultExtensions.SelectMany<T, TInner, TReturn>(Task<Result<T>>, Func<T, Task<Result<TInner>>>, Func<T, TInner, TReturn>)
  nameWithType.vb: ResultExtensions.SelectMany(Of T, TInner, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of Result(Of TInner))), Func(Of T, TInner, TReturn))
- uid: Monadic.Linq.ResultExtensions.Select``2(Monadic.Result{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: Select<T, TReturn>(Result<T>, Func<T, Task<TReturn>>)
  href: api/Monadic.Linq.ResultExtensions.Select.html#Monadic_Linq_ResultExtensions_Select__2_Monadic_Result___0__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.Linq.ResultExtensions.Select``2(Monadic.Result{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: Select(Of T, TReturn)(Result(Of T), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.Linq.ResultExtensions.Select<T, TReturn>(Monadic.Result<T>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.Linq.ResultExtensions.Select(Of T, TReturn)(Monadic.Result(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: ResultExtensions.Select<T, TReturn>(Result<T>, Func<T, Task<TReturn>>)
  nameWithType.vb: ResultExtensions.Select(Of T, TReturn)(Result(Of T), Func(Of T, Task(Of TReturn)))
- uid: Monadic.Linq.ResultExtensions.Select``2(Monadic.Result{``0},System.Func{``0,``1})
  name: Select<T, TReturn>(Result<T>, Func<T, TReturn>)
  href: api/Monadic.Linq.ResultExtensions.Select.html#Monadic_Linq_ResultExtensions_Select__2_Monadic_Result___0__System_Func___0___1__
  commentId: M:Monadic.Linq.ResultExtensions.Select``2(Monadic.Result{``0},System.Func{``0,``1})
  name.vb: Select(Of T, TReturn)(Result(Of T), Func(Of T, TReturn))
  fullName: Monadic.Linq.ResultExtensions.Select<T, TReturn>(Monadic.Result<T>, System.Func<T, TReturn>)
  fullName.vb: Monadic.Linq.ResultExtensions.Select(Of T, TReturn)(Monadic.Result(Of T), System.Func(Of T, TReturn))
  nameWithType: ResultExtensions.Select<T, TReturn>(Result<T>, Func<T, TReturn>)
  nameWithType.vb: ResultExtensions.Select(Of T, TReturn)(Result(Of T), Func(Of T, TReturn))
- uid: Monadic.Linq.ResultExtensions.Select``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: Select<T, TReturn>(Task<Result<T>>, Func<T, Task<TReturn>>)
  href: api/Monadic.Linq.ResultExtensions.Select.html#Monadic_Linq_ResultExtensions_Select__2_System_Threading_Tasks_Task_Monadic_Result___0___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.Linq.ResultExtensions.Select``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: Select(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.Linq.ResultExtensions.Select<T, TReturn>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.Linq.ResultExtensions.Select(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: ResultExtensions.Select<T, TReturn>(Task<Result<T>>, Func<T, Task<TReturn>>)
  nameWithType.vb: ResultExtensions.Select(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of TReturn)))
- uid: Monadic.Linq.ResultExtensions.Select``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,``1})
  name: Select<T, TReturn>(Task<Result<T>>, Func<T, TReturn>)
  href: api/Monadic.Linq.ResultExtensions.Select.html#Monadic_Linq_ResultExtensions_Select__2_System_Threading_Tasks_Task_Monadic_Result___0___System_Func___0___1__
  commentId: M:Monadic.Linq.ResultExtensions.Select``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,``1})
  name.vb: Select(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, TReturn))
  fullName: Monadic.Linq.ResultExtensions.Select<T, TReturn>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<T, TReturn>)
  fullName.vb: Monadic.Linq.ResultExtensions.Select(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of T, TReturn))
  nameWithType: ResultExtensions.Select<T, TReturn>(Task<Result<T>>, Func<T, TReturn>)
  nameWithType.vb: ResultExtensions.Select(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, TReturn))
- uid: Monadic.Linq.ResultExtensions.Where*
  name: Where
  href: api/Monadic.Linq.ResultExtensions.Where.html
  commentId: Overload:Monadic.Linq.ResultExtensions.Where
  fullName: Monadic.Linq.ResultExtensions.Where
  nameWithType: ResultExtensions.Where
- uid: Monadic.Linq.ResultExtensions.Where``1(Monadic.Result{``0},System.Func{``0,System.Boolean})
  name: Where<T>(Result<T>, Func<T, bool>)
  href: api/Monadic.Linq.ResultExtensions.Where.html#Monadic_Linq_ResultExtensions_Where__1_Monadic_Result___0__System_Func___0_System_Boolean__
  commentId: M:Monadic.Linq.ResultExtensions.Where``1(Monadic.Result{``0},System.Func{``0,System.Boolean})
  name.vb: Where(Of T)(Result(Of T), Func(Of T, Boolean))
  fullName: Monadic.Linq.ResultExtensions.Where<T>(Monadic.Result<T>, System.Func<T, bool>)
  fullName.vb: Monadic.Linq.ResultExtensions.Where(Of T)(Monadic.Result(Of T), System.Func(Of T, Boolean))
  nameWithType: ResultExtensions.Where<T>(Result<T>, Func<T, bool>)
  nameWithType.vb: ResultExtensions.Where(Of T)(Result(Of T), Func(Of T, Boolean))
- uid: Monadic.Linq.ResultExtensions.Where``1(Monadic.Result{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: Where<T>(Result<T>, Func<T, Task<bool>>)
  href: api/Monadic.Linq.ResultExtensions.Where.html#Monadic_Linq_ResultExtensions_Where__1_Monadic_Result___0__System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Monadic.Linq.ResultExtensions.Where``1(Monadic.Result{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: Where(Of T)(Result(Of T), Func(Of T, Task(Of Boolean)))
  fullName: Monadic.Linq.ResultExtensions.Where<T>(Monadic.Result<T>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Monadic.Linq.ResultExtensions.Where(Of T)(Monadic.Result(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: ResultExtensions.Where<T>(Result<T>, Func<T, Task<bool>>)
  nameWithType.vb: ResultExtensions.Where(Of T)(Result(Of T), Func(Of T, Task(Of Boolean)))
- uid: Monadic.Linq.ResultExtensions.Where``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,System.Boolean})
  name: Where<T>(Task<Result<T>>, Func<T, bool>)
  href: api/Monadic.Linq.ResultExtensions.Where.html#Monadic_Linq_ResultExtensions_Where__1_System_Threading_Tasks_Task_Monadic_Result___0___System_Func___0_System_Boolean__
  commentId: M:Monadic.Linq.ResultExtensions.Where``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,System.Boolean})
  name.vb: Where(Of T)(Task(Of Result(Of T)), Func(Of T, Boolean))
  fullName: Monadic.Linq.ResultExtensions.Where<T>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<T, bool>)
  fullName.vb: Monadic.Linq.ResultExtensions.Where(Of T)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of T, Boolean))
  nameWithType: ResultExtensions.Where<T>(Task<Result<T>>, Func<T, bool>)
  nameWithType.vb: ResultExtensions.Where(Of T)(Task(Of Result(Of T)), Func(Of T, Boolean))
- uid: Monadic.Linq.ResultExtensions.Where``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: Where<T>(Task<Result<T>>, Func<T, Task<bool>>)
  href: api/Monadic.Linq.ResultExtensions.Where.html#Monadic_Linq_ResultExtensions_Where__1_System_Threading_Tasks_Task_Monadic_Result___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Monadic.Linq.ResultExtensions.Where``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: Where(Of T)(Task(Of Result(Of T)), Func(Of T, Task(Of Boolean)))
  fullName: Monadic.Linq.ResultExtensions.Where<T>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Monadic.Linq.ResultExtensions.Where(Of T)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: ResultExtensions.Where<T>(Task<Result<T>>, Func<T, Task<bool>>)
  nameWithType.vb: ResultExtensions.Where(Of T)(Task(Of Result(Of T)), Func(Of T, Task(Of Boolean)))
- uid: Monadic.M
  name: M
  href: api/Monadic.M.html
  commentId: T:Monadic.M
  fullName: Monadic.M
  nameWithType: M
- uid: Monadic.M.DefaultCulture
  name: DefaultCulture
  href: api/Monadic.M.DefaultCulture.html#Monadic_M_DefaultCulture
  commentId: P:Monadic.M.DefaultCulture
  fullName: Monadic.M.DefaultCulture
  nameWithType: M.DefaultCulture
- uid: Monadic.M.DefaultCulture*
  name: DefaultCulture
  href: api/Monadic.M.DefaultCulture.html
  commentId: Overload:Monadic.M.DefaultCulture
  fullName: Monadic.M.DefaultCulture
  nameWithType: M.DefaultCulture
- uid: Monadic.M.None
  name: None
  href: api/Monadic.M.None.html#Monadic_M_None
  commentId: P:Monadic.M.None
  fullName: Monadic.M.None
  nameWithType: M.None
- uid: Monadic.M.None*
  name: None
  href: api/Monadic.M.None.html
  commentId: Overload:Monadic.M.None
  fullName: Monadic.M.None
  nameWithType: M.None
- uid: Monadic.M.ParseBool(System.ReadOnlySpan{System.Char})
  name: ParseBool(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseBool.html#Monadic_M_ParseBool_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseBool(System.ReadOnlySpan{System.Char})
  name.vb: ParseBool(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseBool(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseBool(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseBool(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseBool(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseBool(System.String)
  name: ParseBool(string?)
  href: api/Monadic.M.ParseBool.html#Monadic_M_ParseBool_System_String_
  commentId: M:Monadic.M.ParseBool(System.String)
  name.vb: ParseBool(String)
  fullName: Monadic.M.ParseBool(string?)
  fullName.vb: Monadic.M.ParseBool(String)
  nameWithType: M.ParseBool(string?)
  nameWithType.vb: M.ParseBool(String)
- uid: Monadic.M.ParseBool*
  name: ParseBool
  href: api/Monadic.M.ParseBool.html
  commentId: Overload:Monadic.M.ParseBool
  fullName: Monadic.M.ParseBool
  nameWithType: M.ParseBool
- uid: Monadic.M.ParseByte(System.ReadOnlySpan{System.Char})
  name: ParseByte(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseByte.html#Monadic_M_ParseByte_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseByte(System.ReadOnlySpan{System.Char})
  name.vb: ParseByte(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseByte(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseByte(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseByte(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseByte(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseByte(System.String)
  name: ParseByte(string?)
  href: api/Monadic.M.ParseByte.html#Monadic_M_ParseByte_System_String_
  commentId: M:Monadic.M.ParseByte(System.String)
  name.vb: ParseByte(String)
  fullName: Monadic.M.ParseByte(string?)
  fullName.vb: Monadic.M.ParseByte(String)
  nameWithType: M.ParseByte(string?)
  nameWithType.vb: M.ParseByte(String)
- uid: Monadic.M.ParseByte*
  name: ParseByte
  href: api/Monadic.M.ParseByte.html
  commentId: Overload:Monadic.M.ParseByte
  fullName: Monadic.M.ParseByte
  nameWithType: M.ParseByte
- uid: Monadic.M.ParseChar(System.String)
  name: ParseChar(string?)
  href: api/Monadic.M.ParseChar.html#Monadic_M_ParseChar_System_String_
  commentId: M:Monadic.M.ParseChar(System.String)
  name.vb: ParseChar(String)
  fullName: Monadic.M.ParseChar(string?)
  fullName.vb: Monadic.M.ParseChar(String)
  nameWithType: M.ParseChar(string?)
  nameWithType.vb: M.ParseChar(String)
- uid: Monadic.M.ParseChar*
  name: ParseChar
  href: api/Monadic.M.ParseChar.html
  commentId: Overload:Monadic.M.ParseChar
  fullName: Monadic.M.ParseChar
  nameWithType: M.ParseChar
- uid: Monadic.M.ParseDateOnly(System.ReadOnlySpan{System.Char})
  name: ParseDateOnly(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseDateOnly.html#Monadic_M_ParseDateOnly_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseDateOnly(System.ReadOnlySpan{System.Char})
  name.vb: ParseDateOnly(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseDateOnly(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseDateOnly(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseDateOnly(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseDateOnly(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseDateOnly(System.String)
  name: ParseDateOnly(string?)
  href: api/Monadic.M.ParseDateOnly.html#Monadic_M_ParseDateOnly_System_String_
  commentId: M:Monadic.M.ParseDateOnly(System.String)
  name.vb: ParseDateOnly(String)
  fullName: Monadic.M.ParseDateOnly(string?)
  fullName.vb: Monadic.M.ParseDateOnly(String)
  nameWithType: M.ParseDateOnly(string?)
  nameWithType.vb: M.ParseDateOnly(String)
- uid: Monadic.M.ParseDateOnly*
  name: ParseDateOnly
  href: api/Monadic.M.ParseDateOnly.html
  commentId: Overload:Monadic.M.ParseDateOnly
  fullName: Monadic.M.ParseDateOnly
  nameWithType: M.ParseDateOnly
- uid: Monadic.M.ParseDateTime(System.ReadOnlySpan{System.Char})
  name: ParseDateTime(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseDateTime.html#Monadic_M_ParseDateTime_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseDateTime(System.ReadOnlySpan{System.Char})
  name.vb: ParseDateTime(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseDateTime(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseDateTime(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseDateTime(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseDateTime(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseDateTime(System.String)
  name: ParseDateTime(string?)
  href: api/Monadic.M.ParseDateTime.html#Monadic_M_ParseDateTime_System_String_
  commentId: M:Monadic.M.ParseDateTime(System.String)
  name.vb: ParseDateTime(String)
  fullName: Monadic.M.ParseDateTime(string?)
  fullName.vb: Monadic.M.ParseDateTime(String)
  nameWithType: M.ParseDateTime(string?)
  nameWithType.vb: M.ParseDateTime(String)
- uid: Monadic.M.ParseDateTime*
  name: ParseDateTime
  href: api/Monadic.M.ParseDateTime.html
  commentId: Overload:Monadic.M.ParseDateTime
  fullName: Monadic.M.ParseDateTime
  nameWithType: M.ParseDateTime
- uid: Monadic.M.ParseDateTimeOffset(System.ReadOnlySpan{System.Char})
  name: ParseDateTimeOffset(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseDateTimeOffset.html#Monadic_M_ParseDateTimeOffset_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseDateTimeOffset(System.ReadOnlySpan{System.Char})
  name.vb: ParseDateTimeOffset(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseDateTimeOffset(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseDateTimeOffset(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseDateTimeOffset(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseDateTimeOffset(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseDateTimeOffset(System.String)
  name: ParseDateTimeOffset(string?)
  href: api/Monadic.M.ParseDateTimeOffset.html#Monadic_M_ParseDateTimeOffset_System_String_
  commentId: M:Monadic.M.ParseDateTimeOffset(System.String)
  name.vb: ParseDateTimeOffset(String)
  fullName: Monadic.M.ParseDateTimeOffset(string?)
  fullName.vb: Monadic.M.ParseDateTimeOffset(String)
  nameWithType: M.ParseDateTimeOffset(string?)
  nameWithType.vb: M.ParseDateTimeOffset(String)
- uid: Monadic.M.ParseDateTimeOffset*
  name: ParseDateTimeOffset
  href: api/Monadic.M.ParseDateTimeOffset.html
  commentId: Overload:Monadic.M.ParseDateTimeOffset
  fullName: Monadic.M.ParseDateTimeOffset
  nameWithType: M.ParseDateTimeOffset
- uid: Monadic.M.ParseDecimal(System.ReadOnlySpan{System.Char})
  name: ParseDecimal(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseDecimal.html#Monadic_M_ParseDecimal_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseDecimal(System.ReadOnlySpan{System.Char})
  name.vb: ParseDecimal(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseDecimal(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseDecimal(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseDecimal(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseDecimal(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseDecimal(System.String)
  name: ParseDecimal(string?)
  href: api/Monadic.M.ParseDecimal.html#Monadic_M_ParseDecimal_System_String_
  commentId: M:Monadic.M.ParseDecimal(System.String)
  name.vb: ParseDecimal(String)
  fullName: Monadic.M.ParseDecimal(string?)
  fullName.vb: Monadic.M.ParseDecimal(String)
  nameWithType: M.ParseDecimal(string?)
  nameWithType.vb: M.ParseDecimal(String)
- uid: Monadic.M.ParseDecimal*
  name: ParseDecimal
  href: api/Monadic.M.ParseDecimal.html
  commentId: Overload:Monadic.M.ParseDecimal
  fullName: Monadic.M.ParseDecimal
  nameWithType: M.ParseDecimal
- uid: Monadic.M.ParseDouble(System.ReadOnlySpan{System.Char})
  name: ParseDouble(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseDouble.html#Monadic_M_ParseDouble_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseDouble(System.ReadOnlySpan{System.Char})
  name.vb: ParseDouble(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseDouble(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseDouble(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseDouble(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseDouble(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseDouble(System.String)
  name: ParseDouble(string?)
  href: api/Monadic.M.ParseDouble.html#Monadic_M_ParseDouble_System_String_
  commentId: M:Monadic.M.ParseDouble(System.String)
  name.vb: ParseDouble(String)
  fullName: Monadic.M.ParseDouble(string?)
  fullName.vb: Monadic.M.ParseDouble(String)
  nameWithType: M.ParseDouble(string?)
  nameWithType.vb: M.ParseDouble(String)
- uid: Monadic.M.ParseDouble*
  name: ParseDouble
  href: api/Monadic.M.ParseDouble.html
  commentId: Overload:Monadic.M.ParseDouble
  fullName: Monadic.M.ParseDouble
  nameWithType: M.ParseDouble
- uid: Monadic.M.ParseGuid(System.ReadOnlySpan{System.Char})
  name: ParseGuid(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseGuid.html#Monadic_M_ParseGuid_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseGuid(System.ReadOnlySpan{System.Char})
  name.vb: ParseGuid(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseGuid(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseGuid(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseGuid(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseGuid(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseGuid(System.String)
  name: ParseGuid(string?)
  href: api/Monadic.M.ParseGuid.html#Monadic_M_ParseGuid_System_String_
  commentId: M:Monadic.M.ParseGuid(System.String)
  name.vb: ParseGuid(String)
  fullName: Monadic.M.ParseGuid(string?)
  fullName.vb: Monadic.M.ParseGuid(String)
  nameWithType: M.ParseGuid(string?)
  nameWithType.vb: M.ParseGuid(String)
- uid: Monadic.M.ParseGuid*
  name: ParseGuid
  href: api/Monadic.M.ParseGuid.html
  commentId: Overload:Monadic.M.ParseGuid
  fullName: Monadic.M.ParseGuid
  nameWithType: M.ParseGuid
- uid: Monadic.M.ParseInt16(System.ReadOnlySpan{System.Char})
  name: ParseInt16(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseInt16.html#Monadic_M_ParseInt16_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseInt16(System.ReadOnlySpan{System.Char})
  name.vb: ParseInt16(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseInt16(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseInt16(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseInt16(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseInt16(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseInt16(System.String)
  name: ParseInt16(string?)
  href: api/Monadic.M.ParseInt16.html#Monadic_M_ParseInt16_System_String_
  commentId: M:Monadic.M.ParseInt16(System.String)
  name.vb: ParseInt16(String)
  fullName: Monadic.M.ParseInt16(string?)
  fullName.vb: Monadic.M.ParseInt16(String)
  nameWithType: M.ParseInt16(string?)
  nameWithType.vb: M.ParseInt16(String)
- uid: Monadic.M.ParseInt16*
  name: ParseInt16
  href: api/Monadic.M.ParseInt16.html
  commentId: Overload:Monadic.M.ParseInt16
  fullName: Monadic.M.ParseInt16
  nameWithType: M.ParseInt16
- uid: Monadic.M.ParseInt32(System.ReadOnlySpan{System.Char})
  name: ParseInt32(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseInt32.html#Monadic_M_ParseInt32_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseInt32(System.ReadOnlySpan{System.Char})
  name.vb: ParseInt32(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseInt32(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseInt32(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseInt32(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseInt32(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseInt32(System.String)
  name: ParseInt32(string?)
  href: api/Monadic.M.ParseInt32.html#Monadic_M_ParseInt32_System_String_
  commentId: M:Monadic.M.ParseInt32(System.String)
  name.vb: ParseInt32(String)
  fullName: Monadic.M.ParseInt32(string?)
  fullName.vb: Monadic.M.ParseInt32(String)
  nameWithType: M.ParseInt32(string?)
  nameWithType.vb: M.ParseInt32(String)
- uid: Monadic.M.ParseInt32*
  name: ParseInt32
  href: api/Monadic.M.ParseInt32.html
  commentId: Overload:Monadic.M.ParseInt32
  fullName: Monadic.M.ParseInt32
  nameWithType: M.ParseInt32
- uid: Monadic.M.ParseInt64(System.ReadOnlySpan{System.Char})
  name: ParseInt64(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseInt64.html#Monadic_M_ParseInt64_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseInt64(System.ReadOnlySpan{System.Char})
  name.vb: ParseInt64(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseInt64(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseInt64(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseInt64(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseInt64(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseInt64(System.String)
  name: ParseInt64(string?)
  href: api/Monadic.M.ParseInt64.html#Monadic_M_ParseInt64_System_String_
  commentId: M:Monadic.M.ParseInt64(System.String)
  name.vb: ParseInt64(String)
  fullName: Monadic.M.ParseInt64(string?)
  fullName.vb: Monadic.M.ParseInt64(String)
  nameWithType: M.ParseInt64(string?)
  nameWithType.vb: M.ParseInt64(String)
- uid: Monadic.M.ParseInt64*
  name: ParseInt64
  href: api/Monadic.M.ParseInt64.html
  commentId: Overload:Monadic.M.ParseInt64
  fullName: Monadic.M.ParseInt64
  nameWithType: M.ParseInt64
- uid: Monadic.M.ParseIntPtr(System.ReadOnlySpan{System.Char})
  name: ParseIntPtr(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseIntPtr.html#Monadic_M_ParseIntPtr_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseIntPtr(System.ReadOnlySpan{System.Char})
  name.vb: ParseIntPtr(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseIntPtr(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseIntPtr(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseIntPtr(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseIntPtr(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseIntPtr(System.String)
  name: ParseIntPtr(string?)
  href: api/Monadic.M.ParseIntPtr.html#Monadic_M_ParseIntPtr_System_String_
  commentId: M:Monadic.M.ParseIntPtr(System.String)
  name.vb: ParseIntPtr(String)
  fullName: Monadic.M.ParseIntPtr(string?)
  fullName.vb: Monadic.M.ParseIntPtr(String)
  nameWithType: M.ParseIntPtr(string?)
  nameWithType.vb: M.ParseIntPtr(String)
- uid: Monadic.M.ParseIntPtr*
  name: ParseIntPtr
  href: api/Monadic.M.ParseIntPtr.html
  commentId: Overload:Monadic.M.ParseIntPtr
  fullName: Monadic.M.ParseIntPtr
  nameWithType: M.ParseIntPtr
- uid: Monadic.M.ParseSByte(System.ReadOnlySpan{System.Char})
  name: ParseSByte(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseSByte.html#Monadic_M_ParseSByte_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseSByte(System.ReadOnlySpan{System.Char})
  name.vb: ParseSByte(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseSByte(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseSByte(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseSByte(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseSByte(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseSByte(System.String)
  name: ParseSByte(string?)
  href: api/Monadic.M.ParseSByte.html#Monadic_M_ParseSByte_System_String_
  commentId: M:Monadic.M.ParseSByte(System.String)
  name.vb: ParseSByte(String)
  fullName: Monadic.M.ParseSByte(string?)
  fullName.vb: Monadic.M.ParseSByte(String)
  nameWithType: M.ParseSByte(string?)
  nameWithType.vb: M.ParseSByte(String)
- uid: Monadic.M.ParseSByte*
  name: ParseSByte
  href: api/Monadic.M.ParseSByte.html
  commentId: Overload:Monadic.M.ParseSByte
  fullName: Monadic.M.ParseSByte
  nameWithType: M.ParseSByte
- uid: Monadic.M.ParseSingle(System.ReadOnlySpan{System.Char})
  name: ParseSingle(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseSingle.html#Monadic_M_ParseSingle_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseSingle(System.ReadOnlySpan{System.Char})
  name.vb: ParseSingle(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseSingle(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseSingle(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseSingle(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseSingle(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseSingle(System.String)
  name: ParseSingle(string?)
  href: api/Monadic.M.ParseSingle.html#Monadic_M_ParseSingle_System_String_
  commentId: M:Monadic.M.ParseSingle(System.String)
  name.vb: ParseSingle(String)
  fullName: Monadic.M.ParseSingle(string?)
  fullName.vb: Monadic.M.ParseSingle(String)
  nameWithType: M.ParseSingle(string?)
  nameWithType.vb: M.ParseSingle(String)
- uid: Monadic.M.ParseSingle*
  name: ParseSingle
  href: api/Monadic.M.ParseSingle.html
  commentId: Overload:Monadic.M.ParseSingle
  fullName: Monadic.M.ParseSingle
  nameWithType: M.ParseSingle
- uid: Monadic.M.ParseTimeOnly(System.ReadOnlySpan{System.Char})
  name: ParseTimeOnly(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseTimeOnly.html#Monadic_M_ParseTimeOnly_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseTimeOnly(System.ReadOnlySpan{System.Char})
  name.vb: ParseTimeOnly(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseTimeOnly(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseTimeOnly(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseTimeOnly(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseTimeOnly(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseTimeOnly(System.String)
  name: ParseTimeOnly(string?)
  href: api/Monadic.M.ParseTimeOnly.html#Monadic_M_ParseTimeOnly_System_String_
  commentId: M:Monadic.M.ParseTimeOnly(System.String)
  name.vb: ParseTimeOnly(String)
  fullName: Monadic.M.ParseTimeOnly(string?)
  fullName.vb: Monadic.M.ParseTimeOnly(String)
  nameWithType: M.ParseTimeOnly(string?)
  nameWithType.vb: M.ParseTimeOnly(String)
- uid: Monadic.M.ParseTimeOnly*
  name: ParseTimeOnly
  href: api/Monadic.M.ParseTimeOnly.html
  commentId: Overload:Monadic.M.ParseTimeOnly
  fullName: Monadic.M.ParseTimeOnly
  nameWithType: M.ParseTimeOnly
- uid: Monadic.M.ParseUInt16(System.ReadOnlySpan{System.Char})
  name: ParseUInt16(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseUInt16.html#Monadic_M_ParseUInt16_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseUInt16(System.ReadOnlySpan{System.Char})
  name.vb: ParseUInt16(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseUInt16(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseUInt16(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseUInt16(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseUInt16(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseUInt16(System.String)
  name: ParseUInt16(string?)
  href: api/Monadic.M.ParseUInt16.html#Monadic_M_ParseUInt16_System_String_
  commentId: M:Monadic.M.ParseUInt16(System.String)
  name.vb: ParseUInt16(String)
  fullName: Monadic.M.ParseUInt16(string?)
  fullName.vb: Monadic.M.ParseUInt16(String)
  nameWithType: M.ParseUInt16(string?)
  nameWithType.vb: M.ParseUInt16(String)
- uid: Monadic.M.ParseUInt16*
  name: ParseUInt16
  href: api/Monadic.M.ParseUInt16.html
  commentId: Overload:Monadic.M.ParseUInt16
  fullName: Monadic.M.ParseUInt16
  nameWithType: M.ParseUInt16
- uid: Monadic.M.ParseUInt32(System.ReadOnlySpan{System.Char})
  name: ParseUInt32(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseUInt32.html#Monadic_M_ParseUInt32_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseUInt32(System.ReadOnlySpan{System.Char})
  name.vb: ParseUInt32(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseUInt32(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseUInt32(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseUInt32(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseUInt32(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseUInt32(System.String)
  name: ParseUInt32(string?)
  href: api/Monadic.M.ParseUInt32.html#Monadic_M_ParseUInt32_System_String_
  commentId: M:Monadic.M.ParseUInt32(System.String)
  name.vb: ParseUInt32(String)
  fullName: Monadic.M.ParseUInt32(string?)
  fullName.vb: Monadic.M.ParseUInt32(String)
  nameWithType: M.ParseUInt32(string?)
  nameWithType.vb: M.ParseUInt32(String)
- uid: Monadic.M.ParseUInt32*
  name: ParseUInt32
  href: api/Monadic.M.ParseUInt32.html
  commentId: Overload:Monadic.M.ParseUInt32
  fullName: Monadic.M.ParseUInt32
  nameWithType: M.ParseUInt32
- uid: Monadic.M.ParseUInt64(System.ReadOnlySpan{System.Char})
  name: ParseUInt64(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseUInt64.html#Monadic_M_ParseUInt64_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseUInt64(System.ReadOnlySpan{System.Char})
  name.vb: ParseUInt64(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseUInt64(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseUInt64(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseUInt64(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseUInt64(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseUInt64(System.String)
  name: ParseUInt64(string?)
  href: api/Monadic.M.ParseUInt64.html#Monadic_M_ParseUInt64_System_String_
  commentId: M:Monadic.M.ParseUInt64(System.String)
  name.vb: ParseUInt64(String)
  fullName: Monadic.M.ParseUInt64(string?)
  fullName.vb: Monadic.M.ParseUInt64(String)
  nameWithType: M.ParseUInt64(string?)
  nameWithType.vb: M.ParseUInt64(String)
- uid: Monadic.M.ParseUInt64*
  name: ParseUInt64
  href: api/Monadic.M.ParseUInt64.html
  commentId: Overload:Monadic.M.ParseUInt64
  fullName: Monadic.M.ParseUInt64
  nameWithType: M.ParseUInt64
- uid: Monadic.M.ParseUIntPtr(System.ReadOnlySpan{System.Char})
  name: ParseUIntPtr(ReadOnlySpan<char>)
  href: api/Monadic.M.ParseUIntPtr.html#Monadic_M_ParseUIntPtr_System_ReadOnlySpan_System_Char__
  commentId: M:Monadic.M.ParseUIntPtr(System.ReadOnlySpan{System.Char})
  name.vb: ParseUIntPtr(ReadOnlySpan(Of Char))
  fullName: Monadic.M.ParseUIntPtr(System.ReadOnlySpan<char>)
  fullName.vb: Monadic.M.ParseUIntPtr(System.ReadOnlySpan(Of Char))
  nameWithType: M.ParseUIntPtr(ReadOnlySpan<char>)
  nameWithType.vb: M.ParseUIntPtr(ReadOnlySpan(Of Char))
- uid: Monadic.M.ParseUIntPtr(System.String)
  name: ParseUIntPtr(string?)
  href: api/Monadic.M.ParseUIntPtr.html#Monadic_M_ParseUIntPtr_System_String_
  commentId: M:Monadic.M.ParseUIntPtr(System.String)
  name.vb: ParseUIntPtr(String)
  fullName: Monadic.M.ParseUIntPtr(string?)
  fullName.vb: Monadic.M.ParseUIntPtr(String)
  nameWithType: M.ParseUIntPtr(string?)
  nameWithType.vb: M.ParseUIntPtr(String)
- uid: Monadic.M.ParseUIntPtr*
  name: ParseUIntPtr
  href: api/Monadic.M.ParseUIntPtr.html
  commentId: Overload:Monadic.M.ParseUIntPtr
  fullName: Monadic.M.ParseUIntPtr
  nameWithType: M.ParseUIntPtr
- uid: Monadic.M.Switch*
  name: Switch
  href: api/Monadic.M.Switch.html
  commentId: Overload:Monadic.M.Switch
  fullName: Monadic.M.Switch
  nameWithType: M.Switch
- uid: Monadic.M.SwitchAsync*
  name: SwitchAsync
  href: api/Monadic.M.SwitchAsync.html
  commentId: Overload:Monadic.M.SwitchAsync
  fullName: Monadic.M.SwitchAsync
  nameWithType: M.SwitchAsync
- uid: Monadic.M.SwitchAsync``1(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: SwitchAsync<T>(Maybe<T>, Func<Task>, Func<T, Task>)
  href: api/Monadic.M.SwitchAsync.html#Monadic_M_SwitchAsync__1_Monadic_Maybe___0__System_Func_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Monadic.M.SwitchAsync``1(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: SwitchAsync(Of T)(Maybe(Of T), Func(Of Task), Func(Of T, Task))
  fullName: Monadic.M.SwitchAsync<T>(Monadic.Maybe<T>, System.Func<System.Threading.Tasks.Task>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Monadic.M.SwitchAsync(Of T)(Monadic.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: M.SwitchAsync<T>(Maybe<T>, Func<Task>, Func<T, Task>)
  nameWithType.vb: M.SwitchAsync(Of T)(Maybe(Of T), Func(Of Task), Func(Of T, Task))
- uid: Monadic.M.SwitchAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: SwitchAsync<T>(Task<Maybe<T>>, Func<Task>, Func<T, Task>)
  href: api/Monadic.M.SwitchAsync.html#Monadic_M_SwitchAsync__1_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Monadic.M.SwitchAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: SwitchAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task), Func(Of T, Task))
  fullName: Monadic.M.SwitchAsync<T>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<System.Threading.Tasks.Task>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Monadic.M.SwitchAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: M.SwitchAsync<T>(Task<Maybe<T>>, Func<Task>, Func<T, Task>)
  nameWithType.vb: M.SwitchAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task), Func(Of T, Task))
- uid: Monadic.M.SwitchAsync``2(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: SwitchAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Monadic.M.SwitchAsync.html#Monadic_M_SwitchAsync__2_Monadic_Maybe___0__System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.M.SwitchAsync``2(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: SwitchAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.M.SwitchAsync<T, TReturn>(Monadic.Maybe<T>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.M.SwitchAsync(Of T, TReturn)(Monadic.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: M.SwitchAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: M.SwitchAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Monadic.M.SwitchAsync``2(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: SwitchAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, TReturn>)
  href: api/Monadic.M.SwitchAsync.html#Monadic_M_SwitchAsync__2_Monadic_Maybe___0__System_Func_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Monadic.M.SwitchAsync``2(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: SwitchAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Monadic.M.SwitchAsync<T, TReturn>(Monadic.Maybe<T>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Monadic.M.SwitchAsync(Of T, TReturn)(Monadic.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: M.SwitchAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: M.SwitchAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, TReturn))
- uid: Monadic.M.SwitchAsync``2(Monadic.Maybe{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: SwitchAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, Task<TReturn>>)
  href: api/Monadic.M.SwitchAsync.html#Monadic_M_SwitchAsync__2_Monadic_Maybe___0__System_Func___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.M.SwitchAsync``2(Monadic.Maybe{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: SwitchAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.M.SwitchAsync<T, TReturn>(Monadic.Maybe<T>, System.Func<TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.M.SwitchAsync(Of T, TReturn)(Monadic.Maybe(Of T), System.Func(Of TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: M.SwitchAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: M.SwitchAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Task(Of TReturn)))
- uid: Monadic.M.SwitchAsync``2(Monadic.Maybe{``0},``1,System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: SwitchAsync<T, TReturn>(Maybe<T>, TReturn, Func<T, Task<TReturn>>)
  href: api/Monadic.M.SwitchAsync.html#Monadic_M_SwitchAsync__2_Monadic_Maybe___0____1_System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.M.SwitchAsync``2(Monadic.Maybe{``0},``1,System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: SwitchAsync(Of T, TReturn)(Maybe(Of T), TReturn, Func(Of T, Task(Of TReturn)))
  fullName: Monadic.M.SwitchAsync<T, TReturn>(Monadic.Maybe<T>, TReturn, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.M.SwitchAsync(Of T, TReturn)(Monadic.Maybe(Of T), TReturn, System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: M.SwitchAsync<T, TReturn>(Maybe<T>, TReturn, Func<T, Task<TReturn>>)
  nameWithType.vb: M.SwitchAsync(Of T, TReturn)(Maybe(Of T), TReturn, Func(Of T, Task(Of TReturn)))
- uid: Monadic.M.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: SwitchAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Monadic.M.SwitchAsync.html#Monadic_M_SwitchAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.M.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.M.SwitchAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.M.SwitchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: M.SwitchAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: M.SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Monadic.M.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: SwitchAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, TReturn>)
  href: api/Monadic.M.SwitchAsync.html#Monadic_M_SwitchAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Monadic.M.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Monadic.M.SwitchAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Monadic.M.SwitchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: M.SwitchAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: M.SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, TReturn))
- uid: Monadic.M.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: SwitchAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, Task<TReturn>>)
  href: api/Monadic.M.SwitchAsync.html#Monadic_M_SwitchAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.M.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.M.SwitchAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.M.SwitchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: M.SwitchAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: M.SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Task(Of TReturn)))
- uid: Monadic.M.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``1},System.Func{``0,``1})
  name: SwitchAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, TReturn>)
  href: api/Monadic.M.SwitchAsync.html#Monadic_M_SwitchAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___1__System_Func___0___1__
  commentId: M:Monadic.M.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``1},System.Func{``0,``1})
  name.vb: SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, TReturn))
  fullName: Monadic.M.SwitchAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<TReturn>, System.Func<T, TReturn>)
  fullName.vb: Monadic.M.SwitchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of TReturn), System.Func(Of T, TReturn))
  nameWithType: M.SwitchAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, TReturn>)
  nameWithType.vb: M.SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, TReturn))
- uid: Monadic.M.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},``1,System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: SwitchAsync<T, TReturn>(Task<Maybe<T>>, TReturn, Func<T, Task<TReturn>>)
  href: api/Monadic.M.SwitchAsync.html#Monadic_M_SwitchAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0_____1_System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.M.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},``1,System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), TReturn, Func(Of T, Task(Of TReturn)))
  fullName: Monadic.M.SwitchAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, TReturn, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.M.SwitchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), TReturn, System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: M.SwitchAsync<T, TReturn>(Task<Maybe<T>>, TReturn, Func<T, Task<TReturn>>)
  nameWithType.vb: M.SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), TReturn, Func(Of T, Task(Of TReturn)))
- uid: Monadic.M.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},``1,System.Func{``0,``1})
  name: SwitchAsync<T, TReturn>(Task<Maybe<T>>, TReturn, Func<T, TReturn>)
  href: api/Monadic.M.SwitchAsync.html#Monadic_M_SwitchAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0_____1_System_Func___0___1__
  commentId: M:Monadic.M.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},``1,System.Func{``0,``1})
  name.vb: SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), TReturn, Func(Of T, TReturn))
  fullName: Monadic.M.SwitchAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, TReturn, System.Func<T, TReturn>)
  fullName.vb: Monadic.M.SwitchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), TReturn, System.Func(Of T, TReturn))
  nameWithType: M.SwitchAsync<T, TReturn>(Task<Maybe<T>>, TReturn, Func<T, TReturn>)
  nameWithType.vb: M.SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), TReturn, Func(Of T, TReturn))
- uid: Monadic.M.Switch``1(Monadic.Maybe{``0},System.Action,System.Action{``0})
  name: Switch<T>(Maybe<T>, Action, Action<T>)
  href: api/Monadic.M.Switch.html#Monadic_M_Switch__1_Monadic_Maybe___0__System_Action_System_Action___0__
  commentId: M:Monadic.M.Switch``1(Monadic.Maybe{``0},System.Action,System.Action{``0})
  name.vb: Switch(Of T)(Maybe(Of T), Action, Action(Of T))
  fullName: Monadic.M.Switch<T>(Monadic.Maybe<T>, System.Action, System.Action<T>)
  fullName.vb: Monadic.M.Switch(Of T)(Monadic.Maybe(Of T), System.Action, System.Action(Of T))
  nameWithType: M.Switch<T>(Maybe<T>, Action, Action<T>)
  nameWithType.vb: M.Switch(Of T)(Maybe(Of T), Action, Action(Of T))
- uid: Monadic.M.Switch``2(Monadic.Maybe{``0},System.Func{``1},System.Func{``0,``1})
  name: Switch<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, TReturn>)
  href: api/Monadic.M.Switch.html#Monadic_M_Switch__2_Monadic_Maybe___0__System_Func___1__System_Func___0___1__
  commentId: M:Monadic.M.Switch``2(Monadic.Maybe{``0},System.Func{``1},System.Func{``0,``1})
  name.vb: Switch(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, TReturn))
  fullName: Monadic.M.Switch<T, TReturn>(Monadic.Maybe<T>, System.Func<TReturn>, System.Func<T, TReturn>)
  fullName.vb: Monadic.M.Switch(Of T, TReturn)(Monadic.Maybe(Of T), System.Func(Of TReturn), System.Func(Of T, TReturn))
  nameWithType: M.Switch<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, TReturn>)
  nameWithType.vb: M.Switch(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, TReturn))
- uid: Monadic.M.Switch``2(Monadic.Maybe{``0},``1,System.Func{``0,``1})
  name: Switch<T, TReturn>(Maybe<T>, TReturn, Func<T, TReturn>)
  href: api/Monadic.M.Switch.html#Monadic_M_Switch__2_Monadic_Maybe___0____1_System_Func___0___1__
  commentId: M:Monadic.M.Switch``2(Monadic.Maybe{``0},``1,System.Func{``0,``1})
  name.vb: Switch(Of T, TReturn)(Maybe(Of T), TReturn, Func(Of T, TReturn))
  fullName: Monadic.M.Switch<T, TReturn>(Monadic.Maybe<T>, TReturn, System.Func<T, TReturn>)
  fullName.vb: Monadic.M.Switch(Of T, TReturn)(Monadic.Maybe(Of T), TReturn, System.Func(Of T, TReturn))
  nameWithType: M.Switch<T, TReturn>(Maybe<T>, TReturn, Func<T, TReturn>)
  nameWithType.vb: M.Switch(Of T, TReturn)(Maybe(Of T), TReturn, Func(Of T, TReturn))
- uid: Monadic.M.Wrap*
  name: Wrap
  href: api/Monadic.M.Wrap.html
  commentId: Overload:Monadic.M.Wrap
  fullName: Monadic.M.Wrap
  nameWithType: M.Wrap
- uid: Monadic.M.Wrap``1(``0)
  name: Wrap<T>(T)
  href: api/Monadic.M.Wrap.html#Monadic_M_Wrap__1___0_
  commentId: M:Monadic.M.Wrap``1(``0)
  name.vb: Wrap(Of T)(T)
  fullName: Monadic.M.Wrap<T>(T)
  fullName.vb: Monadic.M.Wrap(Of T)(T)
  nameWithType: M.Wrap<T>(T)
  nameWithType.vb: M.Wrap(Of T)(T)
- uid: Monadic.MaybeExtensions
  name: MaybeExtensions
  href: api/Monadic.MaybeExtensions.html
  commentId: T:Monadic.MaybeExtensions
  fullName: Monadic.MaybeExtensions
  nameWithType: MaybeExtensions
- uid: Monadic.MaybeExtensions.Audit*
  name: Audit
  href: api/Monadic.MaybeExtensions.Audit.html
  commentId: Overload:Monadic.MaybeExtensions.Audit
  fullName: Monadic.MaybeExtensions.Audit
  nameWithType: MaybeExtensions.Audit
- uid: Monadic.MaybeExtensions.AuditAsync*
  name: AuditAsync
  href: api/Monadic.MaybeExtensions.AuditAsync.html
  commentId: Overload:Monadic.MaybeExtensions.AuditAsync
  fullName: Monadic.MaybeExtensions.AuditAsync
  nameWithType: MaybeExtensions.AuditAsync
- uid: Monadic.MaybeExtensions.AuditAsync``1(Monadic.Maybe{``0},System.Func{Monadic.Maybe{``0},System.Threading.Tasks.Task})
  name: AuditAsync<T>(Maybe<T>, Func<Maybe<T>, Task>)
  href: api/Monadic.MaybeExtensions.AuditAsync.html#Monadic_MaybeExtensions_AuditAsync__1_Monadic_Maybe___0__System_Func_Monadic_Maybe___0__System_Threading_Tasks_Task__
  commentId: M:Monadic.MaybeExtensions.AuditAsync``1(Monadic.Maybe{``0},System.Func{Monadic.Maybe{``0},System.Threading.Tasks.Task})
  name.vb: AuditAsync(Of T)(Maybe(Of T), Func(Of Maybe(Of T), Task))
  fullName: Monadic.MaybeExtensions.AuditAsync<T>(Monadic.Maybe<T>, System.Func<Monadic.Maybe<T>, System.Threading.Tasks.Task>)
  fullName.vb: Monadic.MaybeExtensions.AuditAsync(Of T)(Monadic.Maybe(Of T), System.Func(Of Monadic.Maybe(Of T), System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.AuditAsync<T>(Maybe<T>, Func<Maybe<T>, Task>)
  nameWithType.vb: MaybeExtensions.AuditAsync(Of T)(Maybe(Of T), Func(Of Maybe(Of T), Task))
- uid: Monadic.MaybeExtensions.AuditAsync``1(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: AuditAsync<T>(Maybe<T>, Func<Task>?, Func<T, Task>?)
  href: api/Monadic.MaybeExtensions.AuditAsync.html#Monadic_MaybeExtensions_AuditAsync__1_Monadic_Maybe___0__System_Func_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Monadic.MaybeExtensions.AuditAsync``1(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: AuditAsync(Of T)(Maybe(Of T), Func(Of Task), Func(Of T, Task))
  fullName: Monadic.MaybeExtensions.AuditAsync<T>(Monadic.Maybe<T>, System.Func<System.Threading.Tasks.Task>?, System.Func<T, System.Threading.Tasks.Task>?)
  fullName.vb: Monadic.MaybeExtensions.AuditAsync(Of T)(Monadic.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.AuditAsync<T>(Maybe<T>, Func<Task>?, Func<T, Task>?)
  nameWithType.vb: MaybeExtensions.AuditAsync(Of T)(Maybe(Of T), Func(Of Task), Func(Of T, Task))
- uid: Monadic.MaybeExtensions.AuditAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Action,System.Action{``0})
  name: AuditAsync<T>(Task<Maybe<T>>, Action?, Action<T>?)
  href: api/Monadic.MaybeExtensions.AuditAsync.html#Monadic_MaybeExtensions_AuditAsync__1_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Action_System_Action___0__
  commentId: M:Monadic.MaybeExtensions.AuditAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Action,System.Action{``0})
  name.vb: AuditAsync(Of T)(Task(Of Maybe(Of T)), Action, Action(Of T))
  fullName: Monadic.MaybeExtensions.AuditAsync<T>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Action?, System.Action<T>?)
  fullName.vb: Monadic.MaybeExtensions.AuditAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Action, System.Action(Of T))
  nameWithType: MaybeExtensions.AuditAsync<T>(Task<Maybe<T>>, Action?, Action<T>?)
  nameWithType.vb: MaybeExtensions.AuditAsync(Of T)(Task(Of Maybe(Of T)), Action, Action(Of T))
- uid: Monadic.MaybeExtensions.AuditAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Action{Monadic.Maybe{``0}})
  name: AuditAsync<T>(Task<Maybe<T>>, Action<Maybe<T>>)
  href: api/Monadic.MaybeExtensions.AuditAsync.html#Monadic_MaybeExtensions_AuditAsync__1_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Action_Monadic_Maybe___0___
  commentId: M:Monadic.MaybeExtensions.AuditAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Action{Monadic.Maybe{``0}})
  name.vb: AuditAsync(Of T)(Task(Of Maybe(Of T)), Action(Of Maybe(Of T)))
  fullName: Monadic.MaybeExtensions.AuditAsync<T>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Action<Monadic.Maybe<T>>)
  fullName.vb: Monadic.MaybeExtensions.AuditAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Action(Of Monadic.Maybe(Of T)))
  nameWithType: MaybeExtensions.AuditAsync<T>(Task<Maybe<T>>, Action<Maybe<T>>)
  nameWithType.vb: MaybeExtensions.AuditAsync(Of T)(Task(Of Maybe(Of T)), Action(Of Maybe(Of T)))
- uid: Monadic.MaybeExtensions.AuditAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{Monadic.Maybe{``0},System.Threading.Tasks.Task})
  name: AuditAsync<T>(Task<Maybe<T>>, Func<Maybe<T>, Task>)
  href: api/Monadic.MaybeExtensions.AuditAsync.html#Monadic_MaybeExtensions_AuditAsync__1_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func_Monadic_Maybe___0__System_Threading_Tasks_Task__
  commentId: M:Monadic.MaybeExtensions.AuditAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{Monadic.Maybe{``0},System.Threading.Tasks.Task})
  name.vb: AuditAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Maybe(Of T), Task))
  fullName: Monadic.MaybeExtensions.AuditAsync<T>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<Monadic.Maybe<T>, System.Threading.Tasks.Task>)
  fullName.vb: Monadic.MaybeExtensions.AuditAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of Monadic.Maybe(Of T), System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.AuditAsync<T>(Task<Maybe<T>>, Func<Maybe<T>, Task>)
  nameWithType.vb: MaybeExtensions.AuditAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Maybe(Of T), Task))
- uid: Monadic.MaybeExtensions.AuditAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: AuditAsync<T>(Task<Maybe<T>>, Func<Task>?, Func<T, Task>?)
  href: api/Monadic.MaybeExtensions.AuditAsync.html#Monadic_MaybeExtensions_AuditAsync__1_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Monadic.MaybeExtensions.AuditAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: AuditAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task), Func(Of T, Task))
  fullName: Monadic.MaybeExtensions.AuditAsync<T>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<System.Threading.Tasks.Task>?, System.Func<T, System.Threading.Tasks.Task>?)
  fullName.vb: Monadic.MaybeExtensions.AuditAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.AuditAsync<T>(Task<Maybe<T>>, Func<Task>?, Func<T, Task>?)
  nameWithType.vb: MaybeExtensions.AuditAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task), Func(Of T, Task))
- uid: Monadic.MaybeExtensions.Audit``1(Monadic.Maybe{``0},System.Action,System.Action{``0})
  name: Audit<T>(Maybe<T>, Action?, Action<T>?)
  href: api/Monadic.MaybeExtensions.Audit.html#Monadic_MaybeExtensions_Audit__1_Monadic_Maybe___0__System_Action_System_Action___0__
  commentId: M:Monadic.MaybeExtensions.Audit``1(Monadic.Maybe{``0},System.Action,System.Action{``0})
  name.vb: Audit(Of T)(Maybe(Of T), Action, Action(Of T))
  fullName: Monadic.MaybeExtensions.Audit<T>(Monadic.Maybe<T>, System.Action?, System.Action<T>?)
  fullName.vb: Monadic.MaybeExtensions.Audit(Of T)(Monadic.Maybe(Of T), System.Action, System.Action(Of T))
  nameWithType: MaybeExtensions.Audit<T>(Maybe<T>, Action?, Action<T>?)
  nameWithType.vb: MaybeExtensions.Audit(Of T)(Maybe(Of T), Action, Action(Of T))
- uid: Monadic.MaybeExtensions.Audit``1(Monadic.Maybe{``0},System.Action{Monadic.Maybe{``0}})
  name: Audit<T>(Maybe<T>, Action<Maybe<T>>)
  href: api/Monadic.MaybeExtensions.Audit.html#Monadic_MaybeExtensions_Audit__1_Monadic_Maybe___0__System_Action_Monadic_Maybe___0___
  commentId: M:Monadic.MaybeExtensions.Audit``1(Monadic.Maybe{``0},System.Action{Monadic.Maybe{``0}})
  name.vb: Audit(Of T)(Maybe(Of T), Action(Of Maybe(Of T)))
  fullName: Monadic.MaybeExtensions.Audit<T>(Monadic.Maybe<T>, System.Action<Monadic.Maybe<T>>)
  fullName.vb: Monadic.MaybeExtensions.Audit(Of T)(Monadic.Maybe(Of T), System.Action(Of Monadic.Maybe(Of T)))
  nameWithType: MaybeExtensions.Audit<T>(Maybe<T>, Action<Maybe<T>>)
  nameWithType.vb: MaybeExtensions.Audit(Of T)(Maybe(Of T), Action(Of Maybe(Of T)))
- uid: Monadic.MaybeExtensions.Bind*
  name: Bind
  href: api/Monadic.MaybeExtensions.Bind.html
  commentId: Overload:Monadic.MaybeExtensions.Bind
  fullName: Monadic.MaybeExtensions.Bind
  nameWithType: MaybeExtensions.Bind
- uid: Monadic.MaybeExtensions.BindAsync*
  name: BindAsync
  href: api/Monadic.MaybeExtensions.BindAsync.html
  commentId: Overload:Monadic.MaybeExtensions.BindAsync
  fullName: Monadic.MaybeExtensions.BindAsync
  nameWithType: MaybeExtensions.BindAsync
- uid: Monadic.MaybeExtensions.BindAsync``2(Monadic.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}})
  name: BindAsync<T, TReturn>(Maybe<T>, Func<T, Task<Maybe<TReturn>>>)
  href: api/Monadic.MaybeExtensions.BindAsync.html#Monadic_MaybeExtensions_BindAsync__2_Monadic_Maybe___0__System_Func___0_System_Threading_Tasks_Task_Monadic_Maybe___1____
  commentId: M:Monadic.MaybeExtensions.BindAsync``2(Monadic.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}})
  name.vb: BindAsync(Of T, TReturn)(Maybe(Of T), Func(Of T, Task(Of Maybe(Of TReturn))))
  fullName: Monadic.MaybeExtensions.BindAsync<T, TReturn>(Monadic.Maybe<T>, System.Func<T, System.Threading.Tasks.Task<Monadic.Maybe<TReturn>>>)
  fullName.vb: Monadic.MaybeExtensions.BindAsync(Of T, TReturn)(Monadic.Maybe(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of Monadic.Maybe(Of TReturn))))
  nameWithType: MaybeExtensions.BindAsync<T, TReturn>(Maybe<T>, Func<T, Task<Maybe<TReturn>>>)
  nameWithType.vb: MaybeExtensions.BindAsync(Of T, TReturn)(Maybe(Of T), Func(Of T, Task(Of Maybe(Of TReturn))))
- uid: Monadic.MaybeExtensions.BindAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,Monadic.Maybe{``1}})
  name: BindAsync<T, TReturn>(Task<Maybe<T>>, Func<T, Maybe<TReturn>>)
  href: api/Monadic.MaybeExtensions.BindAsync.html#Monadic_MaybeExtensions_BindAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___0_Monadic_Maybe___1___
  commentId: M:Monadic.MaybeExtensions.BindAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,Monadic.Maybe{``1}})
  name.vb: BindAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Maybe(Of TReturn)))
  fullName: Monadic.MaybeExtensions.BindAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<T, Monadic.Maybe<TReturn>>)
  fullName.vb: Monadic.MaybeExtensions.BindAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of T, Monadic.Maybe(Of TReturn)))
  nameWithType: MaybeExtensions.BindAsync<T, TReturn>(Task<Maybe<T>>, Func<T, Maybe<TReturn>>)
  nameWithType.vb: MaybeExtensions.BindAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Maybe(Of TReturn)))
- uid: Monadic.MaybeExtensions.BindAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}})
  name: BindAsync<T, TReturn>(Task<Maybe<T>>, Func<T, Task<Maybe<TReturn>>>)
  href: api/Monadic.MaybeExtensions.BindAsync.html#Monadic_MaybeExtensions_BindAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task_Monadic_Maybe___1____
  commentId: M:Monadic.MaybeExtensions.BindAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Monadic.Maybe{``1}}})
  name.vb: BindAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Task(Of Maybe(Of TReturn))))
  fullName: Monadic.MaybeExtensions.BindAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<Monadic.Maybe<TReturn>>>)
  fullName.vb: Monadic.MaybeExtensions.BindAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Monadic.Maybe(Of TReturn))))
  nameWithType: MaybeExtensions.BindAsync<T, TReturn>(Task<Maybe<T>>, Func<T, Task<Maybe<TReturn>>>)
  nameWithType.vb: MaybeExtensions.BindAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Task(Of Maybe(Of TReturn))))
- uid: Monadic.MaybeExtensions.Bind``2(Monadic.Maybe{``0},System.Func{``0,Monadic.Maybe{``1}})
  name: Bind<T, TReturn>(Maybe<T>, Func<T, Maybe<TReturn>>)
  href: api/Monadic.MaybeExtensions.Bind.html#Monadic_MaybeExtensions_Bind__2_Monadic_Maybe___0__System_Func___0_Monadic_Maybe___1___
  commentId: M:Monadic.MaybeExtensions.Bind``2(Monadic.Maybe{``0},System.Func{``0,Monadic.Maybe{``1}})
  name.vb: Bind(Of T, TReturn)(Maybe(Of T), Func(Of T, Maybe(Of TReturn)))
  fullName: Monadic.MaybeExtensions.Bind<T, TReturn>(Monadic.Maybe<T>, System.Func<T, Monadic.Maybe<TReturn>>)
  fullName.vb: Monadic.MaybeExtensions.Bind(Of T, TReturn)(Monadic.Maybe(Of T), System.Func(Of T, Monadic.Maybe(Of TReturn)))
  nameWithType: MaybeExtensions.Bind<T, TReturn>(Maybe<T>, Func<T, Maybe<TReturn>>)
  nameWithType.vb: MaybeExtensions.Bind(Of T, TReturn)(Maybe(Of T), Func(Of T, Maybe(Of TReturn)))
- uid: Monadic.MaybeExtensions.Filter*
  name: Filter
  href: api/Monadic.MaybeExtensions.Filter.html
  commentId: Overload:Monadic.MaybeExtensions.Filter
  fullName: Monadic.MaybeExtensions.Filter
  nameWithType: MaybeExtensions.Filter
- uid: Monadic.MaybeExtensions.FilterAsync*
  name: FilterAsync
  href: api/Monadic.MaybeExtensions.FilterAsync.html
  commentId: Overload:Monadic.MaybeExtensions.FilterAsync
  fullName: Monadic.MaybeExtensions.FilterAsync
  nameWithType: MaybeExtensions.FilterAsync
- uid: Monadic.MaybeExtensions.FilterAsync``1(Monadic.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: FilterAsync<T>(Maybe<T>, Func<T, Task<bool>>)
  href: api/Monadic.MaybeExtensions.FilterAsync.html#Monadic_MaybeExtensions_FilterAsync__1_Monadic_Maybe___0__System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Monadic.MaybeExtensions.FilterAsync``1(Monadic.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: FilterAsync(Of T)(Maybe(Of T), Func(Of T, Task(Of Boolean)))
  fullName: Monadic.MaybeExtensions.FilterAsync<T>(Monadic.Maybe<T>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Monadic.MaybeExtensions.FilterAsync(Of T)(Monadic.Maybe(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: MaybeExtensions.FilterAsync<T>(Maybe<T>, Func<T, Task<bool>>)
  nameWithType.vb: MaybeExtensions.FilterAsync(Of T)(Maybe(Of T), Func(Of T, Task(Of Boolean)))
- uid: Monadic.MaybeExtensions.FilterAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,System.Boolean})
  name: FilterAsync<T>(Task<Maybe<T>>, Func<T, bool>)
  href: api/Monadic.MaybeExtensions.FilterAsync.html#Monadic_MaybeExtensions_FilterAsync__1_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___0_System_Boolean__
  commentId: M:Monadic.MaybeExtensions.FilterAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,System.Boolean})
  name.vb: FilterAsync(Of T)(Task(Of Maybe(Of T)), Func(Of T, Boolean))
  fullName: Monadic.MaybeExtensions.FilterAsync<T>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<T, bool>)
  fullName.vb: Monadic.MaybeExtensions.FilterAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of T, Boolean))
  nameWithType: MaybeExtensions.FilterAsync<T>(Task<Maybe<T>>, Func<T, bool>)
  nameWithType.vb: MaybeExtensions.FilterAsync(Of T)(Task(Of Maybe(Of T)), Func(Of T, Boolean))
- uid: Monadic.MaybeExtensions.FilterAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: FilterAsync<T>(Task<Maybe<T>>, Func<T, Task<bool>>)
  href: api/Monadic.MaybeExtensions.FilterAsync.html#Monadic_MaybeExtensions_FilterAsync__1_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Monadic.MaybeExtensions.FilterAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: FilterAsync(Of T)(Task(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)))
  fullName: Monadic.MaybeExtensions.FilterAsync<T>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Monadic.MaybeExtensions.FilterAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: MaybeExtensions.FilterAsync<T>(Task<Maybe<T>>, Func<T, Task<bool>>)
  nameWithType.vb: MaybeExtensions.FilterAsync(Of T)(Task(Of Maybe(Of T)), Func(Of T, Task(Of Boolean)))
- uid: Monadic.MaybeExtensions.Filter``1(Monadic.Maybe{``0},System.Func{``0,System.Boolean})
  name: Filter<T>(Maybe<T>, Func<T, bool>)
  href: api/Monadic.MaybeExtensions.Filter.html#Monadic_MaybeExtensions_Filter__1_Monadic_Maybe___0__System_Func___0_System_Boolean__
  commentId: M:Monadic.MaybeExtensions.Filter``1(Monadic.Maybe{``0},System.Func{``0,System.Boolean})
  name.vb: Filter(Of T)(Maybe(Of T), Func(Of T, Boolean))
  fullName: Monadic.MaybeExtensions.Filter<T>(Monadic.Maybe<T>, System.Func<T, bool>)
  fullName.vb: Monadic.MaybeExtensions.Filter(Of T)(Monadic.Maybe(Of T), System.Func(Of T, Boolean))
  nameWithType: MaybeExtensions.Filter<T>(Maybe<T>, Func<T, bool>)
  nameWithType.vb: MaybeExtensions.Filter(Of T)(Maybe(Of T), Func(Of T, Boolean))
- uid: Monadic.MaybeExtensions.Map*
  name: Map
  href: api/Monadic.MaybeExtensions.Map.html
  commentId: Overload:Monadic.MaybeExtensions.Map
  fullName: Monadic.MaybeExtensions.Map
  nameWithType: MaybeExtensions.Map
- uid: Monadic.MaybeExtensions.MapAsync*
  name: MapAsync
  href: api/Monadic.MaybeExtensions.MapAsync.html
  commentId: Overload:Monadic.MaybeExtensions.MapAsync
  fullName: Monadic.MaybeExtensions.MapAsync
  nameWithType: MaybeExtensions.MapAsync
- uid: Monadic.MaybeExtensions.MapAsync``2(Monadic.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MapAsync<T, TReturn>(Maybe<T>, Func<T, Task<TReturn>>)
  href: api/Monadic.MaybeExtensions.MapAsync.html#Monadic_MaybeExtensions_MapAsync__2_Monadic_Maybe___0__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.MaybeExtensions.MapAsync``2(Monadic.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MapAsync(Of T, TReturn)(Maybe(Of T), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.MaybeExtensions.MapAsync<T, TReturn>(Monadic.Maybe<T>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.MaybeExtensions.MapAsync(Of T, TReturn)(Monadic.Maybe(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MapAsync<T, TReturn>(Maybe<T>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MapAsync(Of T, TReturn)(Maybe(Of T), Func(Of T, Task(Of TReturn)))
- uid: Monadic.MaybeExtensions.MapAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MapAsync<T, TReturn>(Task<Maybe<T>>, Func<T, Task<TReturn>>)
  href: api/Monadic.MaybeExtensions.MapAsync.html#Monadic_MaybeExtensions_MapAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.MaybeExtensions.MapAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MapAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.MaybeExtensions.MapAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.MaybeExtensions.MapAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.MapAsync<T, TReturn>(Task<Maybe<T>>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.MapAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, Task(Of TReturn)))
- uid: Monadic.MaybeExtensions.MapAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,``1})
  name: MapAsync<T, TReturn>(Task<Maybe<T>>, Func<T, TReturn>)
  href: api/Monadic.MaybeExtensions.MapAsync.html#Monadic_MaybeExtensions_MapAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___0___1__
  commentId: M:Monadic.MaybeExtensions.MapAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0,``1})
  name.vb: MapAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, TReturn))
  fullName: Monadic.MaybeExtensions.MapAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<T, TReturn>)
  fullName.vb: Monadic.MaybeExtensions.MapAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.MapAsync<T, TReturn>(Task<Maybe<T>>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.MapAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of T, TReturn))
- uid: Monadic.MaybeExtensions.Map``2(Monadic.Maybe{``0},System.Func{``0,``1})
  name: Map<T, TReturn>(Maybe<T>, Func<T, TReturn>)
  href: api/Monadic.MaybeExtensions.Map.html#Monadic_MaybeExtensions_Map__2_Monadic_Maybe___0__System_Func___0___1__
  commentId: M:Monadic.MaybeExtensions.Map``2(Monadic.Maybe{``0},System.Func{``0,``1})
  name.vb: Map(Of T, TReturn)(Maybe(Of T), Func(Of T, TReturn))
  fullName: Monadic.MaybeExtensions.Map<T, TReturn>(Monadic.Maybe<T>, System.Func<T, TReturn>)
  fullName.vb: Monadic.MaybeExtensions.Map(Of T, TReturn)(Monadic.Maybe(Of T), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.Map<T, TReturn>(Maybe<T>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.Map(Of T, TReturn)(Maybe(Of T), Func(Of T, TReturn))
- uid: Monadic.MaybeExtensions.Switch*
  name: Switch
  href: api/Monadic.MaybeExtensions.Switch.html
  commentId: Overload:Monadic.MaybeExtensions.Switch
  fullName: Monadic.MaybeExtensions.Switch
  nameWithType: MaybeExtensions.Switch
- uid: Monadic.MaybeExtensions.SwitchAsync*
  name: SwitchAsync
  href: api/Monadic.MaybeExtensions.SwitchAsync.html
  commentId: Overload:Monadic.MaybeExtensions.SwitchAsync
  fullName: Monadic.MaybeExtensions.SwitchAsync
  nameWithType: MaybeExtensions.SwitchAsync
- uid: Monadic.MaybeExtensions.SwitchAsync``1(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: SwitchAsync<T>(Maybe<T>, Func<Task>, Func<T, Task>)
  href: api/Monadic.MaybeExtensions.SwitchAsync.html#Monadic_MaybeExtensions_SwitchAsync__1_Monadic_Maybe___0__System_Func_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Monadic.MaybeExtensions.SwitchAsync``1(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: SwitchAsync(Of T)(Maybe(Of T), Func(Of Task), Func(Of T, Task))
  fullName: Monadic.MaybeExtensions.SwitchAsync<T>(Monadic.Maybe<T>, System.Func<System.Threading.Tasks.Task>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Monadic.MaybeExtensions.SwitchAsync(Of T)(Monadic.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.SwitchAsync<T>(Maybe<T>, Func<Task>, Func<T, Task>)
  nameWithType.vb: MaybeExtensions.SwitchAsync(Of T)(Maybe(Of T), Func(Of Task), Func(Of T, Task))
- uid: Monadic.MaybeExtensions.SwitchAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: SwitchAsync<T>(Task<Maybe<T>>, Func<Task>, Func<T, Task>)
  href: api/Monadic.MaybeExtensions.SwitchAsync.html#Monadic_MaybeExtensions_SwitchAsync__1_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Monadic.MaybeExtensions.SwitchAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: SwitchAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task), Func(Of T, Task))
  fullName: Monadic.MaybeExtensions.SwitchAsync<T>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<System.Threading.Tasks.Task>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Monadic.MaybeExtensions.SwitchAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: MaybeExtensions.SwitchAsync<T>(Task<Maybe<T>>, Func<Task>, Func<T, Task>)
  nameWithType.vb: MaybeExtensions.SwitchAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task), Func(Of T, Task))
- uid: Monadic.MaybeExtensions.SwitchAsync``2(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: SwitchAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Monadic.MaybeExtensions.SwitchAsync.html#Monadic_MaybeExtensions_SwitchAsync__2_Monadic_Maybe___0__System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.MaybeExtensions.SwitchAsync``2(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: SwitchAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.MaybeExtensions.SwitchAsync<T, TReturn>(Monadic.Maybe<T>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.MaybeExtensions.SwitchAsync(Of T, TReturn)(Monadic.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.SwitchAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.SwitchAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Monadic.MaybeExtensions.SwitchAsync``2(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: SwitchAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, TReturn>)
  href: api/Monadic.MaybeExtensions.SwitchAsync.html#Monadic_MaybeExtensions_SwitchAsync__2_Monadic_Maybe___0__System_Func_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Monadic.MaybeExtensions.SwitchAsync``2(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: SwitchAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Monadic.MaybeExtensions.SwitchAsync<T, TReturn>(Monadic.Maybe<T>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Monadic.MaybeExtensions.SwitchAsync(Of T, TReturn)(Monadic.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.SwitchAsync<T, TReturn>(Maybe<T>, Func<Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.SwitchAsync(Of T, TReturn)(Maybe(Of T), Func(Of Task(Of TReturn)), Func(Of T, TReturn))
- uid: Monadic.MaybeExtensions.SwitchAsync``2(Monadic.Maybe{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: SwitchAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, Task<TReturn>>)
  href: api/Monadic.MaybeExtensions.SwitchAsync.html#Monadic_MaybeExtensions_SwitchAsync__2_Monadic_Maybe___0__System_Func___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.MaybeExtensions.SwitchAsync``2(Monadic.Maybe{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: SwitchAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.MaybeExtensions.SwitchAsync<T, TReturn>(Monadic.Maybe<T>, System.Func<TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.MaybeExtensions.SwitchAsync(Of T, TReturn)(Monadic.Maybe(Of T), System.Func(Of TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.SwitchAsync<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.SwitchAsync(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, Task(Of TReturn)))
- uid: Monadic.MaybeExtensions.SwitchAsync``2(Monadic.Maybe{``0},``1,System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: SwitchAsync<T, TReturn>(Maybe<T>, TReturn, Func<T, Task<TReturn>>)
  href: api/Monadic.MaybeExtensions.SwitchAsync.html#Monadic_MaybeExtensions_SwitchAsync__2_Monadic_Maybe___0____1_System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.MaybeExtensions.SwitchAsync``2(Monadic.Maybe{``0},``1,System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: SwitchAsync(Of T, TReturn)(Maybe(Of T), TReturn, Func(Of T, Task(Of TReturn)))
  fullName: Monadic.MaybeExtensions.SwitchAsync<T, TReturn>(Monadic.Maybe<T>, TReturn, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.MaybeExtensions.SwitchAsync(Of T, TReturn)(Monadic.Maybe(Of T), TReturn, System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.SwitchAsync<T, TReturn>(Maybe<T>, TReturn, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.SwitchAsync(Of T, TReturn)(Maybe(Of T), TReturn, Func(Of T, Task(Of TReturn)))
- uid: Monadic.MaybeExtensions.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: SwitchAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Monadic.MaybeExtensions.SwitchAsync.html#Monadic_MaybeExtensions_SwitchAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.MaybeExtensions.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.MaybeExtensions.SwitchAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.MaybeExtensions.SwitchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.SwitchAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Monadic.MaybeExtensions.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: SwitchAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, TReturn>)
  href: api/Monadic.MaybeExtensions.SwitchAsync.html#Monadic_MaybeExtensions_SwitchAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Monadic.MaybeExtensions.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Monadic.MaybeExtensions.SwitchAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Monadic.MaybeExtensions.SwitchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.SwitchAsync<T, TReturn>(Task<Maybe<T>>, Func<Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of Task(Of TReturn)), Func(Of T, TReturn))
- uid: Monadic.MaybeExtensions.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: SwitchAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, Task<TReturn>>)
  href: api/Monadic.MaybeExtensions.SwitchAsync.html#Monadic_MaybeExtensions_SwitchAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.MaybeExtensions.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.MaybeExtensions.SwitchAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.MaybeExtensions.SwitchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.SwitchAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, Task(Of TReturn)))
- uid: Monadic.MaybeExtensions.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``1},System.Func{``0,``1})
  name: SwitchAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, TReturn>)
  href: api/Monadic.MaybeExtensions.SwitchAsync.html#Monadic_MaybeExtensions_SwitchAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___1__System_Func___0___1__
  commentId: M:Monadic.MaybeExtensions.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``1},System.Func{``0,``1})
  name.vb: SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, TReturn))
  fullName: Monadic.MaybeExtensions.SwitchAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<TReturn>, System.Func<T, TReturn>)
  fullName.vb: Monadic.MaybeExtensions.SwitchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of TReturn), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.SwitchAsync<T, TReturn>(Task<Maybe<T>>, Func<TReturn>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), Func(Of TReturn), Func(Of T, TReturn))
- uid: Monadic.MaybeExtensions.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},``1,System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: SwitchAsync<T, TReturn>(Task<Maybe<T>>, TReturn, Func<T, Task<TReturn>>)
  href: api/Monadic.MaybeExtensions.SwitchAsync.html#Monadic_MaybeExtensions_SwitchAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0_____1_System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.MaybeExtensions.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},``1,System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), TReturn, Func(Of T, Task(Of TReturn)))
  fullName: Monadic.MaybeExtensions.SwitchAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, TReturn, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.MaybeExtensions.SwitchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), TReturn, System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: MaybeExtensions.SwitchAsync<T, TReturn>(Task<Maybe<T>>, TReturn, Func<T, Task<TReturn>>)
  nameWithType.vb: MaybeExtensions.SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), TReturn, Func(Of T, Task(Of TReturn)))
- uid: Monadic.MaybeExtensions.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},``1,System.Func{``0,``1})
  name: SwitchAsync<T, TReturn>(Task<Maybe<T>>, TReturn, Func<T, TReturn>)
  href: api/Monadic.MaybeExtensions.SwitchAsync.html#Monadic_MaybeExtensions_SwitchAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0_____1_System_Func___0___1__
  commentId: M:Monadic.MaybeExtensions.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},``1,System.Func{``0,``1})
  name.vb: SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), TReturn, Func(Of T, TReturn))
  fullName: Monadic.MaybeExtensions.SwitchAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, TReturn, System.Func<T, TReturn>)
  fullName.vb: Monadic.MaybeExtensions.SwitchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), TReturn, System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.SwitchAsync<T, TReturn>(Task<Maybe<T>>, TReturn, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.SwitchAsync(Of T, TReturn)(Task(Of Maybe(Of T)), TReturn, Func(Of T, TReturn))
- uid: Monadic.MaybeExtensions.Switch``1(Monadic.Maybe{``0},System.Action,System.Action{``0})
  name: Switch<T>(Maybe<T>, Action, Action<T>)
  href: api/Monadic.MaybeExtensions.Switch.html#Monadic_MaybeExtensions_Switch__1_Monadic_Maybe___0__System_Action_System_Action___0__
  commentId: M:Monadic.MaybeExtensions.Switch``1(Monadic.Maybe{``0},System.Action,System.Action{``0})
  name.vb: Switch(Of T)(Maybe(Of T), Action, Action(Of T))
  fullName: Monadic.MaybeExtensions.Switch<T>(Monadic.Maybe<T>, System.Action, System.Action<T>)
  fullName.vb: Monadic.MaybeExtensions.Switch(Of T)(Monadic.Maybe(Of T), System.Action, System.Action(Of T))
  nameWithType: MaybeExtensions.Switch<T>(Maybe<T>, Action, Action<T>)
  nameWithType.vb: MaybeExtensions.Switch(Of T)(Maybe(Of T), Action, Action(Of T))
- uid: Monadic.MaybeExtensions.Switch``2(Monadic.Maybe{``0},System.Func{``1},System.Func{``0,``1})
  name: Switch<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, TReturn>)
  href: api/Monadic.MaybeExtensions.Switch.html#Monadic_MaybeExtensions_Switch__2_Monadic_Maybe___0__System_Func___1__System_Func___0___1__
  commentId: M:Monadic.MaybeExtensions.Switch``2(Monadic.Maybe{``0},System.Func{``1},System.Func{``0,``1})
  name.vb: Switch(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, TReturn))
  fullName: Monadic.MaybeExtensions.Switch<T, TReturn>(Monadic.Maybe<T>, System.Func<TReturn>, System.Func<T, TReturn>)
  fullName.vb: Monadic.MaybeExtensions.Switch(Of T, TReturn)(Monadic.Maybe(Of T), System.Func(Of TReturn), System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.Switch<T, TReturn>(Maybe<T>, Func<TReturn>, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.Switch(Of T, TReturn)(Maybe(Of T), Func(Of TReturn), Func(Of T, TReturn))
- uid: Monadic.MaybeExtensions.Switch``2(Monadic.Maybe{``0},``1,System.Func{``0,``1})
  name: Switch<T, TReturn>(Maybe<T>, TReturn, Func<T, TReturn>)
  href: api/Monadic.MaybeExtensions.Switch.html#Monadic_MaybeExtensions_Switch__2_Monadic_Maybe___0____1_System_Func___0___1__
  commentId: M:Monadic.MaybeExtensions.Switch``2(Monadic.Maybe{``0},``1,System.Func{``0,``1})
  name.vb: Switch(Of T, TReturn)(Maybe(Of T), TReturn, Func(Of T, TReturn))
  fullName: Monadic.MaybeExtensions.Switch<T, TReturn>(Monadic.Maybe<T>, TReturn, System.Func<T, TReturn>)
  fullName.vb: Monadic.MaybeExtensions.Switch(Of T, TReturn)(Monadic.Maybe(Of T), TReturn, System.Func(Of T, TReturn))
  nameWithType: MaybeExtensions.Switch<T, TReturn>(Maybe<T>, TReturn, Func<T, TReturn>)
  nameWithType.vb: MaybeExtensions.Switch(Of T, TReturn)(Maybe(Of T), TReturn, Func(Of T, TReturn))
- uid: Monadic.MaybeExtensions.Unwrap*
  name: Unwrap
  href: api/Monadic.MaybeExtensions.Unwrap.html
  commentId: Overload:Monadic.MaybeExtensions.Unwrap
  fullName: Monadic.MaybeExtensions.Unwrap
  nameWithType: MaybeExtensions.Unwrap
- uid: Monadic.MaybeExtensions.UnwrapAsync*
  name: UnwrapAsync
  href: api/Monadic.MaybeExtensions.UnwrapAsync.html
  commentId: Overload:Monadic.MaybeExtensions.UnwrapAsync
  fullName: Monadic.MaybeExtensions.UnwrapAsync
  nameWithType: MaybeExtensions.UnwrapAsync
- uid: Monadic.MaybeExtensions.UnwrapAsync``1(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task{``0}})
  name: UnwrapAsync<T>(Maybe<T>, Func<Task<T>>)
  href: api/Monadic.MaybeExtensions.UnwrapAsync.html#Monadic_MaybeExtensions_UnwrapAsync__1_Monadic_Maybe___0__System_Func_System_Threading_Tasks_Task___0___
  commentId: M:Monadic.MaybeExtensions.UnwrapAsync``1(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task{``0}})
  name.vb: UnwrapAsync(Of T)(Maybe(Of T), Func(Of Task(Of T)))
  fullName: Monadic.MaybeExtensions.UnwrapAsync<T>(Monadic.Maybe<T>, System.Func<System.Threading.Tasks.Task<T>>)
  fullName.vb: Monadic.MaybeExtensions.UnwrapAsync(Of T)(Monadic.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of T)))
  nameWithType: MaybeExtensions.UnwrapAsync<T>(Maybe<T>, Func<Task<T>>)
  nameWithType.vb: MaybeExtensions.UnwrapAsync(Of T)(Maybe(Of T), Func(Of Task(Of T)))
- uid: Monadic.MaybeExtensions.UnwrapAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``0}})
  name: UnwrapAsync<T>(Task<Maybe<T>>, Func<Task<T>>)
  href: api/Monadic.MaybeExtensions.UnwrapAsync.html#Monadic_MaybeExtensions_UnwrapAsync__1_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func_System_Threading_Tasks_Task___0___
  commentId: M:Monadic.MaybeExtensions.UnwrapAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``0}})
  name.vb: UnwrapAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task(Of T)))
  fullName: Monadic.MaybeExtensions.UnwrapAsync<T>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<System.Threading.Tasks.Task<T>>)
  fullName.vb: Monadic.MaybeExtensions.UnwrapAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of T)))
  nameWithType: MaybeExtensions.UnwrapAsync<T>(Task<Maybe<T>>, Func<Task<T>>)
  nameWithType.vb: MaybeExtensions.UnwrapAsync(Of T)(Task(Of Maybe(Of T)), Func(Of Task(Of T)))
- uid: Monadic.MaybeExtensions.UnwrapAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0})
  name: UnwrapAsync<T>(Task<Maybe<T>>, Func<T>)
  href: api/Monadic.MaybeExtensions.UnwrapAsync.html#Monadic_MaybeExtensions_UnwrapAsync__1_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___0__
  commentId: M:Monadic.MaybeExtensions.UnwrapAsync``1(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``0})
  name.vb: UnwrapAsync(Of T)(Task(Of Maybe(Of T)), Func(Of T))
  fullName: Monadic.MaybeExtensions.UnwrapAsync<T>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<T>)
  fullName.vb: Monadic.MaybeExtensions.UnwrapAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of T))
  nameWithType: MaybeExtensions.UnwrapAsync<T>(Task<Maybe<T>>, Func<T>)
  nameWithType.vb: MaybeExtensions.UnwrapAsync(Of T)(Task(Of Maybe(Of T)), Func(Of T))
- uid: Monadic.MaybeExtensions.UnwrapSingle*
  name: UnwrapSingle
  href: api/Monadic.MaybeExtensions.UnwrapSingle.html
  commentId: Overload:Monadic.MaybeExtensions.UnwrapSingle
  fullName: Monadic.MaybeExtensions.UnwrapSingle
  nameWithType: MaybeExtensions.UnwrapSingle
- uid: Monadic.MaybeExtensions.UnwrapSingleAsync*
  name: UnwrapSingleAsync
  href: api/Monadic.MaybeExtensions.UnwrapSingleAsync.html
  commentId: Overload:Monadic.MaybeExtensions.UnwrapSingleAsync
  fullName: Monadic.MaybeExtensions.UnwrapSingleAsync
  nameWithType: MaybeExtensions.UnwrapSingleAsync
- uid: Monadic.MaybeExtensions.UnwrapSingleAsync``2(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}})
  name: UnwrapSingleAsync<T, TSingle>(Maybe<T>, Func<Task<TSingle>>)
  href: api/Monadic.MaybeExtensions.UnwrapSingleAsync.html#Monadic_MaybeExtensions_UnwrapSingleAsync__2_Monadic_Maybe___0__System_Func_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.MaybeExtensions.UnwrapSingleAsync``2(Monadic.Maybe{``0},System.Func{System.Threading.Tasks.Task{``1}})
  name.vb: UnwrapSingleAsync(Of T, TSingle)(Maybe(Of T), Func(Of Task(Of TSingle)))
  fullName: Monadic.MaybeExtensions.UnwrapSingleAsync<T, TSingle>(Monadic.Maybe<T>, System.Func<System.Threading.Tasks.Task<TSingle>>)
  fullName.vb: Monadic.MaybeExtensions.UnwrapSingleAsync(Of T, TSingle)(Monadic.Maybe(Of T), System.Func(Of System.Threading.Tasks.Task(Of TSingle)))
  nameWithType: MaybeExtensions.UnwrapSingleAsync<T, TSingle>(Maybe<T>, Func<Task<TSingle>>)
  nameWithType.vb: MaybeExtensions.UnwrapSingleAsync(Of T, TSingle)(Maybe(Of T), Func(Of Task(Of TSingle)))
- uid: Monadic.MaybeExtensions.UnwrapSingleAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}})
  name: UnwrapSingleAsync<T, TSingle>(Task<Maybe<T>>, Func<Task<TSingle>>)
  href: api/Monadic.MaybeExtensions.UnwrapSingleAsync.html#Monadic_MaybeExtensions_UnwrapSingleAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.MaybeExtensions.UnwrapSingleAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``1}})
  name.vb: UnwrapSingleAsync(Of T, TSingle)(Task(Of Maybe(Of T)), Func(Of Task(Of TSingle)))
  fullName: Monadic.MaybeExtensions.UnwrapSingleAsync<T, TSingle>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<System.Threading.Tasks.Task<TSingle>>)
  fullName.vb: Monadic.MaybeExtensions.UnwrapSingleAsync(Of T, TSingle)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of System.Threading.Tasks.Task(Of TSingle)))
  nameWithType: MaybeExtensions.UnwrapSingleAsync<T, TSingle>(Task<Maybe<T>>, Func<Task<TSingle>>)
  nameWithType.vb: MaybeExtensions.UnwrapSingleAsync(Of T, TSingle)(Task(Of Maybe(Of T)), Func(Of Task(Of TSingle)))
- uid: Monadic.MaybeExtensions.UnwrapSingleAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``1})
  name: UnwrapSingleAsync<T, TSingle>(Task<Maybe<T>>, Func<TSingle>)
  href: api/Monadic.MaybeExtensions.UnwrapSingleAsync.html#Monadic_MaybeExtensions_UnwrapSingleAsync__2_System_Threading_Tasks_Task_Monadic_Maybe___0___System_Func___1__
  commentId: M:Monadic.MaybeExtensions.UnwrapSingleAsync``2(System.Threading.Tasks.Task{Monadic.Maybe{``0}},System.Func{``1})
  name.vb: UnwrapSingleAsync(Of T, TSingle)(Task(Of Maybe(Of T)), Func(Of TSingle))
  fullName: Monadic.MaybeExtensions.UnwrapSingleAsync<T, TSingle>(System.Threading.Tasks.Task<Monadic.Maybe<T>>, System.Func<TSingle>)
  fullName.vb: Monadic.MaybeExtensions.UnwrapSingleAsync(Of T, TSingle)(System.Threading.Tasks.Task(Of Monadic.Maybe(Of T)), System.Func(Of TSingle))
  nameWithType: MaybeExtensions.UnwrapSingleAsync<T, TSingle>(Task<Maybe<T>>, Func<TSingle>)
  nameWithType.vb: MaybeExtensions.UnwrapSingleAsync(Of T, TSingle)(Task(Of Maybe(Of T)), Func(Of TSingle))
- uid: Monadic.MaybeExtensions.UnwrapSingle``2(Monadic.Maybe{``0},System.Func{``1})
  name: UnwrapSingle<T, TSingle>(Maybe<T>, Func<TSingle>)
  href: api/Monadic.MaybeExtensions.UnwrapSingle.html#Monadic_MaybeExtensions_UnwrapSingle__2_Monadic_Maybe___0__System_Func___1__
  commentId: M:Monadic.MaybeExtensions.UnwrapSingle``2(Monadic.Maybe{``0},System.Func{``1})
  name.vb: UnwrapSingle(Of T, TSingle)(Maybe(Of T), Func(Of TSingle))
  fullName: Monadic.MaybeExtensions.UnwrapSingle<T, TSingle>(Monadic.Maybe<T>, System.Func<TSingle>)
  fullName.vb: Monadic.MaybeExtensions.UnwrapSingle(Of T, TSingle)(Monadic.Maybe(Of T), System.Func(Of TSingle))
  nameWithType: MaybeExtensions.UnwrapSingle<T, TSingle>(Maybe<T>, Func<TSingle>)
  nameWithType.vb: MaybeExtensions.UnwrapSingle(Of T, TSingle)(Maybe(Of T), Func(Of TSingle))
- uid: Monadic.MaybeExtensions.Unwrap``1(Monadic.Maybe{``0},System.Func{``0})
  name: Unwrap<T>(Maybe<T>, Func<T>)
  href: api/Monadic.MaybeExtensions.Unwrap.html#Monadic_MaybeExtensions_Unwrap__1_Monadic_Maybe___0__System_Func___0__
  commentId: M:Monadic.MaybeExtensions.Unwrap``1(Monadic.Maybe{``0},System.Func{``0})
  name.vb: Unwrap(Of T)(Maybe(Of T), Func(Of T))
  fullName: Monadic.MaybeExtensions.Unwrap<T>(Monadic.Maybe<T>, System.Func<T>)
  fullName.vb: Monadic.MaybeExtensions.Unwrap(Of T)(Monadic.Maybe(Of T), System.Func(Of T))
  nameWithType: MaybeExtensions.Unwrap<T>(Maybe<T>, Func<T>)
  nameWithType.vb: MaybeExtensions.Unwrap(Of T)(Maybe(Of T), Func(Of T))
- uid: Monadic.Maybe`1
  name: Maybe<T>
  href: api/Monadic.Maybe-1.html
  commentId: T:Monadic.Maybe`1
  name.vb: Maybe(Of T)
  fullName: Monadic.Maybe<T>
  fullName.vb: Monadic.Maybe(Of T)
  nameWithType: Maybe<T>
  nameWithType.vb: Maybe(Of T)
- uid: Monadic.Maybe`1.#ctor
  name: Maybe()
  href: api/Monadic.Maybe-1.-ctor.html#Monadic_Maybe_1__ctor
  commentId: M:Monadic.Maybe`1.#ctor
  name.vb: New()
  fullName: Monadic.Maybe<T>.Maybe()
  fullName.vb: Monadic.Maybe(Of T).New()
  nameWithType: Maybe<T>.Maybe()
  nameWithType.vb: Maybe(Of T).New()
- uid: Monadic.Maybe`1.#ctor(Monadic.Maybe{`0})
  name: Maybe(Maybe<T>)
  href: api/Monadic.Maybe-1.-ctor.html#Monadic_Maybe_1__ctor_Monadic_Maybe__0__
  commentId: M:Monadic.Maybe`1.#ctor(Monadic.Maybe{`0})
  name.vb: New(Maybe(Of T))
  fullName: Monadic.Maybe<T>.Maybe(Monadic.Maybe<T>)
  fullName.vb: Monadic.Maybe(Of T).New(Monadic.Maybe(Of T))
  nameWithType: Maybe<T>.Maybe(Maybe<T>)
  nameWithType.vb: Maybe(Of T).New(Maybe(Of T))
- uid: Monadic.Maybe`1.#ctor*
  name: Maybe
  href: api/Monadic.Maybe-1.-ctor.html
  commentId: Overload:Monadic.Maybe`1.#ctor
  name.vb: New
  fullName: Monadic.Maybe<T>.Maybe
  fullName.vb: Monadic.Maybe(Of T).New
  nameWithType: Maybe<T>.Maybe
  nameWithType.vb: Maybe(Of T).New
- uid: Monadic.Maybe`1.AsTask
  name: AsTask()
  href: api/Monadic.Maybe-1.AsTask.html#Monadic_Maybe_1_AsTask
  commentId: M:Monadic.Maybe`1.AsTask
  fullName: Monadic.Maybe<T>.AsTask()
  fullName.vb: Monadic.Maybe(Of T).AsTask()
  nameWithType: Maybe<T>.AsTask()
  nameWithType.vb: Maybe(Of T).AsTask()
- uid: Monadic.Maybe`1.AsTask*
  name: AsTask
  href: api/Monadic.Maybe-1.AsTask.html
  commentId: Overload:Monadic.Maybe`1.AsTask
  fullName: Monadic.Maybe<T>.AsTask
  fullName.vb: Monadic.Maybe(Of T).AsTask
  nameWithType: Maybe<T>.AsTask
  nameWithType.vb: Maybe(Of T).AsTask
- uid: Monadic.Maybe`1.EqualityContract
  name: EqualityContract
  href: api/Monadic.Maybe-1.EqualityContract.html#Monadic_Maybe_1_EqualityContract
  commentId: P:Monadic.Maybe`1.EqualityContract
  fullName: Monadic.Maybe<T>.EqualityContract
  fullName.vb: Monadic.Maybe(Of T).EqualityContract
  nameWithType: Maybe<T>.EqualityContract
  nameWithType.vb: Maybe(Of T).EqualityContract
- uid: Monadic.Maybe`1.EqualityContract*
  name: EqualityContract
  href: api/Monadic.Maybe-1.EqualityContract.html
  commentId: Overload:Monadic.Maybe`1.EqualityContract
  fullName: Monadic.Maybe<T>.EqualityContract
  fullName.vb: Monadic.Maybe(Of T).EqualityContract
  nameWithType: Maybe<T>.EqualityContract
  nameWithType.vb: Maybe(Of T).EqualityContract
- uid: Monadic.Maybe`1.Equals(Monadic.Maybe{`0})
  name: Equals(Maybe<T>?)
  href: api/Monadic.Maybe-1.Equals.html#Monadic_Maybe_1_Equals_Monadic_Maybe__0__
  commentId: M:Monadic.Maybe`1.Equals(Monadic.Maybe{`0})
  name.vb: Equals(Maybe(Of T))
  fullName: Monadic.Maybe<T>.Equals(Monadic.Maybe<T>?)
  fullName.vb: Monadic.Maybe(Of T).Equals(Monadic.Maybe(Of T))
  nameWithType: Maybe<T>.Equals(Maybe<T>?)
  nameWithType.vb: Maybe(Of T).Equals(Maybe(Of T))
- uid: Monadic.Maybe`1.Equals(System.Object)
  name: Equals(object?)
  href: api/Monadic.Maybe-1.Equals.html#Monadic_Maybe_1_Equals_System_Object_
  commentId: M:Monadic.Maybe`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Monadic.Maybe<T>.Equals(object?)
  fullName.vb: Monadic.Maybe(Of T).Equals(Object)
  nameWithType: Maybe<T>.Equals(object?)
  nameWithType.vb: Maybe(Of T).Equals(Object)
- uid: Monadic.Maybe`1.Equals*
  name: Equals
  href: api/Monadic.Maybe-1.Equals.html
  commentId: Overload:Monadic.Maybe`1.Equals
  fullName: Monadic.Maybe<T>.Equals
  fullName.vb: Monadic.Maybe(Of T).Equals
  nameWithType: Maybe<T>.Equals
  nameWithType.vb: Maybe(Of T).Equals
- uid: Monadic.Maybe`1.GetEnumerator
  name: GetEnumerator()
  href: api/Monadic.Maybe-1.GetEnumerator.html#Monadic_Maybe_1_GetEnumerator
  commentId: M:Monadic.Maybe`1.GetEnumerator
  fullName: Monadic.Maybe<T>.GetEnumerator()
  fullName.vb: Monadic.Maybe(Of T).GetEnumerator()
  nameWithType: Maybe<T>.GetEnumerator()
  nameWithType.vb: Maybe(Of T).GetEnumerator()
- uid: Monadic.Maybe`1.GetEnumerator*
  name: GetEnumerator
  href: api/Monadic.Maybe-1.GetEnumerator.html
  commentId: Overload:Monadic.Maybe`1.GetEnumerator
  fullName: Monadic.Maybe<T>.GetEnumerator
  fullName.vb: Monadic.Maybe(Of T).GetEnumerator
  nameWithType: Maybe<T>.GetEnumerator
  nameWithType.vb: Maybe(Of T).GetEnumerator
- uid: Monadic.Maybe`1.GetHashCode
  name: GetHashCode()
  href: api/Monadic.Maybe-1.GetHashCode.html#Monadic_Maybe_1_GetHashCode
  commentId: M:Monadic.Maybe`1.GetHashCode
  fullName: Monadic.Maybe<T>.GetHashCode()
  fullName.vb: Monadic.Maybe(Of T).GetHashCode()
  nameWithType: Maybe<T>.GetHashCode()
  nameWithType.vb: Maybe(Of T).GetHashCode()
- uid: Monadic.Maybe`1.GetHashCode*
  name: GetHashCode
  href: api/Monadic.Maybe-1.GetHashCode.html
  commentId: Overload:Monadic.Maybe`1.GetHashCode
  fullName: Monadic.Maybe<T>.GetHashCode
  fullName.vb: Monadic.Maybe(Of T).GetHashCode
  nameWithType: Maybe<T>.GetHashCode
  nameWithType.vb: Maybe(Of T).GetHashCode
- uid: Monadic.Maybe`1.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Monadic.Maybe-1.PrintMembers.html#Monadic_Maybe_1_PrintMembers_System_Text_StringBuilder_
  commentId: M:Monadic.Maybe`1.PrintMembers(System.Text.StringBuilder)
  fullName: Monadic.Maybe<T>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Monadic.Maybe(Of T).PrintMembers(System.Text.StringBuilder)
  nameWithType: Maybe<T>.PrintMembers(StringBuilder)
  nameWithType.vb: Maybe(Of T).PrintMembers(StringBuilder)
- uid: Monadic.Maybe`1.PrintMembers*
  name: PrintMembers
  href: api/Monadic.Maybe-1.PrintMembers.html
  commentId: Overload:Monadic.Maybe`1.PrintMembers
  fullName: Monadic.Maybe<T>.PrintMembers
  fullName.vb: Monadic.Maybe(Of T).PrintMembers
  nameWithType: Maybe<T>.PrintMembers
  nameWithType.vb: Maybe(Of T).PrintMembers
- uid: Monadic.Maybe`1.ToString
  name: ToString()
  href: api/Monadic.Maybe-1.ToString.html#Monadic_Maybe_1_ToString
  commentId: M:Monadic.Maybe`1.ToString
  fullName: Monadic.Maybe<T>.ToString()
  fullName.vb: Monadic.Maybe(Of T).ToString()
  nameWithType: Maybe<T>.ToString()
  nameWithType.vb: Maybe(Of T).ToString()
- uid: Monadic.Maybe`1.ToString*
  name: ToString
  href: api/Monadic.Maybe-1.ToString.html
  commentId: Overload:Monadic.Maybe`1.ToString
  fullName: Monadic.Maybe<T>.ToString
  fullName.vb: Monadic.Maybe(Of T).ToString
  nameWithType: Maybe<T>.ToString
  nameWithType.vb: Maybe(Of T).ToString
- uid: Monadic.Maybe`1.op_Equality(Monadic.Maybe{`0},Monadic.Maybe{`0})
  name: operator ==(Maybe<T>?, Maybe<T>?)
  href: api/Monadic.Maybe-1.op_Equality.html#Monadic_Maybe_1_op_Equality_Monadic_Maybe__0__Monadic_Maybe__0__
  commentId: M:Monadic.Maybe`1.op_Equality(Monadic.Maybe{`0},Monadic.Maybe{`0})
  name.vb: =(Maybe(Of T), Maybe(Of T))
  fullName: Monadic.Maybe<T>.operator ==(Monadic.Maybe<T>?, Monadic.Maybe<T>?)
  fullName.vb: Monadic.Maybe(Of T).=(Monadic.Maybe(Of T), Monadic.Maybe(Of T))
  nameWithType: Maybe<T>.operator ==(Maybe<T>?, Maybe<T>?)
  nameWithType.vb: Maybe(Of T).=(Maybe(Of T), Maybe(Of T))
- uid: Monadic.Maybe`1.op_Equality*
  name: operator ==
  href: api/Monadic.Maybe-1.op_Equality.html
  commentId: Overload:Monadic.Maybe`1.op_Equality
  name.vb: =
  fullName: Monadic.Maybe<T>.operator ==
  fullName.vb: Monadic.Maybe(Of T).=
  nameWithType: Maybe<T>.operator ==
  nameWithType.vb: Maybe(Of T).=
- uid: Monadic.Maybe`1.op_Implicit(Monadic.None)~Monadic.Maybe{`0}
  name: implicit operator Maybe<T>(None)
  href: api/Monadic.Maybe-1.op_Implicit.html#Monadic_Maybe_1_op_Implicit_Monadic_None__Monadic_Maybe__0_
  commentId: M:Monadic.Maybe`1.op_Implicit(Monadic.None)~Monadic.Maybe{`0}
  name.vb: CType(None)
  fullName: Monadic.Maybe<T>.implicit operator Monadic.Maybe<T>(Monadic.None)
  fullName.vb: Monadic.Maybe(Of T).CType(Monadic.None)
  nameWithType: Maybe<T>.implicit operator Maybe<T>(None)
  nameWithType.vb: Maybe(Of T).CType(None)
- uid: Monadic.Maybe`1.op_Implicit(`0)~Monadic.Maybe{`0}
  name: implicit operator Maybe<T>(T)
  href: api/Monadic.Maybe-1.op_Implicit.html#Monadic_Maybe_1_op_Implicit__0__Monadic_Maybe__0_
  commentId: M:Monadic.Maybe`1.op_Implicit(`0)~Monadic.Maybe{`0}
  name.vb: CType(T)
  fullName: Monadic.Maybe<T>.implicit operator Monadic.Maybe<T>(T)
  fullName.vb: Monadic.Maybe(Of T).CType(T)
  nameWithType: Maybe<T>.implicit operator Maybe<T>(T)
  nameWithType.vb: Maybe(Of T).CType(T)
- uid: Monadic.Maybe`1.op_Implicit*
  name: implicit operator
  href: api/Monadic.Maybe-1.op_Implicit.html
  commentId: Overload:Monadic.Maybe`1.op_Implicit
  name.vb: CType
  fullName: Monadic.Maybe<T>.implicit operator
  fullName.vb: Monadic.Maybe(Of T).CType
  nameWithType: Maybe<T>.implicit operator
  nameWithType.vb: Maybe(Of T).CType
- uid: Monadic.Maybe`1.op_Inequality(Monadic.Maybe{`0},Monadic.Maybe{`0})
  name: operator !=(Maybe<T>?, Maybe<T>?)
  href: api/Monadic.Maybe-1.op_Inequality.html#Monadic_Maybe_1_op_Inequality_Monadic_Maybe__0__Monadic_Maybe__0__
  commentId: M:Monadic.Maybe`1.op_Inequality(Monadic.Maybe{`0},Monadic.Maybe{`0})
  name.vb: <>(Maybe(Of T), Maybe(Of T))
  fullName: Monadic.Maybe<T>.operator !=(Monadic.Maybe<T>?, Monadic.Maybe<T>?)
  fullName.vb: Monadic.Maybe(Of T).<>(Monadic.Maybe(Of T), Monadic.Maybe(Of T))
  nameWithType: Maybe<T>.operator !=(Maybe<T>?, Maybe<T>?)
  nameWithType.vb: Maybe(Of T).<>(Maybe(Of T), Maybe(Of T))
- uid: Monadic.Maybe`1.op_Inequality*
  name: operator !=
  href: api/Monadic.Maybe-1.op_Inequality.html
  commentId: Overload:Monadic.Maybe`1.op_Inequality
  name.vb: <>
  fullName: Monadic.Maybe<T>.operator !=
  fullName.vb: Monadic.Maybe(Of T).<>
  nameWithType: Maybe<T>.operator !=
  nameWithType.vb: Maybe(Of T).<>
- uid: Monadic.Maybe`1.{Clone}$
  name: <Clone>$()
  href: api/Monadic.Maybe-1.-Clone--.html#Monadic_Maybe_1__Clone__
  commentId: M:Monadic.Maybe`1.{Clone}$
  fullName: Monadic.Maybe<T>.<Clone>$()
  fullName.vb: Monadic.Maybe(Of T).<Clone>$()
  nameWithType: Maybe<T>.<Clone>$()
  nameWithType.vb: Maybe(Of T).<Clone>$()
- uid: Monadic.Maybe`1.{Clone}$*
  name: <Clone>$
  href: api/Monadic.Maybe-1.-Clone--.html
  commentId: Overload:Monadic.Maybe`1.{Clone}$
  fullName: Monadic.Maybe<T>.<Clone>$
  fullName.vb: Monadic.Maybe(Of T).<Clone>$
  nameWithType: Maybe<T>.<Clone>$
  nameWithType.vb: Maybe(Of T).<Clone>$
- uid: Monadic.None
  name: None
  href: api/Monadic.None.html
  commentId: T:Monadic.None
  fullName: Monadic.None
  nameWithType: None
- uid: Monadic.Ok`1
  name: Ok<T>
  href: api/Monadic.Ok-1.html
  commentId: T:Monadic.Ok`1
  name.vb: Ok(Of T)
  fullName: Monadic.Ok<T>
  fullName.vb: Monadic.Ok(Of T)
  nameWithType: Ok<T>
  nameWithType.vb: Ok(Of T)
- uid: Monadic.Ok`1.EqualityContract
  name: EqualityContract
  href: api/Monadic.Ok-1.EqualityContract.html#Monadic_Ok_1_EqualityContract
  commentId: P:Monadic.Ok`1.EqualityContract
  fullName: Monadic.Ok<T>.EqualityContract
  fullName.vb: Monadic.Ok(Of T).EqualityContract
  nameWithType: Ok<T>.EqualityContract
  nameWithType.vb: Ok(Of T).EqualityContract
- uid: Monadic.Ok`1.EqualityContract*
  name: EqualityContract
  href: api/Monadic.Ok-1.EqualityContract.html
  commentId: Overload:Monadic.Ok`1.EqualityContract
  fullName: Monadic.Ok<T>.EqualityContract
  fullName.vb: Monadic.Ok(Of T).EqualityContract
  nameWithType: Ok<T>.EqualityContract
  nameWithType.vb: Ok(Of T).EqualityContract
- uid: Monadic.Ok`1.Equals(Monadic.Ok{`0})
  name: Equals(Ok<T>?)
  href: api/Monadic.Ok-1.Equals.html#Monadic_Ok_1_Equals_Monadic_Ok__0__
  commentId: M:Monadic.Ok`1.Equals(Monadic.Ok{`0})
  name.vb: Equals(Ok(Of T))
  fullName: Monadic.Ok<T>.Equals(Monadic.Ok<T>?)
  fullName.vb: Monadic.Ok(Of T).Equals(Monadic.Ok(Of T))
  nameWithType: Ok<T>.Equals(Ok<T>?)
  nameWithType.vb: Ok(Of T).Equals(Ok(Of T))
- uid: Monadic.Ok`1.Equals(Monadic.Result{`0})
  name: Equals(Result<T>?)
  href: api/Monadic.Ok-1.Equals.html#Monadic_Ok_1_Equals_Monadic_Result__0__
  commentId: M:Monadic.Ok`1.Equals(Monadic.Result{`0})
  name.vb: Equals(Result(Of T))
  fullName: Monadic.Ok<T>.Equals(Monadic.Result<T>?)
  fullName.vb: Monadic.Ok(Of T).Equals(Monadic.Result(Of T))
  nameWithType: Ok<T>.Equals(Result<T>?)
  nameWithType.vb: Ok(Of T).Equals(Result(Of T))
- uid: Monadic.Ok`1.Equals(System.Object)
  name: Equals(object?)
  href: api/Monadic.Ok-1.Equals.html#Monadic_Ok_1_Equals_System_Object_
  commentId: M:Monadic.Ok`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Monadic.Ok<T>.Equals(object?)
  fullName.vb: Monadic.Ok(Of T).Equals(Object)
  nameWithType: Ok<T>.Equals(object?)
  nameWithType.vb: Ok(Of T).Equals(Object)
- uid: Monadic.Ok`1.Equals*
  name: Equals
  href: api/Monadic.Ok-1.Equals.html
  commentId: Overload:Monadic.Ok`1.Equals
  fullName: Monadic.Ok<T>.Equals
  fullName.vb: Monadic.Ok(Of T).Equals
  nameWithType: Ok<T>.Equals
  nameWithType.vb: Ok(Of T).Equals
- uid: Monadic.Ok`1.GetHashCode
  name: GetHashCode()
  href: api/Monadic.Ok-1.GetHashCode.html#Monadic_Ok_1_GetHashCode
  commentId: M:Monadic.Ok`1.GetHashCode
  fullName: Monadic.Ok<T>.GetHashCode()
  fullName.vb: Monadic.Ok(Of T).GetHashCode()
  nameWithType: Ok<T>.GetHashCode()
  nameWithType.vb: Ok(Of T).GetHashCode()
- uid: Monadic.Ok`1.GetHashCode*
  name: GetHashCode
  href: api/Monadic.Ok-1.GetHashCode.html
  commentId: Overload:Monadic.Ok`1.GetHashCode
  fullName: Monadic.Ok<T>.GetHashCode
  fullName.vb: Monadic.Ok(Of T).GetHashCode
  nameWithType: Ok<T>.GetHashCode
  nameWithType.vb: Ok(Of T).GetHashCode
- uid: Monadic.Ok`1.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Monadic.Ok-1.PrintMembers.html#Monadic_Ok_1_PrintMembers_System_Text_StringBuilder_
  commentId: M:Monadic.Ok`1.PrintMembers(System.Text.StringBuilder)
  fullName: Monadic.Ok<T>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Monadic.Ok(Of T).PrintMembers(System.Text.StringBuilder)
  nameWithType: Ok<T>.PrintMembers(StringBuilder)
  nameWithType.vb: Ok(Of T).PrintMembers(StringBuilder)
- uid: Monadic.Ok`1.PrintMembers*
  name: PrintMembers
  href: api/Monadic.Ok-1.PrintMembers.html
  commentId: Overload:Monadic.Ok`1.PrintMembers
  fullName: Monadic.Ok<T>.PrintMembers
  fullName.vb: Monadic.Ok(Of T).PrintMembers
  nameWithType: Ok<T>.PrintMembers
  nameWithType.vb: Ok(Of T).PrintMembers
- uid: Monadic.Ok`1.Value
  name: Value
  href: api/Monadic.Ok-1.Value.html#Monadic_Ok_1_Value
  commentId: P:Monadic.Ok`1.Value
  fullName: Monadic.Ok<T>.Value
  fullName.vb: Monadic.Ok(Of T).Value
  nameWithType: Ok<T>.Value
  nameWithType.vb: Ok(Of T).Value
- uid: Monadic.Ok`1.Value*
  name: Value
  href: api/Monadic.Ok-1.Value.html
  commentId: Overload:Monadic.Ok`1.Value
  fullName: Monadic.Ok<T>.Value
  fullName.vb: Monadic.Ok(Of T).Value
  nameWithType: Ok<T>.Value
  nameWithType.vb: Ok(Of T).Value
- uid: Monadic.Ok`1.op_Equality(Monadic.Ok{`0},Monadic.Ok{`0})
  name: operator ==(Ok<T>?, Ok<T>?)
  href: api/Monadic.Ok-1.op_Equality.html#Monadic_Ok_1_op_Equality_Monadic_Ok__0__Monadic_Ok__0__
  commentId: M:Monadic.Ok`1.op_Equality(Monadic.Ok{`0},Monadic.Ok{`0})
  name.vb: =(Ok(Of T), Ok(Of T))
  fullName: Monadic.Ok<T>.operator ==(Monadic.Ok<T>?, Monadic.Ok<T>?)
  fullName.vb: Monadic.Ok(Of T).=(Monadic.Ok(Of T), Monadic.Ok(Of T))
  nameWithType: Ok<T>.operator ==(Ok<T>?, Ok<T>?)
  nameWithType.vb: Ok(Of T).=(Ok(Of T), Ok(Of T))
- uid: Monadic.Ok`1.op_Equality*
  name: operator ==
  href: api/Monadic.Ok-1.op_Equality.html
  commentId: Overload:Monadic.Ok`1.op_Equality
  name.vb: =
  fullName: Monadic.Ok<T>.operator ==
  fullName.vb: Monadic.Ok(Of T).=
  nameWithType: Ok<T>.operator ==
  nameWithType.vb: Ok(Of T).=
- uid: Monadic.Ok`1.op_Inequality(Monadic.Ok{`0},Monadic.Ok{`0})
  name: operator !=(Ok<T>?, Ok<T>?)
  href: api/Monadic.Ok-1.op_Inequality.html#Monadic_Ok_1_op_Inequality_Monadic_Ok__0__Monadic_Ok__0__
  commentId: M:Monadic.Ok`1.op_Inequality(Monadic.Ok{`0},Monadic.Ok{`0})
  name.vb: <>(Ok(Of T), Ok(Of T))
  fullName: Monadic.Ok<T>.operator !=(Monadic.Ok<T>?, Monadic.Ok<T>?)
  fullName.vb: Monadic.Ok(Of T).<>(Monadic.Ok(Of T), Monadic.Ok(Of T))
  nameWithType: Ok<T>.operator !=(Ok<T>?, Ok<T>?)
  nameWithType.vb: Ok(Of T).<>(Ok(Of T), Ok(Of T))
- uid: Monadic.Ok`1.op_Inequality*
  name: operator !=
  href: api/Monadic.Ok-1.op_Inequality.html
  commentId: Overload:Monadic.Ok`1.op_Inequality
  name.vb: <>
  fullName: Monadic.Ok<T>.operator !=
  fullName.vb: Monadic.Ok(Of T).<>
  nameWithType: Ok<T>.operator !=
  nameWithType.vb: Ok(Of T).<>
- uid: Monadic.Ok`1.{Clone}$
  name: <Clone>$()
  href: api/Monadic.Ok-1.-Clone--.html#Monadic_Ok_1__Clone__
  commentId: M:Monadic.Ok`1.{Clone}$
  fullName: Monadic.Ok<T>.<Clone>$()
  fullName.vb: Monadic.Ok(Of T).<Clone>$()
  nameWithType: Ok<T>.<Clone>$()
  nameWithType.vb: Ok(Of T).<Clone>$()
- uid: Monadic.Ok`1.{Clone}$*
  name: <Clone>$
  href: api/Monadic.Ok-1.-Clone--.html
  commentId: Overload:Monadic.Ok`1.{Clone}$
  fullName: Monadic.Ok<T>.<Clone>$
  fullName.vb: Monadic.Ok(Of T).<Clone>$
  nameWithType: Ok<T>.<Clone>$
  nameWithType.vb: Ok(Of T).<Clone>$
- uid: Monadic.R
  name: R
  href: api/Monadic.R.html
  commentId: T:Monadic.R
  fullName: Monadic.R
  nameWithType: R
- uid: Monadic.R.Err(System.Exception)
  name: Err(Exception)
  href: api/Monadic.R.Err.html#Monadic_R_Err_System_Exception_
  commentId: M:Monadic.R.Err(System.Exception)
  fullName: Monadic.R.Err(System.Exception)
  nameWithType: R.Err(Exception)
- uid: Monadic.R.Err(System.String)
  name: Err(string)
  href: api/Monadic.R.Err.html#Monadic_R_Err_System_String_
  commentId: M:Monadic.R.Err(System.String)
  name.vb: Err(String)
  fullName: Monadic.R.Err(string)
  fullName.vb: Monadic.R.Err(String)
  nameWithType: R.Err(string)
  nameWithType.vb: R.Err(String)
- uid: Monadic.R.Err*
  name: Err
  href: api/Monadic.R.Err.html
  commentId: Overload:Monadic.R.Err
  fullName: Monadic.R.Err
  nameWithType: R.Err
- uid: Monadic.R.Err``1
  name: Err<TException>()
  href: api/Monadic.R.Err.html#Monadic_R_Err__1
  commentId: M:Monadic.R.Err``1
  name.vb: Err(Of TException)()
  fullName: Monadic.R.Err<TException>()
  fullName.vb: Monadic.R.Err(Of TException)()
  nameWithType: R.Err<TException>()
  nameWithType.vb: R.Err(Of TException)()
- uid: Monadic.R.Err``1(System.Exception)
  name: Err<T>(Exception)
  href: api/Monadic.R.Err.html#Monadic_R_Err__1_System_Exception_
  commentId: M:Monadic.R.Err``1(System.Exception)
  name.vb: Err(Of T)(Exception)
  fullName: Monadic.R.Err<T>(System.Exception)
  fullName.vb: Monadic.R.Err(Of T)(System.Exception)
  nameWithType: R.Err<T>(Exception)
  nameWithType.vb: R.Err(Of T)(Exception)
- uid: Monadic.R.Err``1(System.String)
  name: Err<T>(string)
  href: api/Monadic.R.Err.html#Monadic_R_Err__1_System_String_
  commentId: M:Monadic.R.Err``1(System.String)
  name.vb: Err(Of T)(String)
  fullName: Monadic.R.Err<T>(string)
  fullName.vb: Monadic.R.Err(Of T)(String)
  nameWithType: R.Err<T>(string)
  nameWithType.vb: R.Err(Of T)(String)
- uid: Monadic.R.Ok*
  name: Ok
  href: api/Monadic.R.Ok.html
  commentId: Overload:Monadic.R.Ok
  fullName: Monadic.R.Ok
  nameWithType: R.Ok
- uid: Monadic.R.Ok``1(``0)
  name: Ok<T>(T)
  href: api/Monadic.R.Ok.html#Monadic_R_Ok__1___0_
  commentId: M:Monadic.R.Ok``1(``0)
  name.vb: Ok(Of T)(T)
  fullName: Monadic.R.Ok<T>(T)
  fullName.vb: Monadic.R.Ok(Of T)(T)
  nameWithType: R.Ok<T>(T)
  nameWithType.vb: R.Ok(Of T)(T)
- uid: Monadic.R.Switch*
  name: Switch
  href: api/Monadic.R.Switch.html
  commentId: Overload:Monadic.R.Switch
  fullName: Monadic.R.Switch
  nameWithType: R.Switch
- uid: Monadic.R.SwitchAsync*
  name: SwitchAsync
  href: api/Monadic.R.SwitchAsync.html
  commentId: Overload:Monadic.R.SwitchAsync
  fullName: Monadic.R.SwitchAsync
  nameWithType: R.SwitchAsync
- uid: Monadic.R.SwitchAsync``1(Monadic.Result{``0},System.Action{System.Exception},System.Func{``0,System.Threading.Tasks.Task})
  name: SwitchAsync<T>(Result<T>, Action<Exception>, Func<T, Task>)
  href: api/Monadic.R.SwitchAsync.html#Monadic_R_SwitchAsync__1_Monadic_Result___0__System_Action_System_Exception__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Monadic.R.SwitchAsync``1(Monadic.Result{``0},System.Action{System.Exception},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: SwitchAsync(Of T)(Result(Of T), Action(Of Exception), Func(Of T, Task))
  fullName: Monadic.R.SwitchAsync<T>(Monadic.Result<T>, System.Action<System.Exception>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Monadic.R.SwitchAsync(Of T)(Monadic.Result(Of T), System.Action(Of System.Exception), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: R.SwitchAsync<T>(Result<T>, Action<Exception>, Func<T, Task>)
  nameWithType.vb: R.SwitchAsync(Of T)(Result(Of T), Action(Of Exception), Func(Of T, Task))
- uid: Monadic.R.SwitchAsync``1(Monadic.Result{``0},System.Func{System.Exception,System.Threading.Tasks.Task},System.Action{``0})
  name: SwitchAsync<T>(Result<T>, Func<Exception, Task>, Action<T>)
  href: api/Monadic.R.SwitchAsync.html#Monadic_R_SwitchAsync__1_Monadic_Result___0__System_Func_System_Exception_System_Threading_Tasks_Task__System_Action___0__
  commentId: M:Monadic.R.SwitchAsync``1(Monadic.Result{``0},System.Func{System.Exception,System.Threading.Tasks.Task},System.Action{``0})
  name.vb: SwitchAsync(Of T)(Result(Of T), Func(Of Exception, Task), Action(Of T))
  fullName: Monadic.R.SwitchAsync<T>(Monadic.Result<T>, System.Func<System.Exception, System.Threading.Tasks.Task>, System.Action<T>)
  fullName.vb: Monadic.R.SwitchAsync(Of T)(Monadic.Result(Of T), System.Func(Of System.Exception, System.Threading.Tasks.Task), System.Action(Of T))
  nameWithType: R.SwitchAsync<T>(Result<T>, Func<Exception, Task>, Action<T>)
  nameWithType.vb: R.SwitchAsync(Of T)(Result(Of T), Func(Of Exception, Task), Action(Of T))
- uid: Monadic.R.SwitchAsync``1(Monadic.Result{``0},System.Func{System.Exception,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: SwitchAsync<T>(Result<T>, Func<Exception, Task>, Func<T, Task>)
  href: api/Monadic.R.SwitchAsync.html#Monadic_R_SwitchAsync__1_Monadic_Result___0__System_Func_System_Exception_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Monadic.R.SwitchAsync``1(Monadic.Result{``0},System.Func{System.Exception,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: SwitchAsync(Of T)(Result(Of T), Func(Of Exception, Task), Func(Of T, Task))
  fullName: Monadic.R.SwitchAsync<T>(Monadic.Result<T>, System.Func<System.Exception, System.Threading.Tasks.Task>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Monadic.R.SwitchAsync(Of T)(Monadic.Result(Of T), System.Func(Of System.Exception, System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: R.SwitchAsync<T>(Result<T>, Func<Exception, Task>, Func<T, Task>)
  nameWithType.vb: R.SwitchAsync(Of T)(Result(Of T), Func(Of Exception, Task), Func(Of T, Task))
- uid: Monadic.R.SwitchAsync``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{System.Exception,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: SwitchAsync<T>(Task<Result<T>>, Func<Exception, Task>, Func<T, Task>)
  href: api/Monadic.R.SwitchAsync.html#Monadic_R_SwitchAsync__1_System_Threading_Tasks_Task_Monadic_Result___0___System_Func_System_Exception_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Monadic.R.SwitchAsync``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{System.Exception,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: SwitchAsync(Of T)(Task(Of Result(Of T)), Func(Of Exception, Task), Func(Of T, Task))
  fullName: Monadic.R.SwitchAsync<T>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<System.Exception, System.Threading.Tasks.Task>, System.Func<T, System.Threading.Tasks.Task>)
  fullName.vb: Monadic.R.SwitchAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of System.Exception, System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: R.SwitchAsync<T>(Task<Result<T>>, Func<Exception, Task>, Func<T, Task>)
  nameWithType.vb: R.SwitchAsync(Of T)(Task(Of Result(Of T)), Func(Of Exception, Task), Func(Of T, Task))
- uid: Monadic.R.SwitchAsync``2(Monadic.Result{``0},System.Func{System.Exception,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: SwitchAsync<T, TReturn>(Result<T>, Func<Exception, Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Monadic.R.SwitchAsync.html#Monadic_R_SwitchAsync__2_Monadic_Result___0__System_Func_System_Exception_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.R.SwitchAsync``2(Monadic.Result{``0},System.Func{System.Exception,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: SwitchAsync(Of T, TReturn)(Result(Of T), Func(Of Exception, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.R.SwitchAsync<T, TReturn>(Monadic.Result<T>, System.Func<System.Exception, System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.R.SwitchAsync(Of T, TReturn)(Monadic.Result(Of T), System.Func(Of System.Exception, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: R.SwitchAsync<T, TReturn>(Result<T>, Func<Exception, Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: R.SwitchAsync(Of T, TReturn)(Result(Of T), Func(Of Exception, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Monadic.R.SwitchAsync``2(Monadic.Result{``0},System.Func{System.Exception,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: SwitchAsync<T, TReturn>(Result<T>, Func<Exception, Task<TReturn>>, Func<T, TReturn>)
  href: api/Monadic.R.SwitchAsync.html#Monadic_R_SwitchAsync__2_Monadic_Result___0__System_Func_System_Exception_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Monadic.R.SwitchAsync``2(Monadic.Result{``0},System.Func{System.Exception,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: SwitchAsync(Of T, TReturn)(Result(Of T), Func(Of Exception, Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Monadic.R.SwitchAsync<T, TReturn>(Monadic.Result<T>, System.Func<System.Exception, System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Monadic.R.SwitchAsync(Of T, TReturn)(Monadic.Result(Of T), System.Func(Of System.Exception, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: R.SwitchAsync<T, TReturn>(Result<T>, Func<Exception, Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: R.SwitchAsync(Of T, TReturn)(Result(Of T), Func(Of Exception, Task(Of TReturn)), Func(Of T, TReturn))
- uid: Monadic.R.SwitchAsync``2(Monadic.Result{``0},System.Func{System.Exception,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: SwitchAsync<T, TReturn>(Result<T>, Func<Exception, TReturn>, Func<T, Task<TReturn>>)
  href: api/Monadic.R.SwitchAsync.html#Monadic_R_SwitchAsync__2_Monadic_Result___0__System_Func_System_Exception___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.R.SwitchAsync``2(Monadic.Result{``0},System.Func{System.Exception,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: SwitchAsync(Of T, TReturn)(Result(Of T), Func(Of Exception, TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.R.SwitchAsync<T, TReturn>(Monadic.Result<T>, System.Func<System.Exception, TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.R.SwitchAsync(Of T, TReturn)(Monadic.Result(Of T), System.Func(Of System.Exception, TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: R.SwitchAsync<T, TReturn>(Result<T>, Func<Exception, TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: R.SwitchAsync(Of T, TReturn)(Result(Of T), Func(Of Exception, TReturn), Func(Of T, Task(Of TReturn)))
- uid: Monadic.R.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{System.Exception,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: SwitchAsync<T, TReturn>(Task<Result<T>>, Func<Exception, Task<TReturn>>, Func<T, Task<TReturn>>)
  href: api/Monadic.R.SwitchAsync.html#Monadic_R_SwitchAsync__2_System_Threading_Tasks_Task_Monadic_Result___0___System_Func_System_Exception_System_Threading_Tasks_Task___1___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.R.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{System.Exception,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: SwitchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of Exception, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.R.SwitchAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<System.Exception, System.Threading.Tasks.Task<TReturn>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.R.SwitchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of System.Exception, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: R.SwitchAsync<T, TReturn>(Task<Result<T>>, Func<Exception, Task<TReturn>>, Func<T, Task<TReturn>>)
  nameWithType.vb: R.SwitchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of Exception, Task(Of TReturn)), Func(Of T, Task(Of TReturn)))
- uid: Monadic.R.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{System.Exception,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name: SwitchAsync<T, TReturn>(Task<Result<T>>, Func<Exception, Task<TReturn>>, Func<T, TReturn>)
  href: api/Monadic.R.SwitchAsync.html#Monadic_R_SwitchAsync__2_System_Threading_Tasks_Task_Monadic_Result___0___System_Func_System_Exception_System_Threading_Tasks_Task___1___System_Func___0___1__
  commentId: M:Monadic.R.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{System.Exception,System.Threading.Tasks.Task{``1}},System.Func{``0,``1})
  name.vb: SwitchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of Exception, Task(Of TReturn)), Func(Of T, TReturn))
  fullName: Monadic.R.SwitchAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<System.Exception, System.Threading.Tasks.Task<TReturn>>, System.Func<T, TReturn>)
  fullName.vb: Monadic.R.SwitchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of System.Exception, System.Threading.Tasks.Task(Of TReturn)), System.Func(Of T, TReturn))
  nameWithType: R.SwitchAsync<T, TReturn>(Task<Result<T>>, Func<Exception, Task<TReturn>>, Func<T, TReturn>)
  nameWithType.vb: R.SwitchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of Exception, Task(Of TReturn)), Func(Of T, TReturn))
- uid: Monadic.R.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{System.Exception,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: SwitchAsync<T, TReturn>(Task<Result<T>>, Func<Exception, TReturn>, Func<T, Task<TReturn>>)
  href: api/Monadic.R.SwitchAsync.html#Monadic_R_SwitchAsync__2_System_Threading_Tasks_Task_Monadic_Result___0___System_Func_System_Exception___1__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.R.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{System.Exception,``1},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: SwitchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of Exception, TReturn), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.R.SwitchAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<System.Exception, TReturn>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.R.SwitchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of System.Exception, TReturn), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: R.SwitchAsync<T, TReturn>(Task<Result<T>>, Func<Exception, TReturn>, Func<T, Task<TReturn>>)
  nameWithType.vb: R.SwitchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of Exception, TReturn), Func(Of T, Task(Of TReturn)))
- uid: Monadic.R.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{System.Exception,``1},System.Func{``0,``1})
  name: SwitchAsync<T, TReturn>(Task<Result<T>>, Func<Exception, TReturn>, Func<T, TReturn>)
  href: api/Monadic.R.SwitchAsync.html#Monadic_R_SwitchAsync__2_System_Threading_Tasks_Task_Monadic_Result___0___System_Func_System_Exception___1__System_Func___0___1__
  commentId: M:Monadic.R.SwitchAsync``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{System.Exception,``1},System.Func{``0,``1})
  name.vb: SwitchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of Exception, TReturn), Func(Of T, TReturn))
  fullName: Monadic.R.SwitchAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<System.Exception, TReturn>, System.Func<T, TReturn>)
  fullName.vb: Monadic.R.SwitchAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of System.Exception, TReturn), System.Func(Of T, TReturn))
  nameWithType: R.SwitchAsync<T, TReturn>(Task<Result<T>>, Func<Exception, TReturn>, Func<T, TReturn>)
  nameWithType.vb: R.SwitchAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of Exception, TReturn), Func(Of T, TReturn))
- uid: Monadic.R.Switch``1(Monadic.Result{``0},System.Action{System.Exception},System.Action{``0})
  name: Switch<T>(Result<T>, Action<Exception>, Action<T>)
  href: api/Monadic.R.Switch.html#Monadic_R_Switch__1_Monadic_Result___0__System_Action_System_Exception__System_Action___0__
  commentId: M:Monadic.R.Switch``1(Monadic.Result{``0},System.Action{System.Exception},System.Action{``0})
  name.vb: Switch(Of T)(Result(Of T), Action(Of Exception), Action(Of T))
  fullName: Monadic.R.Switch<T>(Monadic.Result<T>, System.Action<System.Exception>, System.Action<T>)
  fullName.vb: Monadic.R.Switch(Of T)(Monadic.Result(Of T), System.Action(Of System.Exception), System.Action(Of T))
  nameWithType: R.Switch<T>(Result<T>, Action<Exception>, Action<T>)
  nameWithType.vb: R.Switch(Of T)(Result(Of T), Action(Of Exception), Action(Of T))
- uid: Monadic.R.Switch``2(Monadic.Result{``0},System.Func{System.Exception,``1},System.Func{``0,``1})
  name: Switch<T, TReturn>(Result<T>, Func<Exception, TReturn>, Func<T, TReturn>)
  href: api/Monadic.R.Switch.html#Monadic_R_Switch__2_Monadic_Result___0__System_Func_System_Exception___1__System_Func___0___1__
  commentId: M:Monadic.R.Switch``2(Monadic.Result{``0},System.Func{System.Exception,``1},System.Func{``0,``1})
  name.vb: Switch(Of T, TReturn)(Result(Of T), Func(Of Exception, TReturn), Func(Of T, TReturn))
  fullName: Monadic.R.Switch<T, TReturn>(Monadic.Result<T>, System.Func<System.Exception, TReturn>, System.Func<T, TReturn>)
  fullName.vb: Monadic.R.Switch(Of T, TReturn)(Monadic.Result(Of T), System.Func(Of System.Exception, TReturn), System.Func(Of T, TReturn))
  nameWithType: R.Switch<T, TReturn>(Result<T>, Func<Exception, TReturn>, Func<T, TReturn>)
  nameWithType.vb: R.Switch(Of T, TReturn)(Result(Of T), Func(Of Exception, TReturn), Func(Of T, TReturn))
- uid: Monadic.R.Try*
  name: Try
  href: api/Monadic.R.Try.html
  commentId: Overload:Monadic.R.Try
  fullName: Monadic.R.Try
  nameWithType: R.Try
- uid: Monadic.R.TryAsync*
  name: TryAsync
  href: api/Monadic.R.TryAsync.html
  commentId: Overload:Monadic.R.TryAsync
  fullName: Monadic.R.TryAsync
  nameWithType: R.TryAsync
- uid: Monadic.R.TryAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
  name: TryAsync<T>(Func<Task<T>>)
  href: api/Monadic.R.TryAsync.html#Monadic_R_TryAsync__1_System_Func_System_Threading_Tasks_Task___0___
  commentId: M:Monadic.R.TryAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
  name.vb: TryAsync(Of T)(Func(Of Task(Of T)))
  fullName: Monadic.R.TryAsync<T>(System.Func<System.Threading.Tasks.Task<T>>)
  fullName.vb: Monadic.R.TryAsync(Of T)(System.Func(Of System.Threading.Tasks.Task(Of T)))
  nameWithType: R.TryAsync<T>(Func<Task<T>>)
  nameWithType.vb: R.TryAsync(Of T)(Func(Of Task(Of T)))
- uid: Monadic.R.Try``1(System.Func{``0})
  name: Try<T>(Func<T>)
  href: api/Monadic.R.Try.html#Monadic_R_Try__1_System_Func___0__
  commentId: M:Monadic.R.Try``1(System.Func{``0})
  name.vb: Try(Of T)(Func(Of T))
  fullName: Monadic.R.Try<T>(System.Func<T>)
  fullName.vb: Monadic.R.Try(Of T)(System.Func(Of T))
  nameWithType: R.Try<T>(Func<T>)
  nameWithType.vb: R.Try(Of T)(Func(Of T))
- uid: Monadic.ResultExtensions
  name: ResultExtensions
  href: api/Monadic.ResultExtensions.html
  commentId: T:Monadic.ResultExtensions
  fullName: Monadic.ResultExtensions
  nameWithType: ResultExtensions
- uid: Monadic.ResultExtensions.Audit*
  name: Audit
  href: api/Monadic.ResultExtensions.Audit.html
  commentId: Overload:Monadic.ResultExtensions.Audit
  fullName: Monadic.ResultExtensions.Audit
  nameWithType: ResultExtensions.Audit
- uid: Monadic.ResultExtensions.AuditAsync*
  name: AuditAsync
  href: api/Monadic.ResultExtensions.AuditAsync.html
  commentId: Overload:Monadic.ResultExtensions.AuditAsync
  fullName: Monadic.ResultExtensions.AuditAsync
  nameWithType: ResultExtensions.AuditAsync
- uid: Monadic.ResultExtensions.AuditAsync``1(Monadic.Result{``0},System.Func{Monadic.Result{``0},System.Threading.Tasks.Task})
  name: AuditAsync<T>(Result<T>, Func<Result<T>, Task>)
  href: api/Monadic.ResultExtensions.AuditAsync.html#Monadic_ResultExtensions_AuditAsync__1_Monadic_Result___0__System_Func_Monadic_Result___0__System_Threading_Tasks_Task__
  commentId: M:Monadic.ResultExtensions.AuditAsync``1(Monadic.Result{``0},System.Func{Monadic.Result{``0},System.Threading.Tasks.Task})
  name.vb: AuditAsync(Of T)(Result(Of T), Func(Of Result(Of T), Task))
  fullName: Monadic.ResultExtensions.AuditAsync<T>(Monadic.Result<T>, System.Func<Monadic.Result<T>, System.Threading.Tasks.Task>)
  fullName.vb: Monadic.ResultExtensions.AuditAsync(Of T)(Monadic.Result(Of T), System.Func(Of Monadic.Result(Of T), System.Threading.Tasks.Task))
  nameWithType: ResultExtensions.AuditAsync<T>(Result<T>, Func<Result<T>, Task>)
  nameWithType.vb: ResultExtensions.AuditAsync(Of T)(Result(Of T), Func(Of Result(Of T), Task))
- uid: Monadic.ResultExtensions.AuditAsync``1(Monadic.Result{``0},System.Func{System.Exception,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: AuditAsync<T>(Result<T>, Func<Exception, Task>?, Func<T, Task>?)
  href: api/Monadic.ResultExtensions.AuditAsync.html#Monadic_ResultExtensions_AuditAsync__1_Monadic_Result___0__System_Func_System_Exception_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Monadic.ResultExtensions.AuditAsync``1(Monadic.Result{``0},System.Func{System.Exception,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: AuditAsync(Of T)(Result(Of T), Func(Of Exception, Task), Func(Of T, Task))
  fullName: Monadic.ResultExtensions.AuditAsync<T>(Monadic.Result<T>, System.Func<System.Exception, System.Threading.Tasks.Task>?, System.Func<T, System.Threading.Tasks.Task>?)
  fullName.vb: Monadic.ResultExtensions.AuditAsync(Of T)(Monadic.Result(Of T), System.Func(Of System.Exception, System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: ResultExtensions.AuditAsync<T>(Result<T>, Func<Exception, Task>?, Func<T, Task>?)
  nameWithType.vb: ResultExtensions.AuditAsync(Of T)(Result(Of T), Func(Of Exception, Task), Func(Of T, Task))
- uid: Monadic.ResultExtensions.AuditAsync``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Action{Monadic.Result{``0}})
  name: AuditAsync<T>(Task<Result<T>>, Action<Result<T>>)
  href: api/Monadic.ResultExtensions.AuditAsync.html#Monadic_ResultExtensions_AuditAsync__1_System_Threading_Tasks_Task_Monadic_Result___0___System_Action_Monadic_Result___0___
  commentId: M:Monadic.ResultExtensions.AuditAsync``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Action{Monadic.Result{``0}})
  name.vb: AuditAsync(Of T)(Task(Of Result(Of T)), Action(Of Result(Of T)))
  fullName: Monadic.ResultExtensions.AuditAsync<T>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Action<Monadic.Result<T>>)
  fullName.vb: Monadic.ResultExtensions.AuditAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Action(Of Monadic.Result(Of T)))
  nameWithType: ResultExtensions.AuditAsync<T>(Task<Result<T>>, Action<Result<T>>)
  nameWithType.vb: ResultExtensions.AuditAsync(Of T)(Task(Of Result(Of T)), Action(Of Result(Of T)))
- uid: Monadic.ResultExtensions.AuditAsync``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Action{System.Exception},System.Action{``0})
  name: AuditAsync<T>(Task<Result<T>>, Action<Exception>?, Action<T>?)
  href: api/Monadic.ResultExtensions.AuditAsync.html#Monadic_ResultExtensions_AuditAsync__1_System_Threading_Tasks_Task_Monadic_Result___0___System_Action_System_Exception__System_Action___0__
  commentId: M:Monadic.ResultExtensions.AuditAsync``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Action{System.Exception},System.Action{``0})
  name.vb: AuditAsync(Of T)(Task(Of Result(Of T)), Action(Of Exception), Action(Of T))
  fullName: Monadic.ResultExtensions.AuditAsync<T>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Action<System.Exception>?, System.Action<T>?)
  fullName.vb: Monadic.ResultExtensions.AuditAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Action(Of System.Exception), System.Action(Of T))
  nameWithType: ResultExtensions.AuditAsync<T>(Task<Result<T>>, Action<Exception>?, Action<T>?)
  nameWithType.vb: ResultExtensions.AuditAsync(Of T)(Task(Of Result(Of T)), Action(Of Exception), Action(Of T))
- uid: Monadic.ResultExtensions.AuditAsync``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{Monadic.Result{``0},System.Threading.Tasks.Task})
  name: AuditAsync<T>(Task<Result<T>>, Func<Result<T>, Task>)
  href: api/Monadic.ResultExtensions.AuditAsync.html#Monadic_ResultExtensions_AuditAsync__1_System_Threading_Tasks_Task_Monadic_Result___0___System_Func_Monadic_Result___0__System_Threading_Tasks_Task__
  commentId: M:Monadic.ResultExtensions.AuditAsync``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{Monadic.Result{``0},System.Threading.Tasks.Task})
  name.vb: AuditAsync(Of T)(Task(Of Result(Of T)), Func(Of Result(Of T), Task))
  fullName: Monadic.ResultExtensions.AuditAsync<T>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<Monadic.Result<T>, System.Threading.Tasks.Task>)
  fullName.vb: Monadic.ResultExtensions.AuditAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of Monadic.Result(Of T), System.Threading.Tasks.Task))
  nameWithType: ResultExtensions.AuditAsync<T>(Task<Result<T>>, Func<Result<T>, Task>)
  nameWithType.vb: ResultExtensions.AuditAsync(Of T)(Task(Of Result(Of T)), Func(Of Result(Of T), Task))
- uid: Monadic.ResultExtensions.AuditAsync``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{System.Exception,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name: AuditAsync<T>(Task<Result<T>>, Func<Exception, Task>?, Func<T, Task>?)
  href: api/Monadic.ResultExtensions.AuditAsync.html#Monadic_ResultExtensions_AuditAsync__1_System_Threading_Tasks_Task_Monadic_Result___0___System_Func_System_Exception_System_Threading_Tasks_Task__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Monadic.ResultExtensions.AuditAsync``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{System.Exception,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: AuditAsync(Of T)(Task(Of Result(Of T)), Func(Of Exception, Task), Func(Of T, Task))
  fullName: Monadic.ResultExtensions.AuditAsync<T>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<System.Exception, System.Threading.Tasks.Task>?, System.Func<T, System.Threading.Tasks.Task>?)
  fullName.vb: Monadic.ResultExtensions.AuditAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of System.Exception, System.Threading.Tasks.Task), System.Func(Of T, System.Threading.Tasks.Task))
  nameWithType: ResultExtensions.AuditAsync<T>(Task<Result<T>>, Func<Exception, Task>?, Func<T, Task>?)
  nameWithType.vb: ResultExtensions.AuditAsync(Of T)(Task(Of Result(Of T)), Func(Of Exception, Task), Func(Of T, Task))
- uid: Monadic.ResultExtensions.Audit``1(Monadic.Result{``0},System.Action{Monadic.Result{``0}})
  name: Audit<T>(Result<T>, Action<Result<T>>)
  href: api/Monadic.ResultExtensions.Audit.html#Monadic_ResultExtensions_Audit__1_Monadic_Result___0__System_Action_Monadic_Result___0___
  commentId: M:Monadic.ResultExtensions.Audit``1(Monadic.Result{``0},System.Action{Monadic.Result{``0}})
  name.vb: Audit(Of T)(Result(Of T), Action(Of Result(Of T)))
  fullName: Monadic.ResultExtensions.Audit<T>(Monadic.Result<T>, System.Action<Monadic.Result<T>>)
  fullName.vb: Monadic.ResultExtensions.Audit(Of T)(Monadic.Result(Of T), System.Action(Of Monadic.Result(Of T)))
  nameWithType: ResultExtensions.Audit<T>(Result<T>, Action<Result<T>>)
  nameWithType.vb: ResultExtensions.Audit(Of T)(Result(Of T), Action(Of Result(Of T)))
- uid: Monadic.ResultExtensions.Audit``1(Monadic.Result{``0},System.Action{System.Exception},System.Action{``0})
  name: Audit<T>(Result<T>, Action<Exception>?, Action<T>?)
  href: api/Monadic.ResultExtensions.Audit.html#Monadic_ResultExtensions_Audit__1_Monadic_Result___0__System_Action_System_Exception__System_Action___0__
  commentId: M:Monadic.ResultExtensions.Audit``1(Monadic.Result{``0},System.Action{System.Exception},System.Action{``0})
  name.vb: Audit(Of T)(Result(Of T), Action(Of Exception), Action(Of T))
  fullName: Monadic.ResultExtensions.Audit<T>(Monadic.Result<T>, System.Action<System.Exception>?, System.Action<T>?)
  fullName.vb: Monadic.ResultExtensions.Audit(Of T)(Monadic.Result(Of T), System.Action(Of System.Exception), System.Action(Of T))
  nameWithType: ResultExtensions.Audit<T>(Result<T>, Action<Exception>?, Action<T>?)
  nameWithType.vb: ResultExtensions.Audit(Of T)(Result(Of T), Action(Of Exception), Action(Of T))
- uid: Monadic.ResultExtensions.Bind*
  name: Bind
  href: api/Monadic.ResultExtensions.Bind.html
  commentId: Overload:Monadic.ResultExtensions.Bind
  fullName: Monadic.ResultExtensions.Bind
  nameWithType: ResultExtensions.Bind
- uid: Monadic.ResultExtensions.BindAsync*
  name: BindAsync
  href: api/Monadic.ResultExtensions.BindAsync.html
  commentId: Overload:Monadic.ResultExtensions.BindAsync
  fullName: Monadic.ResultExtensions.BindAsync
  nameWithType: ResultExtensions.BindAsync
- uid: Monadic.ResultExtensions.BindAsync``2(Monadic.Result{``0},System.Func{``0,System.Threading.Tasks.Task{Monadic.Result{``1}}})
  name: BindAsync<T, TReturn>(Result<T>, Func<T, Task<Result<TReturn>>>)
  href: api/Monadic.ResultExtensions.BindAsync.html#Monadic_ResultExtensions_BindAsync__2_Monadic_Result___0__System_Func___0_System_Threading_Tasks_Task_Monadic_Result___1____
  commentId: M:Monadic.ResultExtensions.BindAsync``2(Monadic.Result{``0},System.Func{``0,System.Threading.Tasks.Task{Monadic.Result{``1}}})
  name.vb: BindAsync(Of T, TReturn)(Result(Of T), Func(Of T, Task(Of Result(Of TReturn))))
  fullName: Monadic.ResultExtensions.BindAsync<T, TReturn>(Monadic.Result<T>, System.Func<T, System.Threading.Tasks.Task<Monadic.Result<TReturn>>>)
  fullName.vb: Monadic.ResultExtensions.BindAsync(Of T, TReturn)(Monadic.Result(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of Monadic.Result(Of TReturn))))
  nameWithType: ResultExtensions.BindAsync<T, TReturn>(Result<T>, Func<T, Task<Result<TReturn>>>)
  nameWithType.vb: ResultExtensions.BindAsync(Of T, TReturn)(Result(Of T), Func(Of T, Task(Of Result(Of TReturn))))
- uid: Monadic.ResultExtensions.BindAsync``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,Monadic.Result{``1}})
  name: BindAsync<T, TReturn>(Task<Result<T>>, Func<T, Result<TReturn>>)
  href: api/Monadic.ResultExtensions.BindAsync.html#Monadic_ResultExtensions_BindAsync__2_System_Threading_Tasks_Task_Monadic_Result___0___System_Func___0_Monadic_Result___1___
  commentId: M:Monadic.ResultExtensions.BindAsync``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,Monadic.Result{``1}})
  name.vb: BindAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Result(Of TReturn)))
  fullName: Monadic.ResultExtensions.BindAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<T, Monadic.Result<TReturn>>)
  fullName.vb: Monadic.ResultExtensions.BindAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of T, Monadic.Result(Of TReturn)))
  nameWithType: ResultExtensions.BindAsync<T, TReturn>(Task<Result<T>>, Func<T, Result<TReturn>>)
  nameWithType.vb: ResultExtensions.BindAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Result(Of TReturn)))
- uid: Monadic.ResultExtensions.BindAsync``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{Monadic.Result{``1}}})
  name: BindAsync<T, TReturn>(Task<Result<T>>, Func<T, Task<Result<TReturn>>>)
  href: api/Monadic.ResultExtensions.BindAsync.html#Monadic_ResultExtensions_BindAsync__2_System_Threading_Tasks_Task_Monadic_Result___0___System_Func___0_System_Threading_Tasks_Task_Monadic_Result___1____
  commentId: M:Monadic.ResultExtensions.BindAsync``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{Monadic.Result{``1}}})
  name.vb: BindAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of Result(Of TReturn))))
  fullName: Monadic.ResultExtensions.BindAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<T, System.Threading.Tasks.Task<Monadic.Result<TReturn>>>)
  fullName.vb: Monadic.ResultExtensions.BindAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Monadic.Result(Of TReturn))))
  nameWithType: ResultExtensions.BindAsync<T, TReturn>(Task<Result<T>>, Func<T, Task<Result<TReturn>>>)
  nameWithType.vb: ResultExtensions.BindAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of Result(Of TReturn))))
- uid: Monadic.ResultExtensions.Bind``2(Monadic.Result{``0},System.Func{``0,Monadic.Result{``1}})
  name: Bind<T, TReturn>(Result<T>, Func<T, Result<TReturn>>)
  href: api/Monadic.ResultExtensions.Bind.html#Monadic_ResultExtensions_Bind__2_Monadic_Result___0__System_Func___0_Monadic_Result___1___
  commentId: M:Monadic.ResultExtensions.Bind``2(Monadic.Result{``0},System.Func{``0,Monadic.Result{``1}})
  name.vb: Bind(Of T, TReturn)(Result(Of T), Func(Of T, Result(Of TReturn)))
  fullName: Monadic.ResultExtensions.Bind<T, TReturn>(Monadic.Result<T>, System.Func<T, Monadic.Result<TReturn>>)
  fullName.vb: Monadic.ResultExtensions.Bind(Of T, TReturn)(Monadic.Result(Of T), System.Func(Of T, Monadic.Result(Of TReturn)))
  nameWithType: ResultExtensions.Bind<T, TReturn>(Result<T>, Func<T, Result<TReturn>>)
  nameWithType.vb: ResultExtensions.Bind(Of T, TReturn)(Result(Of T), Func(Of T, Result(Of TReturn)))
- uid: Monadic.ResultExtensions.Filter*
  name: Filter
  href: api/Monadic.ResultExtensions.Filter.html
  commentId: Overload:Monadic.ResultExtensions.Filter
  fullName: Monadic.ResultExtensions.Filter
  nameWithType: ResultExtensions.Filter
- uid: Monadic.ResultExtensions.FilterAsync*
  name: FilterAsync
  href: api/Monadic.ResultExtensions.FilterAsync.html
  commentId: Overload:Monadic.ResultExtensions.FilterAsync
  fullName: Monadic.ResultExtensions.FilterAsync
  nameWithType: ResultExtensions.FilterAsync
- uid: Monadic.ResultExtensions.FilterAsync``1(Monadic.Result{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: FilterAsync<T>(Result<T>, Func<T, Task<bool>>)
  href: api/Monadic.ResultExtensions.FilterAsync.html#Monadic_ResultExtensions_FilterAsync__1_Monadic_Result___0__System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Monadic.ResultExtensions.FilterAsync``1(Monadic.Result{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: FilterAsync(Of T)(Result(Of T), Func(Of T, Task(Of Boolean)))
  fullName: Monadic.ResultExtensions.FilterAsync<T>(Monadic.Result<T>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Monadic.ResultExtensions.FilterAsync(Of T)(Monadic.Result(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: ResultExtensions.FilterAsync<T>(Result<T>, Func<T, Task<bool>>)
  nameWithType.vb: ResultExtensions.FilterAsync(Of T)(Result(Of T), Func(Of T, Task(Of Boolean)))
- uid: Monadic.ResultExtensions.FilterAsync``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,System.Boolean})
  name: FilterAsync<T>(Task<Result<T>>, Func<T, bool>)
  href: api/Monadic.ResultExtensions.FilterAsync.html#Monadic_ResultExtensions_FilterAsync__1_System_Threading_Tasks_Task_Monadic_Result___0___System_Func___0_System_Boolean__
  commentId: M:Monadic.ResultExtensions.FilterAsync``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,System.Boolean})
  name.vb: FilterAsync(Of T)(Task(Of Result(Of T)), Func(Of T, Boolean))
  fullName: Monadic.ResultExtensions.FilterAsync<T>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<T, bool>)
  fullName.vb: Monadic.ResultExtensions.FilterAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of T, Boolean))
  nameWithType: ResultExtensions.FilterAsync<T>(Task<Result<T>>, Func<T, bool>)
  nameWithType.vb: ResultExtensions.FilterAsync(Of T)(Task(Of Result(Of T)), Func(Of T, Boolean))
- uid: Monadic.ResultExtensions.FilterAsync``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name: FilterAsync<T>(Task<Result<T>>, Func<T, Task<bool>>)
  href: api/Monadic.ResultExtensions.FilterAsync.html#Monadic_ResultExtensions_FilterAsync__1_System_Threading_Tasks_Task_Monadic_Result___0___System_Func___0_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Monadic.ResultExtensions.FilterAsync``1(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: FilterAsync(Of T)(Task(Of Result(Of T)), Func(Of T, Task(Of Boolean)))
  fullName: Monadic.ResultExtensions.FilterAsync<T>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<T, System.Threading.Tasks.Task<bool>>)
  fullName.vb: Monadic.ResultExtensions.FilterAsync(Of T)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of Boolean)))
  nameWithType: ResultExtensions.FilterAsync<T>(Task<Result<T>>, Func<T, Task<bool>>)
  nameWithType.vb: ResultExtensions.FilterAsync(Of T)(Task(Of Result(Of T)), Func(Of T, Task(Of Boolean)))
- uid: Monadic.ResultExtensions.Filter``1(Monadic.Result{``0},System.Func{``0,System.Boolean})
  name: Filter<T>(Result<T>, Func<T, bool>)
  href: api/Monadic.ResultExtensions.Filter.html#Monadic_ResultExtensions_Filter__1_Monadic_Result___0__System_Func___0_System_Boolean__
  commentId: M:Monadic.ResultExtensions.Filter``1(Monadic.Result{``0},System.Func{``0,System.Boolean})
  name.vb: Filter(Of T)(Result(Of T), Func(Of T, Boolean))
  fullName: Monadic.ResultExtensions.Filter<T>(Monadic.Result<T>, System.Func<T, bool>)
  fullName.vb: Monadic.ResultExtensions.Filter(Of T)(Monadic.Result(Of T), System.Func(Of T, Boolean))
  nameWithType: ResultExtensions.Filter<T>(Result<T>, Func<T, bool>)
  nameWithType.vb: ResultExtensions.Filter(Of T)(Result(Of T), Func(Of T, Boolean))
- uid: Monadic.ResultExtensions.Map*
  name: Map
  href: api/Monadic.ResultExtensions.Map.html
  commentId: Overload:Monadic.ResultExtensions.Map
  fullName: Monadic.ResultExtensions.Map
  nameWithType: ResultExtensions.Map
- uid: Monadic.ResultExtensions.MapAsync*
  name: MapAsync
  href: api/Monadic.ResultExtensions.MapAsync.html
  commentId: Overload:Monadic.ResultExtensions.MapAsync
  fullName: Monadic.ResultExtensions.MapAsync
  nameWithType: ResultExtensions.MapAsync
- uid: Monadic.ResultExtensions.MapAsync``2(Monadic.Result{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MapAsync<T, TReturn>(Result<T>, Func<T, Task<TReturn>>)
  href: api/Monadic.ResultExtensions.MapAsync.html#Monadic_ResultExtensions_MapAsync__2_Monadic_Result___0__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.ResultExtensions.MapAsync``2(Monadic.Result{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MapAsync(Of T, TReturn)(Result(Of T), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.ResultExtensions.MapAsync<T, TReturn>(Monadic.Result<T>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.ResultExtensions.MapAsync(Of T, TReturn)(Monadic.Result(Of T), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: ResultExtensions.MapAsync<T, TReturn>(Result<T>, Func<T, Task<TReturn>>)
  nameWithType.vb: ResultExtensions.MapAsync(Of T, TReturn)(Result(Of T), Func(Of T, Task(Of TReturn)))
- uid: Monadic.ResultExtensions.MapAsync``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: MapAsync<T, TReturn>(Task<Result<T>>, Func<T, Task<TReturn>>)
  href: api/Monadic.ResultExtensions.MapAsync.html#Monadic_ResultExtensions_MapAsync__2_System_Threading_Tasks_Task_Monadic_Result___0___System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Monadic.ResultExtensions.MapAsync``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: MapAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of TReturn)))
  fullName: Monadic.ResultExtensions.MapAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<T, System.Threading.Tasks.Task<TReturn>>)
  fullName.vb: Monadic.ResultExtensions.MapAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of T, System.Threading.Tasks.Task(Of TReturn)))
  nameWithType: ResultExtensions.MapAsync<T, TReturn>(Task<Result<T>>, Func<T, Task<TReturn>>)
  nameWithType.vb: ResultExtensions.MapAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, Task(Of TReturn)))
- uid: Monadic.ResultExtensions.MapAsync``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,``1})
  name: MapAsync<T, TReturn>(Task<Result<T>>, Func<T, TReturn>)
  href: api/Monadic.ResultExtensions.MapAsync.html#Monadic_ResultExtensions_MapAsync__2_System_Threading_Tasks_Task_Monadic_Result___0___System_Func___0___1__
  commentId: M:Monadic.ResultExtensions.MapAsync``2(System.Threading.Tasks.Task{Monadic.Result{``0}},System.Func{``0,``1})
  name.vb: MapAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, TReturn))
  fullName: Monadic.ResultExtensions.MapAsync<T, TReturn>(System.Threading.Tasks.Task<Monadic.Result<T>>, System.Func<T, TReturn>)
  fullName.vb: Monadic.ResultExtensions.MapAsync(Of T, TReturn)(System.Threading.Tasks.Task(Of Monadic.Result(Of T)), System.Func(Of T, TReturn))
  nameWithType: ResultExtensions.MapAsync<T, TReturn>(Task<Result<T>>, Func<T, TReturn>)
  nameWithType.vb: ResultExtensions.MapAsync(Of T, TReturn)(Task(Of Result(Of T)), Func(Of T, TReturn))
- uid: Monadic.ResultExtensions.Map``2(Monadic.Result{``0},System.Func{``0,``1})
  name: Map<T, TReturn>(Result<T>, Func<T, TReturn>)
  href: api/Monadic.ResultExtensions.Map.html#Monadic_ResultExtensions_Map__2_Monadic_Result___0__System_Func___0___1__
  commentId: M:Monadic.ResultExtensions.Map``2(Monadic.Result{``0},System.Func{``0,``1})
  name.vb: Map(Of T, TReturn)(Result(Of T), Func(Of T, TReturn))
  fullName: Monadic.ResultExtensions.Map<T, TReturn>(Monadic.Result<T>, System.Func<T, TReturn>)
  fullName.vb: Monadic.ResultExtensions.Map(Of T, TReturn)(Monadic.Result(Of T), System.Func(Of T, TReturn))
  nameWithType: ResultExtensions.Map<T, TReturn>(Result<T>, Func<T, TReturn>)
  nameWithType.vb: ResultExtensions.Map(Of T, TReturn)(Result(Of T), Func(Of T, TReturn))
- uid: Monadic.Result`1
  name: Result<T>
  href: api/Monadic.Result-1.html
  commentId: T:Monadic.Result`1
  name.vb: Result(Of T)
  fullName: Monadic.Result<T>
  fullName.vb: Monadic.Result(Of T)
  nameWithType: Result<T>
  nameWithType.vb: Result(Of T)
- uid: Monadic.Result`1.#ctor
  name: Result()
  href: api/Monadic.Result-1.-ctor.html#Monadic_Result_1__ctor
  commentId: M:Monadic.Result`1.#ctor
  name.vb: New()
  fullName: Monadic.Result<T>.Result()
  fullName.vb: Monadic.Result(Of T).New()
  nameWithType: Result<T>.Result()
  nameWithType.vb: Result(Of T).New()
- uid: Monadic.Result`1.#ctor(Monadic.Result{`0})
  name: Result(Result<T>)
  href: api/Monadic.Result-1.-ctor.html#Monadic_Result_1__ctor_Monadic_Result__0__
  commentId: M:Monadic.Result`1.#ctor(Monadic.Result{`0})
  name.vb: New(Result(Of T))
  fullName: Monadic.Result<T>.Result(Monadic.Result<T>)
  fullName.vb: Monadic.Result(Of T).New(Monadic.Result(Of T))
  nameWithType: Result<T>.Result(Result<T>)
  nameWithType.vb: Result(Of T).New(Result(Of T))
- uid: Monadic.Result`1.#ctor*
  name: Result
  href: api/Monadic.Result-1.-ctor.html
  commentId: Overload:Monadic.Result`1.#ctor
  name.vb: New
  fullName: Monadic.Result<T>.Result
  fullName.vb: Monadic.Result(Of T).New
  nameWithType: Result<T>.Result
  nameWithType.vb: Result(Of T).New
- uid: Monadic.Result`1.AsTask
  name: AsTask()
  href: api/Monadic.Result-1.AsTask.html#Monadic_Result_1_AsTask
  commentId: M:Monadic.Result`1.AsTask
  fullName: Monadic.Result<T>.AsTask()
  fullName.vb: Monadic.Result(Of T).AsTask()
  nameWithType: Result<T>.AsTask()
  nameWithType.vb: Result(Of T).AsTask()
- uid: Monadic.Result`1.AsTask*
  name: AsTask
  href: api/Monadic.Result-1.AsTask.html
  commentId: Overload:Monadic.Result`1.AsTask
  fullName: Monadic.Result<T>.AsTask
  fullName.vb: Monadic.Result(Of T).AsTask
  nameWithType: Result<T>.AsTask
  nameWithType.vb: Result(Of T).AsTask
- uid: Monadic.Result`1.EqualityContract
  name: EqualityContract
  href: api/Monadic.Result-1.EqualityContract.html#Monadic_Result_1_EqualityContract
  commentId: P:Monadic.Result`1.EqualityContract
  fullName: Monadic.Result<T>.EqualityContract
  fullName.vb: Monadic.Result(Of T).EqualityContract
  nameWithType: Result<T>.EqualityContract
  nameWithType.vb: Result(Of T).EqualityContract
- uid: Monadic.Result`1.EqualityContract*
  name: EqualityContract
  href: api/Monadic.Result-1.EqualityContract.html
  commentId: Overload:Monadic.Result`1.EqualityContract
  fullName: Monadic.Result<T>.EqualityContract
  fullName.vb: Monadic.Result(Of T).EqualityContract
  nameWithType: Result<T>.EqualityContract
  nameWithType.vb: Result(Of T).EqualityContract
- uid: Monadic.Result`1.Equals(Monadic.Result{`0})
  name: Equals(Result<T>?)
  href: api/Monadic.Result-1.Equals.html#Monadic_Result_1_Equals_Monadic_Result__0__
  commentId: M:Monadic.Result`1.Equals(Monadic.Result{`0})
  name.vb: Equals(Result(Of T))
  fullName: Monadic.Result<T>.Equals(Monadic.Result<T>?)
  fullName.vb: Monadic.Result(Of T).Equals(Monadic.Result(Of T))
  nameWithType: Result<T>.Equals(Result<T>?)
  nameWithType.vb: Result(Of T).Equals(Result(Of T))
- uid: Monadic.Result`1.Equals(System.Object)
  name: Equals(object?)
  href: api/Monadic.Result-1.Equals.html#Monadic_Result_1_Equals_System_Object_
  commentId: M:Monadic.Result`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Monadic.Result<T>.Equals(object?)
  fullName.vb: Monadic.Result(Of T).Equals(Object)
  nameWithType: Result<T>.Equals(object?)
  nameWithType.vb: Result(Of T).Equals(Object)
- uid: Monadic.Result`1.Equals*
  name: Equals
  href: api/Monadic.Result-1.Equals.html
  commentId: Overload:Monadic.Result`1.Equals
  fullName: Monadic.Result<T>.Equals
  fullName.vb: Monadic.Result(Of T).Equals
  nameWithType: Result<T>.Equals
  nameWithType.vb: Result(Of T).Equals
- uid: Monadic.Result`1.GetEnumerator
  name: GetEnumerator()
  href: api/Monadic.Result-1.GetEnumerator.html#Monadic_Result_1_GetEnumerator
  commentId: M:Monadic.Result`1.GetEnumerator
  fullName: Monadic.Result<T>.GetEnumerator()
  fullName.vb: Monadic.Result(Of T).GetEnumerator()
  nameWithType: Result<T>.GetEnumerator()
  nameWithType.vb: Result(Of T).GetEnumerator()
- uid: Monadic.Result`1.GetEnumerator*
  name: GetEnumerator
  href: api/Monadic.Result-1.GetEnumerator.html
  commentId: Overload:Monadic.Result`1.GetEnumerator
  fullName: Monadic.Result<T>.GetEnumerator
  fullName.vb: Monadic.Result(Of T).GetEnumerator
  nameWithType: Result<T>.GetEnumerator
  nameWithType.vb: Result(Of T).GetEnumerator
- uid: Monadic.Result`1.GetHashCode
  name: GetHashCode()
  href: api/Monadic.Result-1.GetHashCode.html#Monadic_Result_1_GetHashCode
  commentId: M:Monadic.Result`1.GetHashCode
  fullName: Monadic.Result<T>.GetHashCode()
  fullName.vb: Monadic.Result(Of T).GetHashCode()
  nameWithType: Result<T>.GetHashCode()
  nameWithType.vb: Result(Of T).GetHashCode()
- uid: Monadic.Result`1.GetHashCode*
  name: GetHashCode
  href: api/Monadic.Result-1.GetHashCode.html
  commentId: Overload:Monadic.Result`1.GetHashCode
  fullName: Monadic.Result<T>.GetHashCode
  fullName.vb: Monadic.Result(Of T).GetHashCode
  nameWithType: Result<T>.GetHashCode
  nameWithType.vb: Result(Of T).GetHashCode
- uid: Monadic.Result`1.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Monadic.Result-1.PrintMembers.html#Monadic_Result_1_PrintMembers_System_Text_StringBuilder_
  commentId: M:Monadic.Result`1.PrintMembers(System.Text.StringBuilder)
  fullName: Monadic.Result<T>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Monadic.Result(Of T).PrintMembers(System.Text.StringBuilder)
  nameWithType: Result<T>.PrintMembers(StringBuilder)
  nameWithType.vb: Result(Of T).PrintMembers(StringBuilder)
- uid: Monadic.Result`1.PrintMembers*
  name: PrintMembers
  href: api/Monadic.Result-1.PrintMembers.html
  commentId: Overload:Monadic.Result`1.PrintMembers
  fullName: Monadic.Result<T>.PrintMembers
  fullName.vb: Monadic.Result(Of T).PrintMembers
  nameWithType: Result<T>.PrintMembers
  nameWithType.vb: Result(Of T).PrintMembers
- uid: Monadic.Result`1.ToString
  name: ToString()
  href: api/Monadic.Result-1.ToString.html#Monadic_Result_1_ToString
  commentId: M:Monadic.Result`1.ToString
  fullName: Monadic.Result<T>.ToString()
  fullName.vb: Monadic.Result(Of T).ToString()
  nameWithType: Result<T>.ToString()
  nameWithType.vb: Result(Of T).ToString()
- uid: Monadic.Result`1.ToString*
  name: ToString
  href: api/Monadic.Result-1.ToString.html
  commentId: Overload:Monadic.Result`1.ToString
  fullName: Monadic.Result<T>.ToString
  fullName.vb: Monadic.Result(Of T).ToString
  nameWithType: Result<T>.ToString
  nameWithType.vb: Result(Of T).ToString
- uid: Monadic.Result`1.op_Equality(Monadic.Result{`0},Monadic.Result{`0})
  name: operator ==(Result<T>?, Result<T>?)
  href: api/Monadic.Result-1.op_Equality.html#Monadic_Result_1_op_Equality_Monadic_Result__0__Monadic_Result__0__
  commentId: M:Monadic.Result`1.op_Equality(Monadic.Result{`0},Monadic.Result{`0})
  name.vb: =(Result(Of T), Result(Of T))
  fullName: Monadic.Result<T>.operator ==(Monadic.Result<T>?, Monadic.Result<T>?)
  fullName.vb: Monadic.Result(Of T).=(Monadic.Result(Of T), Monadic.Result(Of T))
  nameWithType: Result<T>.operator ==(Result<T>?, Result<T>?)
  nameWithType.vb: Result(Of T).=(Result(Of T), Result(Of T))
- uid: Monadic.Result`1.op_Equality*
  name: operator ==
  href: api/Monadic.Result-1.op_Equality.html
  commentId: Overload:Monadic.Result`1.op_Equality
  name.vb: =
  fullName: Monadic.Result<T>.operator ==
  fullName.vb: Monadic.Result(Of T).=
  nameWithType: Result<T>.operator ==
  nameWithType.vb: Result(Of T).=
- uid: Monadic.Result`1.op_Implicit(Monadic.Err)~Monadic.Result{`0}
  name: implicit operator Result<T>(Err)
  href: api/Monadic.Result-1.op_Implicit.html#Monadic_Result_1_op_Implicit_Monadic_Err__Monadic_Result__0_
  commentId: M:Monadic.Result`1.op_Implicit(Monadic.Err)~Monadic.Result{`0}
  name.vb: CType(Err)
  fullName: Monadic.Result<T>.implicit operator Monadic.Result<T>(Monadic.Err)
  fullName.vb: Monadic.Result(Of T).CType(Monadic.Err)
  nameWithType: Result<T>.implicit operator Result<T>(Err)
  nameWithType.vb: Result(Of T).CType(Err)
- uid: Monadic.Result`1.op_Implicit(`0)~Monadic.Result{`0}
  name: implicit operator Result<T>(T)
  href: api/Monadic.Result-1.op_Implicit.html#Monadic_Result_1_op_Implicit__0__Monadic_Result__0_
  commentId: M:Monadic.Result`1.op_Implicit(`0)~Monadic.Result{`0}
  name.vb: CType(T)
  fullName: Monadic.Result<T>.implicit operator Monadic.Result<T>(T)
  fullName.vb: Monadic.Result(Of T).CType(T)
  nameWithType: Result<T>.implicit operator Result<T>(T)
  nameWithType.vb: Result(Of T).CType(T)
- uid: Monadic.Result`1.op_Implicit*
  name: implicit operator
  href: api/Monadic.Result-1.op_Implicit.html
  commentId: Overload:Monadic.Result`1.op_Implicit
  name.vb: CType
  fullName: Monadic.Result<T>.implicit operator
  fullName.vb: Monadic.Result(Of T).CType
  nameWithType: Result<T>.implicit operator
  nameWithType.vb: Result(Of T).CType
- uid: Monadic.Result`1.op_Inequality(Monadic.Result{`0},Monadic.Result{`0})
  name: operator !=(Result<T>?, Result<T>?)
  href: api/Monadic.Result-1.op_Inequality.html#Monadic_Result_1_op_Inequality_Monadic_Result__0__Monadic_Result__0__
  commentId: M:Monadic.Result`1.op_Inequality(Monadic.Result{`0},Monadic.Result{`0})
  name.vb: <>(Result(Of T), Result(Of T))
  fullName: Monadic.Result<T>.operator !=(Monadic.Result<T>?, Monadic.Result<T>?)
  fullName.vb: Monadic.Result(Of T).<>(Monadic.Result(Of T), Monadic.Result(Of T))
  nameWithType: Result<T>.operator !=(Result<T>?, Result<T>?)
  nameWithType.vb: Result(Of T).<>(Result(Of T), Result(Of T))
- uid: Monadic.Result`1.op_Inequality*
  name: operator !=
  href: api/Monadic.Result-1.op_Inequality.html
  commentId: Overload:Monadic.Result`1.op_Inequality
  name.vb: <>
  fullName: Monadic.Result<T>.operator !=
  fullName.vb: Monadic.Result(Of T).<>
  nameWithType: Result<T>.operator !=
  nameWithType.vb: Result(Of T).<>
- uid: Monadic.Result`1.{Clone}$
  name: <Clone>$()
  href: api/Monadic.Result-1.-Clone--.html#Monadic_Result_1__Clone__
  commentId: M:Monadic.Result`1.{Clone}$
  fullName: Monadic.Result<T>.<Clone>$()
  fullName.vb: Monadic.Result(Of T).<Clone>$()
  nameWithType: Result<T>.<Clone>$()
  nameWithType.vb: Result(Of T).<Clone>$()
- uid: Monadic.Result`1.{Clone}$*
  name: <Clone>$
  href: api/Monadic.Result-1.-Clone--.html
  commentId: Overload:Monadic.Result`1.{Clone}$
  fullName: Monadic.Result<T>.<Clone>$
  fullName.vb: Monadic.Result(Of T).<Clone>$
  nameWithType: Result<T>.<Clone>$
  nameWithType.vb: Result(Of T).<Clone>$
- uid: Monadic.Right`2
  name: Right<TLeft, TRight>
  href: api/Monadic.Right-2.html
  commentId: T:Monadic.Right`2
  name.vb: Right(Of TLeft, TRight)
  fullName: Monadic.Right<TLeft, TRight>
  fullName.vb: Monadic.Right(Of TLeft, TRight)
  nameWithType: Right<TLeft, TRight>
  nameWithType.vb: Right(Of TLeft, TRight)
- uid: Monadic.Right`2.EqualityContract
  name: EqualityContract
  href: api/Monadic.Right-2.EqualityContract.html#Monadic_Right_2_EqualityContract
  commentId: P:Monadic.Right`2.EqualityContract
  fullName: Monadic.Right<TLeft, TRight>.EqualityContract
  fullName.vb: Monadic.Right(Of TLeft, TRight).EqualityContract
  nameWithType: Right<TLeft, TRight>.EqualityContract
  nameWithType.vb: Right(Of TLeft, TRight).EqualityContract
- uid: Monadic.Right`2.EqualityContract*
  name: EqualityContract
  href: api/Monadic.Right-2.EqualityContract.html
  commentId: Overload:Monadic.Right`2.EqualityContract
  fullName: Monadic.Right<TLeft, TRight>.EqualityContract
  fullName.vb: Monadic.Right(Of TLeft, TRight).EqualityContract
  nameWithType: Right<TLeft, TRight>.EqualityContract
  nameWithType.vb: Right(Of TLeft, TRight).EqualityContract
- uid: Monadic.Right`2.Equals(Monadic.Either{`0,`1})
  name: Equals(Either<TLeft, TRight>?)
  href: api/Monadic.Right-2.Equals.html#Monadic_Right_2_Equals_Monadic_Either__0__1__
  commentId: M:Monadic.Right`2.Equals(Monadic.Either{`0,`1})
  name.vb: Equals(Either(Of TLeft, TRight))
  fullName: Monadic.Right<TLeft, TRight>.Equals(Monadic.Either<TLeft, TRight>?)
  fullName.vb: Monadic.Right(Of TLeft, TRight).Equals(Monadic.Either(Of TLeft, TRight))
  nameWithType: Right<TLeft, TRight>.Equals(Either<TLeft, TRight>?)
  nameWithType.vb: Right(Of TLeft, TRight).Equals(Either(Of TLeft, TRight))
- uid: Monadic.Right`2.Equals(Monadic.Right{`0,`1})
  name: Equals(Right<TLeft, TRight>?)
  href: api/Monadic.Right-2.Equals.html#Monadic_Right_2_Equals_Monadic_Right__0__1__
  commentId: M:Monadic.Right`2.Equals(Monadic.Right{`0,`1})
  name.vb: Equals(Right(Of TLeft, TRight))
  fullName: Monadic.Right<TLeft, TRight>.Equals(Monadic.Right<TLeft, TRight>?)
  fullName.vb: Monadic.Right(Of TLeft, TRight).Equals(Monadic.Right(Of TLeft, TRight))
  nameWithType: Right<TLeft, TRight>.Equals(Right<TLeft, TRight>?)
  nameWithType.vb: Right(Of TLeft, TRight).Equals(Right(Of TLeft, TRight))
- uid: Monadic.Right`2.Equals(System.Object)
  name: Equals(object?)
  href: api/Monadic.Right-2.Equals.html#Monadic_Right_2_Equals_System_Object_
  commentId: M:Monadic.Right`2.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Monadic.Right<TLeft, TRight>.Equals(object?)
  fullName.vb: Monadic.Right(Of TLeft, TRight).Equals(Object)
  nameWithType: Right<TLeft, TRight>.Equals(object?)
  nameWithType.vb: Right(Of TLeft, TRight).Equals(Object)
- uid: Monadic.Right`2.Equals*
  name: Equals
  href: api/Monadic.Right-2.Equals.html
  commentId: Overload:Monadic.Right`2.Equals
  fullName: Monadic.Right<TLeft, TRight>.Equals
  fullName.vb: Monadic.Right(Of TLeft, TRight).Equals
  nameWithType: Right<TLeft, TRight>.Equals
  nameWithType.vb: Right(Of TLeft, TRight).Equals
- uid: Monadic.Right`2.GetHashCode
  name: GetHashCode()
  href: api/Monadic.Right-2.GetHashCode.html#Monadic_Right_2_GetHashCode
  commentId: M:Monadic.Right`2.GetHashCode
  fullName: Monadic.Right<TLeft, TRight>.GetHashCode()
  fullName.vb: Monadic.Right(Of TLeft, TRight).GetHashCode()
  nameWithType: Right<TLeft, TRight>.GetHashCode()
  nameWithType.vb: Right(Of TLeft, TRight).GetHashCode()
- uid: Monadic.Right`2.GetHashCode*
  name: GetHashCode
  href: api/Monadic.Right-2.GetHashCode.html
  commentId: Overload:Monadic.Right`2.GetHashCode
  fullName: Monadic.Right<TLeft, TRight>.GetHashCode
  fullName.vb: Monadic.Right(Of TLeft, TRight).GetHashCode
  nameWithType: Right<TLeft, TRight>.GetHashCode
  nameWithType.vb: Right(Of TLeft, TRight).GetHashCode
- uid: Monadic.Right`2.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Monadic.Right-2.PrintMembers.html#Monadic_Right_2_PrintMembers_System_Text_StringBuilder_
  commentId: M:Monadic.Right`2.PrintMembers(System.Text.StringBuilder)
  fullName: Monadic.Right<TLeft, TRight>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Monadic.Right(Of TLeft, TRight).PrintMembers(System.Text.StringBuilder)
  nameWithType: Right<TLeft, TRight>.PrintMembers(StringBuilder)
  nameWithType.vb: Right(Of TLeft, TRight).PrintMembers(StringBuilder)
- uid: Monadic.Right`2.PrintMembers*
  name: PrintMembers
  href: api/Monadic.Right-2.PrintMembers.html
  commentId: Overload:Monadic.Right`2.PrintMembers
  fullName: Monadic.Right<TLeft, TRight>.PrintMembers
  fullName.vb: Monadic.Right(Of TLeft, TRight).PrintMembers
  nameWithType: Right<TLeft, TRight>.PrintMembers
  nameWithType.vb: Right(Of TLeft, TRight).PrintMembers
- uid: Monadic.Right`2.ToString
  name: ToString()
  href: api/Monadic.Right-2.ToString.html#Monadic_Right_2_ToString
  commentId: M:Monadic.Right`2.ToString
  fullName: Monadic.Right<TLeft, TRight>.ToString()
  fullName.vb: Monadic.Right(Of TLeft, TRight).ToString()
  nameWithType: Right<TLeft, TRight>.ToString()
  nameWithType.vb: Right(Of TLeft, TRight).ToString()
- uid: Monadic.Right`2.ToString*
  name: ToString
  href: api/Monadic.Right-2.ToString.html
  commentId: Overload:Monadic.Right`2.ToString
  fullName: Monadic.Right<TLeft, TRight>.ToString
  fullName.vb: Monadic.Right(Of TLeft, TRight).ToString
  nameWithType: Right<TLeft, TRight>.ToString
  nameWithType.vb: Right(Of TLeft, TRight).ToString
- uid: Monadic.Right`2.Value
  name: Value
  href: api/Monadic.Right-2.Value.html#Monadic_Right_2_Value
  commentId: P:Monadic.Right`2.Value
  fullName: Monadic.Right<TLeft, TRight>.Value
  fullName.vb: Monadic.Right(Of TLeft, TRight).Value
  nameWithType: Right<TLeft, TRight>.Value
  nameWithType.vb: Right(Of TLeft, TRight).Value
- uid: Monadic.Right`2.Value*
  name: Value
  href: api/Monadic.Right-2.Value.html
  commentId: Overload:Monadic.Right`2.Value
  fullName: Monadic.Right<TLeft, TRight>.Value
  fullName.vb: Monadic.Right(Of TLeft, TRight).Value
  nameWithType: Right<TLeft, TRight>.Value
  nameWithType.vb: Right(Of TLeft, TRight).Value
- uid: Monadic.Right`2.op_Equality(Monadic.Right{`0,`1},Monadic.Right{`0,`1})
  name: operator ==(Right<TLeft, TRight>?, Right<TLeft, TRight>?)
  href: api/Monadic.Right-2.op_Equality.html#Monadic_Right_2_op_Equality_Monadic_Right__0__1__Monadic_Right__0__1__
  commentId: M:Monadic.Right`2.op_Equality(Monadic.Right{`0,`1},Monadic.Right{`0,`1})
  name.vb: =(Right(Of TLeft, TRight), Right(Of TLeft, TRight))
  fullName: Monadic.Right<TLeft, TRight>.operator ==(Monadic.Right<TLeft, TRight>?, Monadic.Right<TLeft, TRight>?)
  fullName.vb: Monadic.Right(Of TLeft, TRight).=(Monadic.Right(Of TLeft, TRight), Monadic.Right(Of TLeft, TRight))
  nameWithType: Right<TLeft, TRight>.operator ==(Right<TLeft, TRight>?, Right<TLeft, TRight>?)
  nameWithType.vb: Right(Of TLeft, TRight).=(Right(Of TLeft, TRight), Right(Of TLeft, TRight))
- uid: Monadic.Right`2.op_Equality*
  name: operator ==
  href: api/Monadic.Right-2.op_Equality.html
  commentId: Overload:Monadic.Right`2.op_Equality
  name.vb: =
  fullName: Monadic.Right<TLeft, TRight>.operator ==
  fullName.vb: Monadic.Right(Of TLeft, TRight).=
  nameWithType: Right<TLeft, TRight>.operator ==
  nameWithType.vb: Right(Of TLeft, TRight).=
- uid: Monadic.Right`2.op_Inequality(Monadic.Right{`0,`1},Monadic.Right{`0,`1})
  name: operator !=(Right<TLeft, TRight>?, Right<TLeft, TRight>?)
  href: api/Monadic.Right-2.op_Inequality.html#Monadic_Right_2_op_Inequality_Monadic_Right__0__1__Monadic_Right__0__1__
  commentId: M:Monadic.Right`2.op_Inequality(Monadic.Right{`0,`1},Monadic.Right{`0,`1})
  name.vb: <>(Right(Of TLeft, TRight), Right(Of TLeft, TRight))
  fullName: Monadic.Right<TLeft, TRight>.operator !=(Monadic.Right<TLeft, TRight>?, Monadic.Right<TLeft, TRight>?)
  fullName.vb: Monadic.Right(Of TLeft, TRight).<>(Monadic.Right(Of TLeft, TRight), Monadic.Right(Of TLeft, TRight))
  nameWithType: Right<TLeft, TRight>.operator !=(Right<TLeft, TRight>?, Right<TLeft, TRight>?)
  nameWithType.vb: Right(Of TLeft, TRight).<>(Right(Of TLeft, TRight), Right(Of TLeft, TRight))
- uid: Monadic.Right`2.op_Inequality*
  name: operator !=
  href: api/Monadic.Right-2.op_Inequality.html
  commentId: Overload:Monadic.Right`2.op_Inequality
  name.vb: <>
  fullName: Monadic.Right<TLeft, TRight>.operator !=
  fullName.vb: Monadic.Right(Of TLeft, TRight).<>
  nameWithType: Right<TLeft, TRight>.operator !=
  nameWithType.vb: Right(Of TLeft, TRight).<>
- uid: Monadic.Right`2.{Clone}$
  name: <Clone>$()
  href: api/Monadic.Right-2.-Clone--.html#Monadic_Right_2__Clone__
  commentId: M:Monadic.Right`2.{Clone}$
  fullName: Monadic.Right<TLeft, TRight>.<Clone>$()
  fullName.vb: Monadic.Right(Of TLeft, TRight).<Clone>$()
  nameWithType: Right<TLeft, TRight>.<Clone>$()
  nameWithType.vb: Right(Of TLeft, TRight).<Clone>$()
- uid: Monadic.Right`2.{Clone}$*
  name: <Clone>$
  href: api/Monadic.Right-2.-Clone--.html
  commentId: Overload:Monadic.Right`2.{Clone}$
  fullName: Monadic.Right<TLeft, TRight>.<Clone>$
  fullName.vb: Monadic.Right(Of TLeft, TRight).<Clone>$
  nameWithType: Right<TLeft, TRight>.<Clone>$
  nameWithType.vb: Right(Of TLeft, TRight).<Clone>$
- uid: Monadic.Some`1
  name: Some<T>
  href: api/Monadic.Some-1.html
  commentId: T:Monadic.Some`1
  name.vb: Some(Of T)
  fullName: Monadic.Some<T>
  fullName.vb: Monadic.Some(Of T)
  nameWithType: Some<T>
  nameWithType.vb: Some(Of T)
- uid: Monadic.Some`1.EqualityContract
  name: EqualityContract
  href: api/Monadic.Some-1.EqualityContract.html#Monadic_Some_1_EqualityContract
  commentId: P:Monadic.Some`1.EqualityContract
  fullName: Monadic.Some<T>.EqualityContract
  fullName.vb: Monadic.Some(Of T).EqualityContract
  nameWithType: Some<T>.EqualityContract
  nameWithType.vb: Some(Of T).EqualityContract
- uid: Monadic.Some`1.EqualityContract*
  name: EqualityContract
  href: api/Monadic.Some-1.EqualityContract.html
  commentId: Overload:Monadic.Some`1.EqualityContract
  fullName: Monadic.Some<T>.EqualityContract
  fullName.vb: Monadic.Some(Of T).EqualityContract
  nameWithType: Some<T>.EqualityContract
  nameWithType.vb: Some(Of T).EqualityContract
- uid: Monadic.Some`1.Equals(Monadic.Maybe{`0})
  name: Equals(Maybe<T>?)
  href: api/Monadic.Some-1.Equals.html#Monadic_Some_1_Equals_Monadic_Maybe__0__
  commentId: M:Monadic.Some`1.Equals(Monadic.Maybe{`0})
  name.vb: Equals(Maybe(Of T))
  fullName: Monadic.Some<T>.Equals(Monadic.Maybe<T>?)
  fullName.vb: Monadic.Some(Of T).Equals(Monadic.Maybe(Of T))
  nameWithType: Some<T>.Equals(Maybe<T>?)
  nameWithType.vb: Some(Of T).Equals(Maybe(Of T))
- uid: Monadic.Some`1.Equals(Monadic.Some{`0})
  name: Equals(Some<T>?)
  href: api/Monadic.Some-1.Equals.html#Monadic_Some_1_Equals_Monadic_Some__0__
  commentId: M:Monadic.Some`1.Equals(Monadic.Some{`0})
  name.vb: Equals(Some(Of T))
  fullName: Monadic.Some<T>.Equals(Monadic.Some<T>?)
  fullName.vb: Monadic.Some(Of T).Equals(Monadic.Some(Of T))
  nameWithType: Some<T>.Equals(Some<T>?)
  nameWithType.vb: Some(Of T).Equals(Some(Of T))
- uid: Monadic.Some`1.Equals(System.Object)
  name: Equals(object?)
  href: api/Monadic.Some-1.Equals.html#Monadic_Some_1_Equals_System_Object_
  commentId: M:Monadic.Some`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Monadic.Some<T>.Equals(object?)
  fullName.vb: Monadic.Some(Of T).Equals(Object)
  nameWithType: Some<T>.Equals(object?)
  nameWithType.vb: Some(Of T).Equals(Object)
- uid: Monadic.Some`1.Equals*
  name: Equals
  href: api/Monadic.Some-1.Equals.html
  commentId: Overload:Monadic.Some`1.Equals
  fullName: Monadic.Some<T>.Equals
  fullName.vb: Monadic.Some(Of T).Equals
  nameWithType: Some<T>.Equals
  nameWithType.vb: Some(Of T).Equals
- uid: Monadic.Some`1.GetHashCode
  name: GetHashCode()
  href: api/Monadic.Some-1.GetHashCode.html#Monadic_Some_1_GetHashCode
  commentId: M:Monadic.Some`1.GetHashCode
  fullName: Monadic.Some<T>.GetHashCode()
  fullName.vb: Monadic.Some(Of T).GetHashCode()
  nameWithType: Some<T>.GetHashCode()
  nameWithType.vb: Some(Of T).GetHashCode()
- uid: Monadic.Some`1.GetHashCode*
  name: GetHashCode
  href: api/Monadic.Some-1.GetHashCode.html
  commentId: Overload:Monadic.Some`1.GetHashCode
  fullName: Monadic.Some<T>.GetHashCode
  fullName.vb: Monadic.Some(Of T).GetHashCode
  nameWithType: Some<T>.GetHashCode
  nameWithType.vb: Some(Of T).GetHashCode
- uid: Monadic.Some`1.PrintMembers(System.Text.StringBuilder)
  name: PrintMembers(StringBuilder)
  href: api/Monadic.Some-1.PrintMembers.html#Monadic_Some_1_PrintMembers_System_Text_StringBuilder_
  commentId: M:Monadic.Some`1.PrintMembers(System.Text.StringBuilder)
  fullName: Monadic.Some<T>.PrintMembers(System.Text.StringBuilder)
  fullName.vb: Monadic.Some(Of T).PrintMembers(System.Text.StringBuilder)
  nameWithType: Some<T>.PrintMembers(StringBuilder)
  nameWithType.vb: Some(Of T).PrintMembers(StringBuilder)
- uid: Monadic.Some`1.PrintMembers*
  name: PrintMembers
  href: api/Monadic.Some-1.PrintMembers.html
  commentId: Overload:Monadic.Some`1.PrintMembers
  fullName: Monadic.Some<T>.PrintMembers
  fullName.vb: Monadic.Some(Of T).PrintMembers
  nameWithType: Some<T>.PrintMembers
  nameWithType.vb: Some(Of T).PrintMembers
- uid: Monadic.Some`1.Value
  name: Value
  href: api/Monadic.Some-1.Value.html#Monadic_Some_1_Value
  commentId: P:Monadic.Some`1.Value
  fullName: Monadic.Some<T>.Value
  fullName.vb: Monadic.Some(Of T).Value
  nameWithType: Some<T>.Value
  nameWithType.vb: Some(Of T).Value
- uid: Monadic.Some`1.Value*
  name: Value
  href: api/Monadic.Some-1.Value.html
  commentId: Overload:Monadic.Some`1.Value
  fullName: Monadic.Some<T>.Value
  fullName.vb: Monadic.Some(Of T).Value
  nameWithType: Some<T>.Value
  nameWithType.vb: Some(Of T).Value
- uid: Monadic.Some`1.op_Equality(Monadic.Some{`0},Monadic.Some{`0})
  name: operator ==(Some<T>?, Some<T>?)
  href: api/Monadic.Some-1.op_Equality.html#Monadic_Some_1_op_Equality_Monadic_Some__0__Monadic_Some__0__
  commentId: M:Monadic.Some`1.op_Equality(Monadic.Some{`0},Monadic.Some{`0})
  name.vb: =(Some(Of T), Some(Of T))
  fullName: Monadic.Some<T>.operator ==(Monadic.Some<T>?, Monadic.Some<T>?)
  fullName.vb: Monadic.Some(Of T).=(Monadic.Some(Of T), Monadic.Some(Of T))
  nameWithType: Some<T>.operator ==(Some<T>?, Some<T>?)
  nameWithType.vb: Some(Of T).=(Some(Of T), Some(Of T))
- uid: Monadic.Some`1.op_Equality*
  name: operator ==
  href: api/Monadic.Some-1.op_Equality.html
  commentId: Overload:Monadic.Some`1.op_Equality
  name.vb: =
  fullName: Monadic.Some<T>.operator ==
  fullName.vb: Monadic.Some(Of T).=
  nameWithType: Some<T>.operator ==
  nameWithType.vb: Some(Of T).=
- uid: Monadic.Some`1.op_Inequality(Monadic.Some{`0},Monadic.Some{`0})
  name: operator !=(Some<T>?, Some<T>?)
  href: api/Monadic.Some-1.op_Inequality.html#Monadic_Some_1_op_Inequality_Monadic_Some__0__Monadic_Some__0__
  commentId: M:Monadic.Some`1.op_Inequality(Monadic.Some{`0},Monadic.Some{`0})
  name.vb: <>(Some(Of T), Some(Of T))
  fullName: Monadic.Some<T>.operator !=(Monadic.Some<T>?, Monadic.Some<T>?)
  fullName.vb: Monadic.Some(Of T).<>(Monadic.Some(Of T), Monadic.Some(Of T))
  nameWithType: Some<T>.operator !=(Some<T>?, Some<T>?)
  nameWithType.vb: Some(Of T).<>(Some(Of T), Some(Of T))
- uid: Monadic.Some`1.op_Inequality*
  name: operator !=
  href: api/Monadic.Some-1.op_Inequality.html
  commentId: Overload:Monadic.Some`1.op_Inequality
  name.vb: <>
  fullName: Monadic.Some<T>.operator !=
  fullName.vb: Monadic.Some(Of T).<>
  nameWithType: Some<T>.operator !=
  nameWithType.vb: Some(Of T).<>
- uid: Monadic.Some`1.{Clone}$
  name: <Clone>$()
  href: api/Monadic.Some-1.-Clone--.html#Monadic_Some_1__Clone__
  commentId: M:Monadic.Some`1.{Clone}$
  fullName: Monadic.Some<T>.<Clone>$()
  fullName.vb: Monadic.Some(Of T).<Clone>$()
  nameWithType: Some<T>.<Clone>$()
  nameWithType.vb: Some(Of T).<Clone>$()
- uid: Monadic.Some`1.{Clone}$*
  name: <Clone>$
  href: api/Monadic.Some-1.-Clone--.html
  commentId: Overload:Monadic.Some`1.{Clone}$
  fullName: Monadic.Some<T>.<Clone>$
  fullName.vb: Monadic.Some(Of T).<Clone>$
  nameWithType: Some<T>.<Clone>$
  nameWithType.vb: Some(Of T).<Clone>$
